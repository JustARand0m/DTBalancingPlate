   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "TouchPlate.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.VADC0_C0_2_IRQHandler,"ax",%progbits
  20              	 .align 1
  21              	 .global VADC0_C0_2_IRQHandler
  22              	 .thumb
  23              	 .thumb_func
  25              	VADC0_C0_2_IRQHandler:
  26              	.LFB419:
  27              	 .file 1 "../TouchPlate.c"
   1:../TouchPlate.c **** #include "TouchPlate.h"
   2:../TouchPlate.c **** 
   3:../TouchPlate.c **** /**
   4:../TouchPlate.c ****  * This interrupt routine gets executed when the ADC returns with an result after getting triggered
   5:../TouchPlate.c ****  * After receiving the value of the x axis, the ADC needs be re-triggered to swap 2 pins to access 
   6:../TouchPlate.c ****  * This routine sends the x and y coordinates via UART.
   7:../TouchPlate.c ****  *
   8:../TouchPlate.c ****  * The PIN mapping on the Panel:
   9:../TouchPlate.c ****  * 2.15 => PIN 1 (UR)
  10:../TouchPlate.c ****  * VDD 3.3V => PIN 2 (LR)
  11:../TouchPlate.c ****  * GND => PIN 4 (UL)
  12:../TouchPlate.c ****  * 2.14 => PIN 5 (LL)
  13:../TouchPlate.c ****  */
  14:../TouchPlate.c **** void irAdcMeasurementPlate()
  15:../TouchPlate.c **** {
  28              	 .loc 1 15 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 7FB5     	 push {r0,r1,r2,r3,r4,r5,r6,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 32
  35              	 .cfi_offset 4,-16
  36              	 .cfi_offset 5,-12
  37              	 .cfi_offset 6,-8
  38              	 .cfi_offset 14,-4
  16:../TouchPlate.c **** 	static uint16_t x = 0, y = 0;
  17:../TouchPlate.c **** 
  18:../TouchPlate.c **** 	/* Read out conversion results */
  19:../TouchPlate.c ****     uint16_t result_Channel_A = ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Channel_A_handle);
  39              	 .loc 1 19 0
  40 0002 1B48     	 ldr r0,.L5
  41 0004 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
  42              	.LVL0:
  43              	.LBB29:
  44              	.LBB30:
  45              	 .file 2 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 270:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 272:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 273:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 317:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 319:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 320:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 321:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 322:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 323:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 324:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 325:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 326:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 327:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 328:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 329:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 330:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 331:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 332:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 333:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 334:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 335:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 336:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 337:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 338:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 339:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 340:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 341:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 342:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 343:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 344:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 345:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 346:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 347:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 348:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 349:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 350:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 351:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 352:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 353:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 354:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 355:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 356:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 357:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 358:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 359:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 360:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 361:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 363:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 364:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 365:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 366:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 367:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 368:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 369:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 370:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 371:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 372:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 373:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 374:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to read input level of port pin.
 375:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 376:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return uint32_t input logic level. Range:0-1
 377:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 378:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 379:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 380:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 381:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 382:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  None
 383:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 384:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 385:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 386:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 387:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 388:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 389:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 390:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t pin_status;
 391:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_
 392:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 393:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 394:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 395:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 396:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 397:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 398:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 399:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 400:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 401:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 402:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 403:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 404:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 405:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 406:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     pin_status = DIGITAL_IO_GetInput(&DIGITAL_IO_0);
 407:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if(pin_status == 1)
 408:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 409:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 410:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 411:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     else
 412:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 413:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 414:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 415:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 416:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 417:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 418:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 419:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 420:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 421:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE uint32_t DIGITAL_IO_GetInput(const DIGITAL_IO_t *const handler)
 422:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 423:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_GetInput: handler null pointer", handler != NULL);
 424:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h ****   return XMC_GPIO_GetInput(handler->gpio_port, handler->gpio_pin);
  46              	 .loc 2 424 0
  47 0008 1A49     	 ldr r1,.L5+4
  48 000a 0A68     	 ldr r2,[r1]
  49              	.LVL1:
  50              	.LBB31:
  51              	.LBB32:
  52              	 .file 3 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_gpio.h"
   1:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 258:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 261:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** }
 262:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 284:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 287:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** }
 288:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 313:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** }
 314:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 335:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
  53              	 .loc 3 337 0
  54 000c 0C7C     	 ldrb r4,[r1,#16]
  55 000e 536A     	 ldr r3,[r2,#36]
  56 0010 1949     	 ldr r1,.L5+8
  57 0012 E340     	 lsrs r3,r3,r4
  58              	.LBE32:
  59              	.LBE31:
  60              	.LBE30:
  61              	.LBE29:
  20:../TouchPlate.c **** 
  21:../TouchPlate.c ****     if (DIGITAL_IO_GetInput(&DIGITAL_IO_PLATE_UR) == 1) {
  62              	 .loc 1 21 0
  63 0014 13F0010F 	 tst r3,#1
  64 0018 184B     	 ldr r3,.L5+12
  65 001a 0AD0     	 beq .L2
  22:../TouchPlate.c ****     	x = result_Channel_A;
  66              	 .loc 1 22 0
  67 001c 0880     	 strh r0,[r1]
  68              	.LVL2:
  69              	.LBB33:
  70              	.LBB34:
  71              	.LBB35:
  72              	.LBB36:
 312:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** }
  73              	 .loc 3 312 0
  74 001e 187C     	 ldrb r0,[r3,#16]
  75              	.LVL3:
  76              	.LBE36:
  77              	.LBE35:
 370:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** }
  78              	 .loc 2 370 0
  79 0020 1968     	 ldr r1,[r3]
  80              	.LVL4:
  81              	.LBB39:
  82              	.LBB37:
 312:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** }
  83              	 .loc 3 312 0
  84 0022 4FF00113 	 mov r3,#65537
  85 0026 03FA00F0 	 lsl r0,r3,r0
  86              	.LBE37:
  87              	.LBE39:
  88              	.LBE34:
  89              	.LBE33:
  90              	.LBB42:
  91              	.LBB43:
  92              	.LBB44:
  93 002a A340     	 lsls r3,r3,r4
  94              	.LBE44:
  95              	.LBE43:
  96              	.LBE42:
  97              	.LBB47:
  98              	.LBB41:
  99              	.LBB40:
 100              	.LBB38:
 101 002c 4860     	 str r0,[r1,#4]
 102              	.LVL5:
 103              	.LBE38:
 104              	.LBE40:
 105              	.LBE41:
 106              	.LBE47:
 107              	.LBB48:
 108              	.LBB46:
 109              	.LBB45:
 110 002e 5360     	 str r3,[r2,#4]
 111 0030 1BE0     	 b .L1
 112              	.LVL6:
 113              	.L2:
 114              	.LBE45:
 115              	.LBE46:
 116              	.LBE48:
 117              	.LBB49:
 118              	.LBB50:
 119              	.LBB51:
 120              	.LBB52:
 121              	.LBB53:
 122 0032 1E7C     	 ldrb r6,[r3,#16]
 123              	.LBE53:
 124              	.LBE52:
 370:G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 125              	 .loc 2 370 0
 126 0034 1D68     	 ldr r5,[r3]
 127              	.LVL7:
 128              	.LBB56:
 129              	.LBB54:
 312:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_gpio.h **** }
 130              	 .loc 3 312 0
 131 0036 4FF00113 	 mov r3,#65537
 132 003a 03FA06F6 	 lsl r6,r3,r6
 133              	.LBE54:
 134              	.LBE56:
 135              	.LBE51:
 136              	.LBE50:
 137              	.LBB59:
 138              	.LBB60:
 139              	.LBB61:
 140 003e A340     	 lsls r3,r3,r4
 141              	.LBE61:
 142              	.LBE60:
 143              	.LBE59:
 144              	.LBB64:
 145              	.LBB58:
 146              	.LBB57:
 147              	.LBB55:
 148 0040 6E60     	 str r6,[r5,#4]
 149              	.LVL8:
 150              	.LBE55:
 151              	.LBE57:
 152              	.LBE58:
 153              	.LBE64:
 154              	.LBB65:
 155              	.LBB63:
 156              	.LBB62:
 157 0042 5360     	 str r3,[r2,#4]
 158              	.LBE62:
 159              	.LBE63:
 160              	.LBE65:
  23:../TouchPlate.c **** 
  24:../TouchPlate.c ****     	/* Swap x and y axis on the panel */
  25:../TouchPlate.c ****         DIGITAL_IO_ToggleOutput(&DIGITAL_IO_PLATE_LL);
  26:../TouchPlate.c ****         DIGITAL_IO_ToggleOutput(&DIGITAL_IO_PLATE_UR);
  27:../TouchPlate.c **** 
  28:../TouchPlate.c ****     } else {
  29:../TouchPlate.c ****     	y = result_Channel_A;
  30:../TouchPlate.c **** 
  31:../TouchPlate.c ****     	/* Swap x and y axis on the panel */
  32:../TouchPlate.c ****         DIGITAL_IO_ToggleOutput(&DIGITAL_IO_PLATE_LL);
  33:../TouchPlate.c ****         DIGITAL_IO_ToggleOutput(&DIGITAL_IO_PLATE_UR);
  34:../TouchPlate.c ****         
  35:../TouchPlate.c ****         /* minimal value is checked*/
  36:../TouchPlate.c ****         x -= 1500;
 161              	 .loc 1 36 0
 162 0044 0A88     	 ldrh r2,[r1]
 163              	.LVL9:
 164 0046 A2F2DC52 	 subw r2,r2,#1500
 165 004a 92B2     	 uxth r2,r2
 166 004c 0A80     	 strh r2,[r1]
  37:../TouchPlate.c ****         y -= 1500;
 167              	 .loc 1 37 0
 168 004e A0F2DC53 	 subw r3,r0,#1500
 169 0052 0B49     	 ldr r1,.L5+16
 170 0054 9BB2     	 uxth r3,r3
 171 0056 0B80     	 strh r3,[r1]
 172              	.LVL10:
  38:../TouchPlate.c **** 
  39:../TouchPlate.c ****         if (x<0) x = 0;
  40:../TouchPlate.c ****         if (y<0) y = 0;
  41:../TouchPlate.c **** 
  42:../TouchPlate.c **** 
  43:../TouchPlate.c **** 
  44:../TouchPlate.c ****         /* Transmit the x and y position via UART */
  45:../TouchPlate.c ****         const int BUFFSZ = 12;
  46:../TouchPlate.c ****         uint8_t buff[BUFFSZ];
  47:../TouchPlate.c **** 
  48:../TouchPlate.c ****         /* Message data format */
  49:../TouchPlate.c ****         sprintf((char*)buff, "$%04d %04d!", x, y);
 173              	 .loc 1 49 0
 174 0058 01A8     	 add r0,sp,#4
 175              	.LVL11:
 176 005a 0A49     	 ldr r1,.L5+20
 177 005c FFF7FEFF 	 bl sprintf
 178              	.LVL12:
  50:../TouchPlate.c **** 
  51:../TouchPlate.c ****         UART_Transmit(&UART_0, buff, BUFFSZ);
 179              	 .loc 1 51 0
 180 0060 0948     	 ldr r0,.L5+24
 181 0062 01A9     	 add r1,sp,#4
 182              	.LVL13:
 183 0064 0C22     	 movs r2,#12
 184 0066 FFF7FEFF 	 bl UART_Transmit
 185              	.LVL14:
 186              	.LVL15:
 187              	.L1:
 188              	.LBE49:
  52:../TouchPlate.c ****     }
  53:../TouchPlate.c **** }
 189              	 .loc 1 53 0
 190 006a 04B0     	 add sp,sp,#16
 191              	.LCFI1:
 192              	 .cfi_def_cfa_offset 16
 193              	 
 194 006c 70BD     	 pop {r4,r5,r6,pc}
 195              	.L6:
 196 006e 00BF     	 .align 2
 197              	.L5:
 198 0070 00000000 	 .word ADC_MEASUREMENT_Channel_A_handle
 199 0074 00000000 	 .word DIGITAL_IO_PLATE_UR
 200 0078 00000000 	 .word .LANCHOR0
 201 007c 00000000 	 .word DIGITAL_IO_PLATE_LL
 202 0080 00000000 	 .word .LANCHOR1
 203 0084 00000000 	 .word .LC0
 204 0088 00000000 	 .word UART_0
 205              	 .cfi_endproc
 206              	.LFE419:
 208              	 .section .text.CCU42_1_IRQHandler,"ax",%progbits
 209              	 .align 1
 210              	 .global CCU42_1_IRQHandler
 211              	 .thumb
 212              	 .thumb_func
 214              	CCU42_1_IRQHandler:
 215              	.LFB420:
  54:../TouchPlate.c **** 
  55:../TouchPlate.c **** 
  56:../TouchPlate.c **** /**
  57:../TouchPlate.c ****  * Interrupt routine for Timer_Plate_Scan.
  58:../TouchPlate.c ****  * This handler starts the measurement of the plate.
  59:../TouchPlate.c ****  */
  60:../TouchPlate.c **** void irTimerPlateScan() {
 216              	 .loc 1 60 0
 217              	 .cfi_startproc
 218              	 
 219              	 
 220 0000 08B5     	 push {r3,lr}
 221              	.LCFI2:
 222              	 .cfi_def_cfa_offset 8
 223              	 .cfi_offset 3,-8
 224              	 .cfi_offset 14,-4
  61:../TouchPlate.c **** 	ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 225              	 .loc 1 61 0
 226 0002 0448     	 ldr r0,.L8
 227 0004 FFF7FEFF 	 bl ADC_MEASUREMENT_StartConversion
 228              	.LVL16:
  62:../TouchPlate.c **** 	TIMER_ClearEvent(&TIMER_PLATE_SCAN);
 229              	 .loc 1 62 0
 230 0008 0348     	 ldr r0,.L8+4
  63:../TouchPlate.c **** }
 231              	 .loc 1 63 0
 232 000a BDE80840 	 pop {r3,lr}
 233              	.LCFI3:
 234              	 .cfi_restore 14
 235              	 .cfi_restore 3
 236              	 .cfi_def_cfa_offset 0
  62:../TouchPlate.c **** 	TIMER_ClearEvent(&TIMER_PLATE_SCAN);
 237              	 .loc 1 62 0
 238 000e FFF7FEBF 	 b TIMER_ClearEvent
 239              	.LVL17:
 240              	.L9:
 241 0012 00BF     	 .align 2
 242              	.L8:
 243 0014 00000000 	 .word ADC_MEASUREMENT_0
 244 0018 00000000 	 .word TIMER_PLATE_SCAN
 245              	 .cfi_endproc
 246              	.LFE420:
 248              	 .comm servos,12,4
 249              	 .comm read_data,13,1
 250              	 .section .bss.x.10878,"aw",%nobits
 251              	 .align 1
 252              	 .set .LANCHOR0,.+0
 255              	x.10878:
 256 0000 0000     	 .space 2
 257              	 .section .rodata.str1.1,"aMS",%progbits,1
 258              	.LC0:
 259 0000 24253034 	 .ascii "$%04d %04d!\000"
 259      64202530 
 259      34642100 
 260              	 .section .bss.y.10879,"aw",%nobits
 261              	 .align 1
 262              	 .set .LANCHOR1,.+0
 265              	y.10879:
 266 0000 0000     	 .space 2
 267              	 .text
 268              	.Letext0:
 269              	 .file 4 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 270              	 .file 5 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 271              	 .file 6 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 272              	 .file 7 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc4_scu.h"
 273              	 .file 8 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc4_gpio.h"
 274              	 .file 9 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_ccu4.h"
 275              	 .file 10 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 276              	 .file 11 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_usic.h"
 277              	 .file 12 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_uart.h"
 278              	 .file 13 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/UART/uart.h"
 279              	 .file 14 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_vadc.h"
 280              	 .file 15 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/GLOBAL_ADC/global_adc.h"
 281              	 .file 16 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/ADC_MEASUREMENT/adc_measurement.h"
 282              	 .file 17 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/TIMER/timer.h"
 283              	 .file 18 "../globals.h"
 284              	 .file 19 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include/core_cm4.h"
 285              	 .file 20 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 286              	 .file 21 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/UART/uart_extern.h"
 287              	 .file 22 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/ADC_MEASUREMENT/ADC_MEASUREMENT_Extern.h"
 288              	 .file 23 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 289              	 .file 24 "G:/dt_g1_balancing_plate_wise20192020/XMC/Dave/Generated/TIMER/timer_extern.h"
 290              	 .file 25 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TouchPlate.c
    {standard input}:20     .text.VADC0_C0_2_IRQHandler:00000000 $t
    {standard input}:25     .text.VADC0_C0_2_IRQHandler:00000000 VADC0_C0_2_IRQHandler
    {standard input}:198    .text.VADC0_C0_2_IRQHandler:00000070 $d
    {standard input}:209    .text.CCU42_1_IRQHandler:00000000 $t
    {standard input}:214    .text.CCU42_1_IRQHandler:00000000 CCU42_1_IRQHandler
    {standard input}:243    .text.CCU42_1_IRQHandler:00000014 $d
                            *COM*:0000000c servos
                            *COM*:0000000d read_data
    {standard input}:251    .bss.x.10878:00000000 $d
    {standard input}:255    .bss.x.10878:00000000 x.10878
    {standard input}:261    .bss.y.10879:00000000 $d
    {standard input}:265    .bss.y.10879:00000000 y.10879
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.ca5ae67a873a4952d630d8e4120b9e3e
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fe7d912fc917043c98742c35eddd8cff
                           .group:00000000 wm4.config.h.216.aad1ef7bee4fb69981cb38ce62f84d9c
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.4e89a3f145accdcb1100c37260c088e6
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.xmc_device.h.65.5c0d35eb1a6853ff8300ab2ec1b944b0
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.57f124f9262f3dbf77da6a6506ffb430
                           .group:00000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:00000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1500.3eca65ed9ba7f90e09c1ffcb0b3f5724
                           .group:00000000 wm4.xmc_common.h.98.806f17e888fd51d0e4be2ad115163551
                           .group:00000000 wm4.xmc4_scu.h.113.70a903f8782696023ba1d8628d8ac2d6
                           .group:00000000 wm4.xmc_gpio.h.51.99a4c0bd520ffa931ac6d8600dce89c4
                           .group:00000000 wm4.xmc4_gpio_map.h.77.d73d78de7f4c322ab8caf8e71725793e
                           .group:00000000 wm4.xmc4_gpio.h.79.ce6c49508b5a7769c66e7e3c21dcdfe4
                           .group:00000000 wm4.clock_xmc4_conf.h.59.249296d4aac332e3d32466c2fa9b8708
                           .group:00000000 wm4.xmc4_ccu4_map.h.52.bc30e2611b29f8dfd82b8d766e443456
                           .group:00000000 wm4.global_ccu4_conf.h.53.171028076f31067af187aedd932f16c4
                           .group:00000000 wm4.pwm_conf.h.91.de1ad5462f924101b28d4a83f92c3daa
                           .group:00000000 wm4.cpu_ctrl_xmc4_conf.h.50.edadd17ec66dd565cecf7b80b7a19d87
                           .group:00000000 wm4.xmc_usic.h.94.805ea2394b0d7b136939c22b7f55383a
                           .group:00000000 wm4.xmc4_usic_map.h.58.c72ca24cddd51bff3428962310391fa9
                           .group:00000000 wm4.xmc_uart.h.109.448e7c5ea9d234a4e4112f61aa70ddeb
                           .group:00000000 wm4.uart_conf.h.56.c388d77d60f598933dd023b5e4d2a364
                           .group:00000000 wm4.xmc_vadc_map.h.62.9df0d76d5c18106393e06548a14f52be
                           .group:00000000 wm4.xmc_vadc.h.237.61ed5fbd33c6c067453e9298502ec2a9
                           .group:00000000 wm4.global_adc_conf.h.79.ad3d3c9f6f306cd3e989ca81b8da07e7
                           .group:00000000 wm4.adc_measurement_conf.h.92.cccc29e4ddbd0754ad04857ffa4fd661
                           .group:00000000 wm4.adc_measurement.h.114.7294eeab9e0acd8ff18f74e708162a72
                           .group:00000000 wm4.digital_io_conf.h.60.7e6ff84a67e8f07f78124480426d8243
                           .group:00000000 wm4.timer_conf.h.54.996b42824e61eb96ec9d683fbb4da995
                           .group:00000000 wm4.interrupt_conf.h.50.3baa91fd89684bb4ea6f6b4889884661
                           .group:00000000 wm4.interrupt_extern.h.49.ccc9b9895c91382260480912eaa9a3c6
                           .group:00000000 wm4.globals.h.6.d2acb0a2178ab61b10a1b091a76451b6
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.56707660962b21991903f1fee7c13bb3
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.65.7c7009d79fb33c27bcf8e2214c76b343

UNDEFINED SYMBOLS
ADC_MEASUREMENT_GetResult
sprintf
UART_Transmit
ADC_MEASUREMENT_Channel_A_handle
DIGITAL_IO_PLATE_UR
DIGITAL_IO_PLATE_LL
UART_0
ADC_MEASUREMENT_StartConversion
TIMER_ClearEvent
ADC_MEASUREMENT_0
TIMER_PLATE_SCAN
