   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
  20              	 .align 1
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USBD_lReadFifo:
  25              	.LFB175:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>           
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond 
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  61:../Libraries/XMCLib/src/xmc_usbd.c **** 
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  64:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  66:../Libraries/XMCLib/src/xmc_usbd.c **** #include <xmc_usbd.h>
  67:../Libraries/XMCLib/src/xmc_usbd.c **** 
  68:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  69:../Libraries/XMCLib/src/xmc_usbd.c **** 	
  70:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  71:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  72:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  79:../Libraries/XMCLib/src/xmc_usbd.c **** 
  80:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  84:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  86:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  87:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  88:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  90:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  91:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  92:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  XMC_USBD_DEVICE_t xmc_device;
  95:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  96:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  97:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  99:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 100:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 101:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 103:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 104:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 105:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 106:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 107:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 108:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 109:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 110:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 111:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 112:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 113:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 114:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 115:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 116:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 117:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 118:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 119:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 120:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 121:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 122:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 123:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 124:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 125:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 126:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 127:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_t *usbd_init;
 128:../Libraries/XMCLib/src/xmc_usbd.c **** 
 129:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 130:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 131:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 132:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 133:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 137:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 138:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 139:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 140:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 141:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 142:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 143:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 144:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 145:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 146:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 147:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 148:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 149:../Libraries/XMCLib/src/xmc_usbd.c **** 
 150:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 151:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 152:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 153:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 154:../Libraries/XMCLib/src/xmc_usbd.c **** {
 155:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 158:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 159:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 160:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 161:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 162:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 163:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 165:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 166:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 167:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 168:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 171:../Libraries/XMCLib/src/xmc_usbd.c **** };
 172:../Libraries/XMCLib/src/xmc_usbd.c **** 
 173:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 174:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 175:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 176:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 177:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 178:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 179:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 180:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj) 
 181:../Libraries/XMCLib/src/xmc_usbd.c **** {
 182:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 187:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 188:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 189:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 191:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 192:../Libraries/XMCLib/src/xmc_usbd.c **** }
 193:../Libraries/XMCLib/src/xmc_usbd.c **** 
 194:../Libraries/XMCLib/src/xmc_usbd.c **** 
 195:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 196:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 197:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 198:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 199:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 200:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 201:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 202:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 203:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 204:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 205:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count) 
 206:../Libraries/XMCLib/src/xmc_usbd.c **** {
  27              	 .loc 1 206 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	.LVL0:
  32 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 20
  35              	 .cfi_offset 4,-20
  36              	 .cfi_offset 5,-16
  37              	 .cfi_offset 6,-12
  38              	 .cfi_offset 7,-8
  39              	 .cfi_offset 14,-4
 207:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num];
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
  40              	 .loc 1 211 0
  41 0002 1F4C     	 ldr r4,.L17
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
  42              	 .loc 1 214 0
  43 0004 04EB8003 	 add r3,r4,r0,lsl#2
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
  44              	 .loc 1 211 0
  45 0008 D4F8E051 	 ldr r5,[r4,#480]
  46              	.LVL1:
  47              	 .loc 1 214 0
  48 000c D3F8C431 	 ldr r3,[r3,#452]
  49 0010 1B68     	 ldr r3,[r3]
  50              	.LVL2:
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
  51              	 .loc 1 218 0
  52 0012 1B04     	 lsls r3,r3,#16
  53              	.LVL3:
  54 0014 32D5     	 bpl .L1
 219:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 220:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 221:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
  55              	 .loc 1 222 0
  56 0016 3423     	 movs r3,#52
  57 0018 03FB0043 	 mla r3,r3,r0,r4
  58              	.LVL4:
  59 001c 5B6A     	 ldr r3,[r3,#36]
  60              	.LVL5:
  61 001e 6BB3     	 cbz r3,.L1
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
  62              	 .loc 1 215 0
  63 0020 8E08     	 lsrs r6,r1,#2
  64              	.LVL6:
  65 0022 0022     	 movs r2,#0
  66              	.L3:
  67              	.LVL7:
 223:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 224:../Libraries/XMCLib/src/xmc_usbd.c **** 	/*Do Nothing*/
 225:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 226:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 227:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 228:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U;i < word_count; i++)
  68              	 .loc 1 229 0 discriminator 1
  69 0024 B242     	 cmp r2,r6
  70 0026 08D0     	 beq .L16
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 231:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t*)ep->xferBuffer)+i) = *fifo;
  71              	 .loc 1 231 0 discriminator 3
  72 0028 3423     	 movs r3,#52
  73 002a 03FB0043 	 mla r3,r3,r0,r4
  74 002e 2F68     	 ldr r7,[r5]
  75 0030 5B6A     	 ldr r3,[r3,#36]
  76 0032 43F82270 	 str r7,[r3,r2,lsl#2]
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
  77              	 .loc 1 229 0 discriminator 3
  78 0036 0132     	 adds r2,r2,#1
  79              	.LVL8:
  80 0038 F4E7     	 b .L3
  81              	.L16:
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
  82              	 .loc 1 216 0
  83 003a 9300     	 lsls r3,r2,#2
 232:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 233:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count!=temp_word_count)
  84              	 .loc 1 234 0
  85 003c 9942     	 cmp r1,r3
  86 003e 09D1     	 bne .L5
  87              	.LVL9:
  88              	.L8:
 235:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 236:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 239:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2)+i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)))
 240:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 241:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 242:../Libraries/XMCLib/src/xmc_usbd.c **** 
 243:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
  89              	 .loc 1 244 0
  90 0040 3423     	 movs r3,#52
  91 0042 03FB0044 	 mla r4,r3,r0,r4
  92 0046 E36A     	 ldr r3,[r4,#44]
  93 0048 0B44     	 add r3,r3,r1
  94 004a E362     	 str r3,[r4,#44]
 245:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
  95              	 .loc 1 245 0
  96 004c 636A     	 ldr r3,[r4,#36]
  97 004e 1944     	 add r1,r1,r3
  98              	.LVL10:
  99 0050 6162     	 str r1,[r4,#36]
 100 0052 F0BD     	 pop {r4,r5,r6,r7,pc}
 101              	.LVL11:
 102              	.L5:
 103 0054 D207     	 lsls r2,r2,#31
 104              	.LVL12:
 236:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 105              	 .loc 1 236 0
 106 0056 2F68     	 ldr r7,[r5]
 107              	.LVL13:
 108 0058 D21A     	 subs r2,r2,r3
 109              	.LVL14:
 110              	.L6:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 111              	 .loc 1 237 0 discriminator 1
 112 005a 8B42     	 cmp r3,r1
 113 005c F0D2     	 bcs .L8
 239:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 114              	 .loc 1 239 0 discriminator 3
 115 005e 3425     	 movs r5,#52
 116 0060 05FB0045 	 mla r5,r5,r0,r4
 117 0064 9E18     	 adds r6,r3,r2
 118 0066 F600     	 lsls r6,r6,#3
 119 0068 D5F824E0 	 ldr lr,[r5,#36]
 120 006c FF25     	 movs r5,#255
 121 006e B540     	 lsls r5,r5,r6
 122 0070 3D40     	 ands r5,r5,r7
 123 0072 F540     	 lsrs r5,r5,r6
 124 0074 0EF80350 	 strb r5,[lr,r3]
 125 0078 0133     	 adds r3,r3,#1
 126 007a EEE7     	 b .L6
 127              	.LVL15:
 128              	.L1:
 129 007c F0BD     	 pop {r4,r5,r6,r7,pc}
 130              	.LVL16:
 131              	.L18:
 132 007e 00BF     	 .align 2
 133              	.L17:
 134 0080 00000000 	 .word xmc_device
 135              	 .cfi_endproc
 136              	.LFE175:
 138              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 139              	 .align 1
 140              	 .thumb
 141              	 .thumb_func
 143              	XMC_USBD_lFlushTXFifo:
 144              	.LFB177:
 246:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 247:../Libraries/XMCLib/src/xmc_usbd.c **** }
 248:../Libraries/XMCLib/src/xmc_usbd.c **** 
 249:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 250:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 251:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 252:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 253:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 254:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 255:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 256:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 257:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 258:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep) 
 259:../Libraries/XMCLib/src/xmc_usbd.c **** {
 260:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace; 
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 263:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 264:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 265:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 268:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 271:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 272:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 273:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 274:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 275:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 276:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 279:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 280:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 281:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 282:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 283:../Libraries/XMCLib/src/xmc_usbd.c **** 
 284:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count;ep->xferBuffer+= 4U)
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t*)ep->xferBuffer;
 288:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 289:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 290:../Libraries/XMCLib/src/xmc_usbd.c ****     result=byte_count;
 291:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 293:../Libraries/XMCLib/src/xmc_usbd.c **** }
 294:../Libraries/XMCLib/src/xmc_usbd.c **** 
 295:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 296:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 297:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 298:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 299:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 300:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 301:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 302:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num) 
 303:../Libraries/XMCLib/src/xmc_usbd.c **** {
 145              	 .loc 1 303 0
 146              	 .cfi_startproc
 147              	 
 148              	 
 149              	 
 150              	.LVL17:
 151 0000 82B0     	 sub sp,sp,#8
 152              	.LCFI1:
 153              	 .cfi_def_cfa_offset 8
 304:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 154              	 .loc 1 306 0
 155 0002 0023     	 movs r3,#0
 156 0004 0193     	 str r3,[sp,#4]
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 157              	 .loc 1 308 0
 158 0006 019B     	 ldr r3,[sp,#4]
 159 0008 43F02003 	 orr r3,r3,#32
 160 000c 0193     	 str r3,[sp,#4]
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 161              	 .loc 1 309 0
 162 000e 019B     	 ldr r3,[sp,#4]
 163 0010 00F01F00 	 and r0,r0,#31
 164              	.LVL18:
 165 0014 23F4F863 	 bic r3,r3,#1984
 166 0018 43EA8010 	 orr r0,r3,r0,lsl#6
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 167              	 .loc 1 310 0
 168 001c 064B     	 ldr r3,.L22
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 169              	 .loc 1 309 0
 170 001e 0190     	 str r0,[sp,#4]
 171              	 .loc 1 310 0
 172 0020 D3F8A031 	 ldr r3,[r3,#416]
 173 0024 019A     	 ldr r2,[sp,#4]
 174 0026 1A61     	 str r2,[r3,#16]
 175              	.LVL19:
 176              	.L20:
 311:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 312:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 313:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 314:../Libraries/XMCLib/src/xmc_usbd.c ****    data.d32 = xmc_device.global_register->grstctl;
 177              	 .loc 1 314 0 discriminator 1
 178 0028 1A69     	 ldr r2,[r3,#16]
 179 002a 0192     	 str r2,[sp,#4]
 315:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 180              	 .loc 1 315 0 discriminator 1
 181 002c 019A     	 ldr r2,[sp,#4]
 182 002e 9206     	 lsls r2,r2,#26
 183 0030 FAD4     	 bmi .L20
 316:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 317:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 318:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 319:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 321:../Libraries/XMCLib/src/xmc_usbd.c **** }
 184              	 .loc 1 321 0
 185 0032 02B0     	 add sp,sp,#8
 186              	.LCFI2:
 187              	 .cfi_def_cfa_offset 0
 188              	 
 189 0034 7047     	 bx lr
 190              	.L23:
 191 0036 00BF     	 .align 2
 192              	.L22:
 193 0038 00000000 	 .word xmc_device
 194              	 .cfi_endproc
 195              	.LFE177:
 197              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 198              	 .align 1
 199              	 .thumb
 200              	 .thumb_func
 202              	XMC_USBD_lFlushRXFifo:
 203              	.LFB178:
 322:../Libraries/XMCLib/src/xmc_usbd.c **** 
 323:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 324:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 325:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 326:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void) 
 327:../Libraries/XMCLib/src/xmc_usbd.c **** {
 204              	 .loc 1 327 0
 205              	 .cfi_startproc
 206              	 
 207              	 
 208              	 
 209 0000 82B0     	 sub sp,sp,#8
 210              	.LCFI3:
 211              	 .cfi_def_cfa_offset 8
 328:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 329:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 330:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 331:../Libraries/XMCLib/src/xmc_usbd.c **** 	data.d32 = 0U;
 212              	 .loc 1 331 0
 213 0002 0023     	 movs r3,#0
 214 0004 0193     	 str r3,[sp,#4]
 332:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 215              	 .loc 1 332 0
 216 0006 019B     	 ldr r3,[sp,#4]
 217 0008 43F01003 	 orr r3,r3,#16
 218 000c 0193     	 str r3,[sp,#4]
 333:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 219              	 .loc 1 334 0
 220 000e 064B     	 ldr r3,.L27
 221 0010 019A     	 ldr r2,[sp,#4]
 222 0012 D3F8A031 	 ldr r3,[r3,#416]
 223 0016 1A61     	 str r2,[r3,#16]
 224              	.L25:
 225              	.LVL20:
 335:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 336:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 337:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++){}
 338:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 226              	 .loc 1 338 0
 227 0018 1A69     	 ldr r2,[r3,#16]
 228 001a 0192     	 str r2,[sp,#4]
 339:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 229              	 .loc 1 339 0
 230 001c 019A     	 ldr r2,[sp,#4]
 231 001e D206     	 lsls r2,r2,#27
 232 0020 FAD4     	 bmi .L25
 340:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 341:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 342:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 343:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 344:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 345:../Libraries/XMCLib/src/xmc_usbd.c **** }
 233              	 .loc 1 345 0
 234 0022 02B0     	 add sp,sp,#8
 235              	.LCFI4:
 236              	 .cfi_def_cfa_offset 0
 237              	 
 238 0024 7047     	 bx lr
 239              	.L28:
 240 0026 00BF     	 .align 2
 241              	.L27:
 242 0028 00000000 	 .word xmc_device
 243              	 .cfi_endproc
 244              	.LFE178:
 246              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 247              	 .align 1
 248              	 .thumb
 249              	 .thumb_func
 251              	XMC_USBD_lStartReadXfer:
 252              	.LFB181:
 346:../Libraries/XMCLib/src/xmc_usbd.c **** 
 347:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 348:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 349:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 350:../Libraries/XMCLib/src/xmc_usbd.c **** 
 351:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 352:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 353:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 354:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 355:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 356:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 357:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 358:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void) 
 359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 361:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 362:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 364:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 366:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 367:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 369:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 370:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 371:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 372:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 373:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 374:../Libraries/XMCLib/src/xmc_usbd.c **** }
 375:../Libraries/XMCLib/src/xmc_usbd.c **** 
 376:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 377:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 378:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 379:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 382:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr) 
 383:../Libraries/XMCLib/src/xmc_usbd.c **** {
 384:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 385:../Libraries/XMCLib/src/xmc_usbd.c **** }
 386:../Libraries/XMCLib/src/xmc_usbd.c **** 
 387:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 388:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 389:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 390:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 391:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 392:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 393:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 394:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 395:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 396:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 397:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 398:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep) 
 399:../Libraries/XMCLib/src/xmc_usbd.c **** {
 253              	 .loc 1 399 0
 254              	 .cfi_startproc
 255              	 
 256              	 
 257              	.LVL21:
 400:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 401:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 402:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 258              	 .loc 1 404 0
 259 0000 826A     	 ldr r2,[r0,#40]
 260 0002 8168     	 ldr r1,[r0,#8]
 399:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 261              	 .loc 1 399 0
 262 0004 30B5     	 push {r4,r5,lr}
 263              	.LCFI5:
 264              	 .cfi_def_cfa_offset 12
 265              	 .cfi_offset 4,-12
 266              	 .cfi_offset 5,-8
 267              	 .cfi_offset 14,-4
 268              	 .loc 1 404 0
 269 0006 046B     	 ldr r4,[r0,#48]
 270 0008 C1F31201 	 ubfx r1,r1,#0,#19
 271 000c A51A     	 subs r5,r4,r2
 272 000e 8D42     	 cmp r5,r1
 405:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 406:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 273              	 .loc 1 406 0
 274 0010 88BF     	 it hi
 275 0012 5218     	 addhi r2,r2,r1
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 409:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 410:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 411:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 276              	 .loc 1 412 0
 277 0014 0178     	 ldrb r1,[r0]
 406:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 278              	 .loc 1 406 0
 279 0016 8CBF     	 ite hi
 280 0018 8262     	 strhi r2,[r0,#40]
 410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 281              	 .loc 1 410 0
 282 001a 8462     	 strls r4,[r0,#40]
 283              	 .loc 1 412 0
 284 001c 0A07     	 lsls r2,r1,#28
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 285              	 .loc 1 403 0
 286 001e 4FF00003 	 mov r3,#0
 287              	.LVL22:
 288              	 .loc 1 412 0
 289 0022 07D1     	 bne .L32
 290              	.LVL23:
 291              	.LBB22:
 413:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 414:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Setup the endpoint to receive 3 setup packages and one normal package.*/
 415:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Cast the data pointer to use only one variable */
 416:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t*)&data;
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 292              	 .loc 1 417 0
 293 0024 0122     	 movs r2,#1
 294 0026 62F3D443 	 bfi r3,r2,#19,#2
 295              	.LVL24:
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 296              	 .loc 1 418 0
 297 002a 43F0C043 	 orr r3,r3,#1610612736
 298              	.LVL25:
 419:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 299              	 .loc 1 419 0
 300 002e 64F30603 	 bfi r3,r4,#0,#7
 301              	.LVL26:
 302              	.LBE22:
 303 0032 14E0     	 b .L33
 304              	.LVL27:
 305              	.L32:
 420:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 421:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 422:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 423:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 424:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 306              	 .loc 1 424 0
 307 0034 826A     	 ldr r2,[r0,#40]
 308 0036 2AB9     	 cbnz r2,.L34
 425:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 426:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 309              	 .loc 1 426 0
 310 0038 62F31203 	 bfi r3,r2,#0,#19
 311              	.LVL28:
 427:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 312              	 .loc 1 427 0
 313 003c 0122     	 movs r2,#1
 314 003e 62F3DC43 	 bfi r3,r2,#19,#10
 315 0042 0CE0     	 b .L33
 316              	.LVL29:
 317              	.L34:
 428:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 429:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 430:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 431:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 432:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize -(uint32_t)
 318              	 .loc 1 432 0
 319 0044 C46A     	 ldr r4,[r0,#44]
 320 0046 121B     	 subs r2,r2,r4
 321 0048 4468     	 ldr r4,[r0,#4]
 322 004a C4F3C625 	 ubfx r5,r4,#11,#7
 323 004e 5419     	 adds r4,r2,r5
 324 0050 013C     	 subs r4,r4,#1
 325 0052 B4FBF5F4 	 udiv r4,r4,r5
 326 0056 64F3DC43 	 bfi r3,r4,#19,#10
 327              	.LVL30:
 433:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 328              	 .loc 1 433 0
 329 005a 62F31203 	 bfi r3,r2,#0,#19
 330              	.L33:
 434:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 435:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 331              	 .loc 1 436 0
 332 005e 0C4A     	 ldr r2,.L36
 333 0060 1268     	 ldr r2,[r2]
 334 0062 547B     	 ldrb r4,[r2,#13]
 335 0064 0B4A     	 ldr r2,.L36+4
 336 0066 3CB9     	 cbnz r4,.L35
 437:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 438:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 439:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 337              	 .loc 1 439 0
 338 0068 01F00F04 	 and r4,r1,#15
 339 006c 02EB8404 	 add r4,r2,r4,lsl#2
 340 0070 406A     	 ldr r0,[r0,#36]
 341              	.LVL31:
 342 0072 D4F8C441 	 ldr r4,[r4,#452]
 343 0076 6061     	 str r0,[r4,#20]
 344              	.L35:
 440:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 441:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 442:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 345              	 .loc 1 442 0
 346 0078 01F00F01 	 and r1,r1,#15
 347 007c 02EB8101 	 add r1,r2,r1,lsl#2
 348 0080 D1F8C421 	 ldr r2,[r1,#452]
 349 0084 1361     	 str r3,[r2,#16]
 443:../Libraries/XMCLib/src/xmc_usbd.c ****  
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 350              	 .loc 1 444 0
 351 0086 1368     	 ldr r3,[r2]
 352              	.LVL32:
 445:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 446:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 353              	 .loc 1 446 0
 354 0088 43F00443 	 orr r3,r3,#-2080374784
 355              	.LVL33:
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 356              	 .loc 1 447 0
 357 008c 1360     	 str r3,[r2]
 358 008e 30BD     	 pop {r4,r5,pc}
 359              	.L37:
 360              	 .align 2
 361              	.L36:
 362 0090 00000000 	 .word usbd_init
 363 0094 00000000 	 .word xmc_device
 364              	 .cfi_endproc
 365              	.LFE181:
 367              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 368              	 .align 1
 369              	 .thumb
 370              	 .thumb_func
 372              	XMC_USBD_lStartWriteXfer:
 373              	.LFB182:
 448:../Libraries/XMCLib/src/xmc_usbd.c **** }
 449:../Libraries/XMCLib/src/xmc_usbd.c **** 
 450:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 451:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 452:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 453:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 454:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 455:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 456:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 457:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 458:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep) 
 459:../Libraries/XMCLib/src/xmc_usbd.c **** {
 374              	 .loc 1 459 0
 375              	 .cfi_startproc
 376              	 
 377              	 
 378              	.LVL34:
 460:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 461:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 462:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;  
 464:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 379              	 .loc 1 464 0
 380 0000 0178     	 ldrb r1,[r0]
 465:../Libraries/XMCLib/src/xmc_usbd.c **** 
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 381              	 .loc 1 466 0
 382 0002 D0F830C0 	 ldr ip,[r0,#48]
 459:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 383              	 .loc 1 459 0
 384 0006 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 385              	.LCFI6:
 386              	 .cfi_def_cfa_offset 24
 387              	 .cfi_offset 4,-24
 388              	 .cfi_offset 5,-20
 389              	 .cfi_offset 6,-16
 390              	 .cfi_offset 7,-12
 391              	 .cfi_offset 8,-8
 392              	 .cfi_offset 14,-4
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 393              	 .loc 1 464 0
 394 000a 01F00F07 	 and r7,r1,#15
 395 000e 07F16A03 	 add r3,r7,#106
 396 0012 294C     	 ldr r4,.L46
 397              	 .loc 1 466 0
 398 0014 8668     	 ldr r6,[r0,#8]
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 399              	 .loc 1 464 0
 400 0016 54F823E0 	 ldr lr,[r4,r3,lsl#2]
 401              	 .loc 1 466 0
 402 001a 836A     	 ldr r3,[r0,#40]
 464:../Libraries/XMCLib/src/xmc_usbd.c **** 
 403              	 .loc 1 464 0
 404 001c DEF80050 	 ldr r5,[lr]
 405              	.LVL35:
 406              	 .loc 1 466 0
 407 0020 C3EB0C08 	 rsb r8,r3,ip
 408 0024 C6F31206 	 ubfx r6,r6,#0,#19
 409 0028 B045     	 cmp r8,r6
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 468:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 469:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 470:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 471:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 472:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 410              	 .loc 1 472 0
 411 002a 2ABF     	 itet cs
 412 002c 9B19     	 addcs r3,r3,r6
 468:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 413              	 .loc 1 468 0
 414 002e C0F828C0 	 strcc ip,[r0,#40]
 415              	 .loc 1 472 0
 416 0032 8362     	 strcs r3,[r0,#40]
 473:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 417              	 .loc 1 474 0
 418 0034 836A     	 ldr r3,[r0,#40]
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 419              	 .loc 1 463 0
 420 0036 0022     	 movs r2,#0
 421              	.LVL36:
 422              	 .loc 1 474 0
 423 0038 2BB9     	 cbnz r3,.L41
 475:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 476:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 424              	 .loc 1 476 0
 425 003a 63F31202 	 bfi r2,r3,#0,#19
 426              	.LVL37:
 477:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 427              	 .loc 1 477 0
 428 003e 0123     	 movs r3,#1
 429 0040 63F3DC42 	 bfi r2,r3,#19,#10
 430 0044 2CE0     	 b .L42
 431              	.LVL38:
 432              	.L41:
 478:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 479:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 480:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 481:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 433              	 .loc 1 481 0
 434 0046 11F00F0F 	 tst r1,#15
 435 004a C66A     	 ldr r6,[r0,#44]
 436 004c 07D1     	 bne .L43
 482:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 483:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 437              	 .loc 1 483 0
 438 004e 4FF0010C 	 mov ip,#1
 439 0052 6CF3DC42 	 bfi r2,ip,#19,#10
 440              	.LVL39:
 484:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 485:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 441              	 .loc 1 485 0
 442 0056 9B1B     	 subs r3,r3,r6
 443 0058 63F31202 	 bfi r2,r3,#0,#19
 444 005c 0FE0     	 b .L44
 445              	.LVL40:
 446              	.L43:
 486:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 487:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 488:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 447              	 .loc 1 489 0
 448 005e 9B1B     	 subs r3,r3,r6
 490:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 449              	 .loc 1 490 0
 450 0060 4668     	 ldr r6,[r0,#4]
 451 0062 C6F3C626 	 ubfx r6,r6,#11,#7
 452 0066 06F1FF3C 	 add ip,r6,#-1
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 453              	 .loc 1 489 0
 454 006a 63F31202 	 bfi r2,r3,#0,#19
 455              	.LVL41:
 456              	 .loc 1 490 0
 457 006e 1FFA8CFC 	 uxth ip,ip
 458 0072 1CFA83F3 	 uxtah r3,ip,r3
 459 0076 93FBF6F3 	 sdiv r3,r3,r6
 460 007a 63F3DC42 	 bfi r2,r3,#19,#10
 461              	.L44:
 491:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 492:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 493:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 462              	 .loc 1 493 0
 463 007e 0F4B     	 ldr r3,.L46+4
 464 0080 1B68     	 ldr r3,[r3]
 465 0082 5B7B     	 ldrb r3,[r3,#13]
 466 0084 1BB9     	 cbnz r3,.L45
 494:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 495:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 496:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 467              	 .loc 1 496 0
 468 0086 436A     	 ldr r3,[r0,#36]
 469 0088 CEF81430 	 str r3,[lr,#20]
 470 008c 08E0     	 b .L42
 471              	.L45:
 497:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 498:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 472              	 .loc 1 498 0
 473 008e 012B     	 cmp r3,#1
 499:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 500:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 501:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->addr
 474              	 .loc 1 501 0
 475 0090 01BF     	 itttt eq
 476 0092 D4F8A461 	 ldreq r6,[r4,#420]
 477 0096 706B     	 ldreq r0,[r6,#52]
 478              	.LVL42:
 479 0098 BB40     	 lsleq r3,r3,r7
 480 009a 0343     	 orreq r3,r3,r0
 481 009c 08BF     	 it eq
 482 009e 7363     	 streq r3,[r6,#52]
 483              	.L42:
 502:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 503:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 504:../Libraries/XMCLib/src/xmc_usbd.c **** 
 505:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 484              	 .loc 1 506 0
 485 00a0 01F00F01 	 and r1,r1,#15
 486 00a4 6A31     	 adds r1,r1,#106
 507:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 487              	 .loc 1 508 0
 488 00a6 45F00445 	 orr r5,r5,#-2080374784
 489              	.LVL43:
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 490              	 .loc 1 506 0
 491 00aa 54F82130 	 ldr r3,[r4,r1,lsl#2]
 492 00ae 1A61     	 str r2,[r3,#16]
 493              	.LVL44:
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 494              	 .loc 1 509 0
 495 00b0 1D60     	 str r5,[r3]
 496 00b2 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 497              	.LVL45:
 498              	.L47:
 499 00b6 00BF     	 .align 2
 500              	.L46:
 501 00b8 00000000 	 .word xmc_device
 502 00bc 00000000 	 .word usbd_init
 503              	 .cfi_endproc
 504              	.LFE182:
 506              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 507              	 .align 1
 508              	 .global XMC_USBD_GetCapabilities
 509              	 .thumb
 510              	 .thumb_func
 512              	XMC_USBD_GetCapabilities:
 513              	.LFB198:
 510:../Libraries/XMCLib/src/xmc_usbd.c **** }
 511:../Libraries/XMCLib/src/xmc_usbd.c **** 
 512:../Libraries/XMCLib/src/xmc_usbd.c **** 
 513:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 514:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 515:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 516:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 517:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 518:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 519:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 520:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj) 
 521:../Libraries/XMCLib/src/xmc_usbd.c **** {
 522:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 523:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 524:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 525:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 526:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 527:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 528:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 529:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 533:../Libraries/XMCLib/src/xmc_usbd.c **** 
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint8_t)XMC_USBD_NUM_EPS;i++)
 536:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 537:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 540:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 541:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 543:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U;i < (uint8_t)XMC_USBD_NUM_TX_FIFOS;i++)
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 554:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i- 1U] = (uint32_t)(((256U + (i*(64U)))/4U) | ((uint32_t)16
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 556:../Libraries/XMCLib/src/xmc_usbd.c **** 
 557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 559:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 562:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */  
 563:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 567:../Libraries/XMCLib/src/xmc_usbd.c **** 
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 569:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 570:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 571:../Libraries/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 572:../Libraries/XMCLib/src/xmc_usbd.c **** 
 573:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 574:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 576:../Libraries/XMCLib/src/xmc_usbd.c **** 
 577:../Libraries/XMCLib/src/xmc_usbd.c **** 
 578:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */  
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 580:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 582:../Libraries/XMCLib/src/xmc_usbd.c **** 
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 584:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 585:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 586:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 587:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 588:../Libraries/XMCLib/src/xmc_usbd.c **** 
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 590:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 591:../Libraries/XMCLib/src/xmc_usbd.c **** 
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 593:../Libraries/XMCLib/src/xmc_usbd.c **** 
 594:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 596:../Libraries/XMCLib/src/xmc_usbd.c **** }
 597:../Libraries/XMCLib/src/xmc_usbd.c **** 
 598:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 599:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 600:../Libraries/XMCLib/src/xmc_usbd.c **** *
 601:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 602:../Libraries/XMCLib/src/xmc_usbd.c **** */
 603:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void) 
 604:../Libraries/XMCLib/src/xmc_usbd.c **** {
 605:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 606:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 607:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 608:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.IsPowered = 0U;
 610:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 611:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 612:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 613:../Libraries/XMCLib/src/xmc_usbd.c **** 
 614:../Libraries/XMCLib/src/xmc_usbd.c **** }
 615:../Libraries/XMCLib/src/xmc_usbd.c **** 
 616:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 617:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 618:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 619:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 620:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 621:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void) 
 622:../Libraries/XMCLib/src/xmc_usbd.c **** {
 623:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 624:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 625:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 627:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32=xmc_device.endpoint_in_register[0U]->diepctl;
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 630:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 631:../Libraries/XMCLib/src/xmc_usbd.c **** 
 632:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 634:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 635:../Libraries/XMCLib/src/xmc_usbd.c **** 
 636:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 637:../Libraries/XMCLib/src/xmc_usbd.c **** 
 638:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */  
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 640:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 641:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 642:../Libraries/XMCLib/src/xmc_usbd.c **** 
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 645:../Libraries/XMCLib/src/xmc_usbd.c **** }
 646:../Libraries/XMCLib/src/xmc_usbd.c **** 
 647:../Libraries/XMCLib/src/xmc_usbd.c **** 
 648:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 649:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 650:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 651:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 652:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 653:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 654:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj) 
 655:../Libraries/XMCLib/src/xmc_usbd.c **** {
 656:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 657:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 658:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 663:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 666:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 668:../Libraries/XMCLib/src/xmc_usbd.c ****   
 669:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 670:../Libraries/XMCLib/src/xmc_usbd.c ****   
 671:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;  
 672:../Libraries/XMCLib/src/xmc_usbd.c ****   
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 674:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 675:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 676:../Libraries/XMCLib/src/xmc_usbd.c ****  
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 678:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 679:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 680:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 681:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 682:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 683:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 684:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 687:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 688:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 689:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 690:../Libraries/XMCLib/src/xmc_usbd.c **** 	  /* Setup Phase Complete */
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 692:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 693:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 695:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 696:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 697:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 699:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 700:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 702:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 703:../Libraries/XMCLib/src/xmc_usbd.c **** 			ep->outBytesAvailable += ep->xferCount;
 704:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 705:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->outInUse = 0U;
 706:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 707:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 708:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP,ep_num);
 709:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 710:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 711:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 713:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 714:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 716:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 717:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 719:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 720:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 722:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 723:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 724:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 725:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 726:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 727:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 728:../Libraries/XMCLib/src/xmc_usbd.c **** 
 729:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 730:../Libraries/XMCLib/src/xmc_usbd.c **** 
 731:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32,ep_num);
 732:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 733:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 734:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 735:../Libraries/XMCLib/src/xmc_usbd.c **** 
 736:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 738:../Libraries/XMCLib/src/xmc_usbd.c **** }
 739:../Libraries/XMCLib/src/xmc_usbd.c **** 
 740:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 741:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 742:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 743:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 744:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 745:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 746:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj) 
 747:../Libraries/XMCLib/src/xmc_usbd.c **** {
 748:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 749:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 750:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 756:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 757:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 758:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 760:../Libraries/XMCLib/src/xmc_usbd.c ****   
 761:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 762:../Libraries/XMCLib/src/xmc_usbd.c ****   
 763:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 765:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 766:../Libraries/XMCLib/src/xmc_usbd.c ****   
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 768:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 769:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 770:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 771:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 772:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 773:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 774:../Libraries/XMCLib/src/xmc_usbd.c **** 			inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 776:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 777:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 779:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 780:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 781:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 783:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 784:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 785:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 786:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 787:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 790:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 791:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 793:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 794:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 795:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 796:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 797:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 798:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 800:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 801:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 802:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 803:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal==ep->xferLength)
 805:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 808:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 809:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 811:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 812:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 813:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num,XMC_USBD_EP_EVENT_IN);
 814:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 815:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 816:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 817:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 818:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 819:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 820:../Libraries/XMCLib/src/xmc_usbd.c **** 
 821:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 822:../Libraries/XMCLib/src/xmc_usbd.c **** 
 823:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32,ep_num);
 824:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 825:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 826:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 827:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 828:../Libraries/XMCLib/src/xmc_usbd.c **** }
 829:../Libraries/XMCLib/src/xmc_usbd.c **** 
 830:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 831:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 832:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 833:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 834:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 835:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void) 
 836:../Libraries/XMCLib/src/xmc_usbd.c **** {
 837:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;	
 838:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 839:../Libraries/XMCLib/src/xmc_usbd.c **** 
 840:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 841:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 842:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 843:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 844:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 845:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 846:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 847:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 848:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 849:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 851:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 852:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 853:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 854:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 855:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 856:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 857:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 858:../Libraries/XMCLib/src/xmc_usbd.c **** }
 859:../Libraries/XMCLib/src/xmc_usbd.c **** 
 860:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 861:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 862:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 863:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 864:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 865:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 866:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj) 
 867:../Libraries/XMCLib/src/xmc_usbd.c **** {
 868:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 869:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 870:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 872:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 873:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 875:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 877:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 880:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 881:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 882:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 883:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 884:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 886:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 888:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 889:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 890:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 892:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 893:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 894:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 896:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 897:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 898:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 900:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 901:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 902:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 903:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 904:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 906:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 909:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 910:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 912:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 913:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 914:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 916:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 917:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 918:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 920:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 921:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 922:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 924:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 925:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_lHandleOEPInt(obj);
 926:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 927:../Libraries/XMCLib/src/xmc_usbd.c **** 	if (data.b.otgintr)
 928:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 929:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_lHandleOTGInt();
 930:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 931:../Libraries/XMCLib/src/xmc_usbd.c **** 
 932:../Libraries/XMCLib/src/xmc_usbd.c **** }
 933:../Libraries/XMCLib/src/xmc_usbd.c **** 
 934:../Libraries/XMCLib/src/xmc_usbd.c **** 
 935:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 936:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 937:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void) 
 942:../Libraries/XMCLib/src/xmc_usbd.c **** {
 943:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 944:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 945:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 946:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 948:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 949:../Libraries/XMCLib/src/xmc_usbd.c **** }
 950:../Libraries/XMCLib/src/xmc_usbd.c **** 
 951:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 952:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 953:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 954:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void) 
 955:../Libraries/XMCLib/src/xmc_usbd.c **** {
 956:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 957:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 958:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 960:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 961:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 962:../Libraries/XMCLib/src/xmc_usbd.c **** }
 963:../Libraries/XMCLib/src/xmc_usbd.c **** 
 964:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 965:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 966:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 967:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event) 
 968:../Libraries/XMCLib/src/xmc_usbd.c **** {
 969:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 970:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   switch(event)
 972:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 973:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sessreqintr = 1U;
 975:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbreset = 1U;
 978:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbsuspend = 1U;
 981:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 983:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 984:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 987:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 988:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sofintr = 1U;
 990:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 991:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.erlysuspend = 1U;
 993:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 994:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.enumdone = 1U;
 996:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 997:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.outepintr = 1U;
 999:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
1000:../Libraries/XMCLib/src/xmc_usbd.c **** 		default:
1001:../Libraries/XMCLib/src/xmc_usbd.c **** 		break;
1002:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1003:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.global_register->gintsts = clear.d32;
1004:../Libraries/XMCLib/src/xmc_usbd.c **** }
1005:../Libraries/XMCLib/src/xmc_usbd.c **** 
1006:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1007:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1008:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1009:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1010:../Libraries/XMCLib/src/xmc_usbd.c **** {
1011:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
1012:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1013:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
1014:../Libraries/XMCLib/src/xmc_usbd.c **** }
1015:../Libraries/XMCLib/src/xmc_usbd.c **** 
1016:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1017:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1018:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1019:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event,const uint8_t ep_num)
1020:../Libraries/XMCLib/src/xmc_usbd.c **** {
1021:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1022:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1023:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
1024:../Libraries/XMCLib/src/xmc_usbd.c **** }
1025:../Libraries/XMCLib/src/xmc_usbd.c **** 
1026:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1027:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1028:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1029:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event,const uint8_t ep_num)
1030:../Libraries/XMCLib/src/xmc_usbd.c **** {
1031:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1032:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
1033:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
1034:../Libraries/XMCLib/src/xmc_usbd.c **** }
1035:../Libraries/XMCLib/src/xmc_usbd.c **** 
1036:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1037:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1038:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1039:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1040:../Libraries/XMCLib/src/xmc_usbd.c **** {
1041:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
1042:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint.d32 = event;
1043:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->doepmsk |= doepint.d32;
1044:../Libraries/XMCLib/src/xmc_usbd.c **** }
1045:../Libraries/XMCLib/src/xmc_usbd.c **** 
1046:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1047:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1048:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1049:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1050:../Libraries/XMCLib/src/xmc_usbd.c **** {
1051:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
1052:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint.d32 = event;
1053:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->diepmsk |= diepint.d32;
1054:../Libraries/XMCLib/src/xmc_usbd.c **** }
1055:../Libraries/XMCLib/src/xmc_usbd.c **** 
1056:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1057:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1058:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1059:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1060:../Libraries/XMCLib/src/xmc_usbd.c **** {
 514              	 .loc 1 1060 0
 515              	 .cfi_startproc
 516              	 
 517              	 
 518              	 
 519              	.LVL46:
1061:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap={0U};
1062:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
1063:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
1064:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
1066:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
1067:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1068:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
1069:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
1070:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1071:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
1072:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
1073:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
1078:../Libraries/XMCLib/src/xmc_usbd.c **** }
 520              	 .loc 1 1078 0
 521 0000 40F2DF10 	 movw r0,#479
 522 0004 7047     	 bx lr
 523              	 .cfi_endproc
 524              	.LFE198:
 526              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 527              	 .align 1
 528              	 .global XMC_USBD_DeviceConnect
 529              	 .thumb
 530              	 .thumb_func
 532              	XMC_USBD_DeviceConnect:
 533              	.LFB201:
1079:../Libraries/XMCLib/src/xmc_usbd.c **** 
1080:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1081:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1082:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1083:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1084:../Libraries/XMCLib/src/xmc_usbd.c **** {
1085:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1086:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1087:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1091:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1092:../Libraries/XMCLib/src/xmc_usbd.c **** 
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1094:../Libraries/XMCLib/src/xmc_usbd.c ****  		      XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1095:../Libraries/XMCLib/src/xmc_usbd.c ****   
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
1097:../Libraries/XMCLib/src/xmc_usbd.c ****   
1098:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
1099:../Libraries/XMCLib/src/xmc_usbd.c **** 
1100:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   for(i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1102:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
1104:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1106:../Libraries/XMCLib/src/xmc_usbd.c **** 
1107:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1108:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0x0U,sizeof(XMC_USBD_DEVICE_t));
1109:../Libraries/XMCLib/src/xmc_usbd.c **** 
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
1114:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t*)(obj->usbd);
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1118:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DE
1120:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
1123:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t*)(XMC_USBD_BASE_ADDRESS +
1125:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
1126:../Libraries/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
1127:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_TX_FIFOS;i++)
1129:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t*)(XMC_USBD_BASE_ADDRESS +
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
1132:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
1133:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1134:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1135:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */  
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1142:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1143:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1145:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1146:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1147:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
1150:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32= xmc_device.global_register->gusbcfg;
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
1155:../Libraries/XMCLib/src/xmc_usbd.c **** 
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */  
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
1162:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
1174:../Libraries/XMCLib/src/xmc_usbd.c ****  
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1177:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
1183:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
1184:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
1185:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
1188:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1189:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
1192:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1195:../Libraries/XMCLib/src/xmc_usbd.c **** }
1196:../Libraries/XMCLib/src/xmc_usbd.c **** 
1197:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1198:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1199:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1200:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize() 
1201:../Libraries/XMCLib/src/xmc_usbd.c **** {
1202:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1203:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1204:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
1207:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0U,sizeof(xmc_device));
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1210:../Libraries/XMCLib/src/xmc_usbd.c **** }
1211:../Libraries/XMCLib/src/xmc_usbd.c **** 
1212:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1213:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1214:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1215:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect() 
1216:../Libraries/XMCLib/src/xmc_usbd.c **** {
 534              	 .loc 1 1216 0
 535              	 .cfi_startproc
 536              	 
 537              	 
 538              	 
1217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1218:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1219:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 539              	 .loc 1 1219 0
 540 0000 044B     	 ldr r3,.L50
 541 0002 D3F8A421 	 ldr r2,[r3,#420]
 542 0006 5368     	 ldr r3,[r2,#4]
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 543              	 .loc 1 1220 0
 544 0008 6FF34103 	 bfc r3,#1,#1
 545              	.LVL47:
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 546              	 .loc 1 1221 0
 547 000c 5360     	 str r3,[r2,#4]
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1223:../Libraries/XMCLib/src/xmc_usbd.c **** }
 548              	 .loc 1 1223 0
 549 000e 0020     	 movs r0,#0
 550 0010 7047     	 bx lr
 551              	.L51:
 552 0012 00BF     	 .align 2
 553              	.L50:
 554 0014 00000000 	 .word xmc_device
 555              	 .cfi_endproc
 556              	.LFE201:
 558              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 559              	 .align 1
 560              	 .global XMC_USBD_DeviceDisconnect
 561              	 .thumb
 562              	 .thumb_func
 564              	XMC_USBD_DeviceDisconnect:
 565              	.LFB202:
1224:../Libraries/XMCLib/src/xmc_usbd.c **** 
1225:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1226:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1227:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1228:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect() 
1229:../Libraries/XMCLib/src/xmc_usbd.c **** {
 566              	 .loc 1 1229 0
 567              	 .cfi_startproc
 568              	 
 569              	 
 570              	 
1230:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1231:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 571              	 .loc 1 1231 0
 572 0000 044B     	 ldr r3,.L53
 573 0002 D3F8A421 	 ldr r2,[r3,#420]
 574 0006 5368     	 ldr r3,[r2,#4]
1232:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 575              	 .loc 1 1232 0
 576 0008 43F00203 	 orr r3,r3,#2
 577              	.LVL48:
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 578              	 .loc 1 1233 0
 579 000c 5360     	 str r3,[r2,#4]
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1235:../Libraries/XMCLib/src/xmc_usbd.c **** }
 580              	 .loc 1 1235 0
 581 000e 0020     	 movs r0,#0
 582 0010 7047     	 bx lr
 583              	.L54:
 584 0012 00BF     	 .align 2
 585              	.L53:
 586 0014 00000000 	 .word xmc_device
 587              	 .cfi_endproc
 588              	.LFE202:
 590              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 591              	 .align 1
 592              	 .global XMC_USBD_EndpointReadStart
 593              	 .thumb
 594              	 .thumb_func
 596              	XMC_USBD_EndpointReadStart:
 597              	.LFB204:
1236:../Libraries/XMCLib/src/xmc_usbd.c **** 
1237:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1238:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1239:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1240:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj) 
1241:../Libraries/XMCLib/src/xmc_usbd.c **** {
1242:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
1243:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
1248:../Libraries/XMCLib/src/xmc_usbd.c **** }
1249:../Libraries/XMCLib/src/xmc_usbd.c **** 
1250:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1251:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1252:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1253:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size) 
1254:../Libraries/XMCLib/src/xmc_usbd.c **** {
 598              	 .loc 1 1254 0
 599              	 .cfi_startproc
 600              	 
 601              	 
 602              	.LVL49:
 603 0000 10B5     	 push {r4,lr}
 604              	.LCFI7:
 605              	 .cfi_def_cfa_offset 8
 606              	 .cfi_offset 4,-8
 607              	 .cfi_offset 14,-4
1255:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
1256:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1257:../Libraries/XMCLib/src/xmc_usbd.c **** 	
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 608              	 .loc 1 1258 0
 609 0002 0E4A     	 ldr r2,.L59
1255:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 610              	 .loc 1 1255 0
 611 0004 00F00F03 	 and r3,r0,#15
 612              	.LVL50:
 613              	 .loc 1 1258 0
 614 0008 3420     	 movs r0,#52
 615              	.LVL51:
 616 000a 00FB0320 	 mla r0,r0,r3,r2
 617              	.LVL52:
 618 000e 4468     	 ldr r4,[r0,#4]
 619 0010 C4F30014 	 ubfx r4,r4,#4,#1
 620 0014 84B9     	 cbnz r4,.L58
 621              	 .loc 1 1258 0 is_stmt 0 discriminator 1
 622 0016 0379     	 ldrb r3,[r0,#4]
 623 0018 5B07     	 lsls r3,r3,#29
 624 001a 0DD5     	 bpl .L58
1259:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1260:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
1261:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1262:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1263:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1264:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1265:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 625              	 .loc 1 1265 0 is_stmt 1
 626 001c 4369     	 ldr r3,[r0,#20]
 627              	.LVL53:
1266:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1267:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
1268:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1269:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1270:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 628              	 .loc 1 1270 0
 629 001e 9942     	 cmp r1,r3
 630 0020 94BF     	 ite ls
 631 0022 0163     	 strls r1,[r0,#48]
 632 0024 0363     	 strhi r3,[r0,#48]
 633              	.LVL54:
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 634              	 .loc 1 1273 0
 635 0026 C368     	 ldr r3,[r0,#12]
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 636              	 .loc 1 1271 0
 637 0028 C462     	 str r4,[r0,#44]
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 638              	 .loc 1 1272 0
 639 002a 8462     	 str r4,[r0,#40]
 640              	 .loc 1 1273 0
 641 002c 4362     	 str r3,[r0,#36]
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 642              	 .loc 1 1274 0
 643 002e 0461     	 str r4,[r0,#16]
1275:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 644              	 .loc 1 1275 0
 645 0030 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 646              	.LVL55:
1276:../Libraries/XMCLib/src/xmc_usbd.c ****     result= XMC_USBD_STATUS_OK;
 647              	 .loc 1 1276 0
 648 0034 2046     	 mov r0,r4
 649 0036 10BD     	 pop {r4,pc}
 650              	.LVL56:
 651              	.L58:
1260:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 652              	 .loc 1 1260 0
 653 0038 0120     	 movs r0,#1
 654              	.LVL57:
1277:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1278:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1279:../Libraries/XMCLib/src/xmc_usbd.c **** }
 655              	 .loc 1 1279 0
 656 003a 10BD     	 pop {r4,pc}
 657              	.L60:
 658              	 .align 2
 659              	.L59:
 660 003c 00000000 	 .word xmc_device
 661              	 .cfi_endproc
 662              	.LFE204:
 664              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 665              	 .align 1
 666              	 .global XMC_USBD_DeviceSetAddress
 667              	 .thumb
 668              	 .thumb_func
 670              	XMC_USBD_DeviceSetAddress:
 671              	.LFB207:
1280:../Libraries/XMCLib/src/xmc_usbd.c **** 
1281:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1282:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1283:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1284:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num,uint8_t * buffer,uint32_t length) 
1285:../Libraries/XMCLib/src/xmc_usbd.c **** {
1286:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
1288:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1289:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
1290:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer,&ep->outBuffer[ep->outOffset],length);
1292:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
1294:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1295:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
1296:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1298:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1299:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1301:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
1302:../Libraries/XMCLib/src/xmc_usbd.c **** }
1303:../Libraries/XMCLib/src/xmc_usbd.c **** 
1304:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1305:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1306:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1307:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num,const uint8_t * buffer,uint32_t length) 
1308:../Libraries/XMCLib/src/xmc_usbd.c **** {
1309:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
1310:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
1312:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1313:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
1314:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
1316:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1317:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)0;
1318:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1319:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1320:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
1322:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1323:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
1324:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1325:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1326:../Libraries/XMCLib/src/xmc_usbd.c **** 		memcpy(ep->inBuffer,(const void *)buffer,length);
1327:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
1329:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
1333:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
1335:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
1336:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1337:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1338:../Libraries/XMCLib/src/xmc_usbd.c **** }
1339:../Libraries/XMCLib/src/xmc_usbd.c **** 
1340:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1341:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1342:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1343:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address,const XMC_USBD_SET_ADDRESS_STAGE_
1344:../Libraries/XMCLib/src/xmc_usbd.c **** {
 672              	 .loc 1 1344 0
 673              	 .cfi_startproc
 674              	 
 675              	 
 676              	 
 677              	.LVL58:
1345:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1346:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 678              	 .loc 1 1346 0
 679 0000 044B     	 ldr r3,.L63
 680 0002 D3F8A431 	 ldr r3,[r3,#420]
 681 0006 1A68     	 ldr r2,[r3]
 682              	.LVL59:
1347:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 683              	 .loc 1 1347 0
 684 0008 11B9     	 cbnz r1,.L62
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1349:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 685              	 .loc 1 1349 0
 686 000a 60F30A12 	 bfi r2,r0,#4,#7
1350:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 687              	 .loc 1 1350 0
 688 000e 1A60     	 str r2,[r3]
 689              	.L62:
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1352:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
1353:../Libraries/XMCLib/src/xmc_usbd.c **** }
 690              	 .loc 1 1353 0
 691 0010 0020     	 movs r0,#0
 692              	.LVL60:
 693 0012 7047     	 bx lr
 694              	.L64:
 695              	 .align 2
 696              	.L63:
 697 0014 00000000 	 .word xmc_device
 698              	 .cfi_endproc
 699              	.LFE207:
 701              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 702              	 .align 1
 703              	 .global XMC_USBD_EndpointStall
 704              	 .thumb
 705              	 .thumb_func
 707              	XMC_USBD_EndpointStall:
 708              	.LFB208:
1354:../Libraries/XMCLib/src/xmc_usbd.c **** 
1355:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1356:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1357:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1358:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall) 
1359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 709              	 .loc 1 1359 0
 710              	 .cfi_startproc
 711              	 
 712              	 
 713              	.LVL61:
 714 0000 10B5     	 push {r4,lr}
 715              	.LCFI8:
 716              	 .cfi_def_cfa_offset 8
 717              	 .cfi_offset 4,-8
 718              	 .cfi_offset 14,-4
 719 0002 1D4A     	 ldr r2,.L75
1360:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1361:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 720              	 .loc 1 1361 0
 721 0004 00F00F04 	 and r4,r0,#15
 722              	.LVL62:
 723 0008 40B2     	 sxtb r0,r0
1362:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 724              	 .loc 1 1362 0
 725 000a C1B1     	 cbz r1,.L66
 726 000c 3423     	 movs r3,#52
1363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1364:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
1365:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1366:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 727              	 .loc 1 1367 0
 728 000e 6343     	 muls r3,r4,r3
1364:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 729              	 .loc 1 1364 0
 730 0010 0028     	 cmp r0,#0
 731              	 .loc 1 1367 0
 732 0012 D35C     	 ldrb r3,[r2,r3]
 733 0014 03F00F03 	 and r3,r3,#15
1368:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
1369:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
1370:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1371:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1372:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1373:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1374:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 734              	 .loc 1 1374 0
 735 0018 ABBF     	 itete ge
 736 001a 02EB8303 	 addge r3,r2,r3,lsl#2
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 737              	 .loc 1 1367 0
 738 001e 6A33     	 addlt r3,r3,#106
 739              	 .loc 1 1374 0
 740 0020 D3F8C411 	 ldrge r1,[r3,#452]
 741              	.LVL63:
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 742              	 .loc 1 1367 0
 743 0024 52F82310 	 ldrlt r1,[r2,r3,lsl#2]
 744              	 .loc 1 1374 0
 745 0028 0B68     	 ldr r3,[r1]
1375:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 746              	 .loc 1 1375 0
 747 002a 43F40013 	 orr r3,r3,#2097152
 748              	.LVL64:
1376:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 749              	 .loc 1 1376 0
 750 002e 0B60     	 str r3,[r1]
1377:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1378:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 751              	 .loc 1 1378 0
 752 0030 3423     	 movs r3,#52
 753              	.LVL65:
 754 0032 03FB0422 	 mla r2,r3,r4,r2
 755              	.LVL66:
 756 0036 1379     	 ldrb r3,[r2,#4]
 757 0038 43F02003 	 orr r3,r3,#32
 758 003c 19E0     	 b .L74
 759              	.LVL67:
 760              	.L66:
 761 003e 3423     	 movs r3,#52
1379:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1380:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1381:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1382:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1383:../Libraries/XMCLib/src/xmc_usbd.c **** 		if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
1384:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 762              	 .loc 1 1385 0
 763 0040 6343     	 muls r3,r4,r3
1383:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 764              	 .loc 1 1383 0
 765 0042 0028     	 cmp r0,#0
 766              	 .loc 1 1385 0
 767 0044 D35C     	 ldrb r3,[r2,r3]
 768 0046 03F00F03 	 and r3,r3,#15
1386:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
1387:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
1388:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
1389:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1390:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1391:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1392:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 769              	 .loc 1 1392 0
 770 004a ABBF     	 itete ge
 771 004c 02EB8303 	 addge r3,r2,r3,lsl#2
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 772              	 .loc 1 1385 0
 773 0050 6A33     	 addlt r3,r3,#106
 774              	 .loc 1 1392 0
 775 0052 D3F8C401 	 ldrge r0,[r3,#452]
 776              	.LVL68:
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 777              	 .loc 1 1385 0
 778 0056 52F82300 	 ldrlt r0,[r2,r3,lsl#2]
 779              	 .loc 1 1392 0
 780 005a 0368     	 ldr r3,[r0]
1393:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 781              	 .loc 1 1393 0
 782 005c 61F35553 	 bfi r3,r1,#21,#1
 783              	.LVL69:
1394:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 784              	 .loc 1 1394 0
 785 0060 43F08053 	 orr r3,r3,#268435456
 786              	.LVL70:
1395:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 787              	 .loc 1 1395 0
 788 0064 0360     	 str r3,[r0]
1396:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1397:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->isStalled = 0U;
 789              	 .loc 1 1397 0
 790 0066 3423     	 movs r3,#52
 791              	.LVL71:
 792 0068 03FB0422 	 mla r2,r3,r4,r2
 793 006c 1379     	 ldrb r3,[r2,#4]
 794 006e 6FF34513 	 bfc r3,#5,#1
 795              	.LVL72:
 796              	.L74:
 797 0072 1371     	 strb r3,[r2,#4]
1398:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1399:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
1400:../Libraries/XMCLib/src/xmc_usbd.c **** }
 798              	 .loc 1 1400 0
 799 0074 0020     	 movs r0,#0
 800 0076 10BD     	 pop {r4,pc}
 801              	.LVL73:
 802              	.L76:
 803              	 .align 2
 804              	.L75:
 805 0078 00000000 	 .word xmc_device
 806              	 .cfi_endproc
 807              	.LFE208:
 809              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 810              	 .align 1
 811              	 .global XMC_USBD_EndpointAbort
 812              	 .thumb
 813              	 .thumb_func
 815              	XMC_USBD_EndpointAbort:
 816              	.LFB209:
1401:../Libraries/XMCLib/src/xmc_usbd.c **** 
1402:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1403:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1404:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1405:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr) {
 817              	 .loc 1 1405 0
 818              	 .cfi_startproc
 819              	 
 820              	 
 821              	 
 822              	.LVL74:
1406:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 823              	 .loc 1 1406 0
 824 0000 00F00F02 	 and r2,r0,#15
 825              	.LVL75:
1407:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 826              	 .loc 1 1407 0
 827 0004 3421     	 movs r1,#52
 828 0006 114B     	 ldr r3,.L83
 829 0008 5143     	 muls r1,r2,r1
 830 000a 5818     	 adds r0,r3,r1
 831              	.LVL76:
 832 000c 595C     	 ldrb r1,[r3,r1]
 833 000e 0906     	 lsls r1,r1,#24
1408:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1409:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 834              	 .loc 1 1409 0
 835 0010 42BF     	 ittt mi
 836 0012 4168     	 ldrmi r1,[r0,#4]
 837 0014 21F00801 	 bicmi r1,r1,#8
 838 0018 4160     	 strmi r1,[r0,#4]
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1411:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 839              	 .loc 1 1411 0
 840 001a 3421     	 movs r1,#52
 841 001c 5143     	 muls r1,r2,r1
 842 001e 5818     	 adds r0,r3,r1
 843 0020 595C     	 ldrb r1,[r3,r1]
 844 0022 0906     	 lsls r1,r1,#24
1412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 845              	 .loc 1 1413 0
 846 0024 5EBF     	 ittt pl
 847 0026 4168     	 ldrpl r1,[r0,#4]
 848 0028 21F01001 	 bicpl r1,r1,#16
 849 002c 4160     	 strpl r1,[r0,#4]
1414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 850              	 .loc 1 1415 0
 851 002e 3420     	 movs r0,#52
 852              	.LVL77:
 853 0030 00FB0233 	 mla r3,r0,r2,r3
 854              	.LVL78:
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 855              	 .loc 1 1416 0
 856 0034 0020     	 movs r0,#0
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 857              	 .loc 1 1415 0
 858 0036 1A79     	 ldrb r2,[r3,#4]
 859              	 .loc 1 1416 0
 860 0038 1861     	 str r0,[r3,#16]
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 861              	 .loc 1 1415 0
 862 003a 6FF34512 	 bfc r2,#5,#1
 863 003e 1A71     	 strb r2,[r3,#4]
1417:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 864              	 .loc 1 1417 0
 865 0040 9861     	 str r0,[r3,#24]
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 866              	 .loc 1 1418 0
 867 0042 9862     	 str r0,[r3,#40]
1419:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 868              	 .loc 1 1419 0
 869 0044 D862     	 str r0,[r3,#44]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 870              	 .loc 1 1420 0
 871 0046 1863     	 str r0,[r3,#48]
1421:../Libraries/XMCLib/src/xmc_usbd.c **** 
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1423:../Libraries/XMCLib/src/xmc_usbd.c **** }
 872              	 .loc 1 1423 0
 873 0048 7047     	 bx lr
 874              	.L84:
 875 004a 00BF     	 .align 2
 876              	.L83:
 877 004c 00000000 	 .word xmc_device
 878              	 .cfi_endproc
 879              	.LFE209:
 881              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 882              	 .align 1
 883              	 .global XMC_USBD_EndpointUnconfigure
 884              	 .thumb
 885              	 .thumb_func
 887              	XMC_USBD_EndpointUnconfigure:
 888              	.LFB211:
1424:../Libraries/XMCLib/src/xmc_usbd.c **** 
1425:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1426:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1427:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1428:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1429:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1430:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const uint16_t ep_max_packet_size) 
1431:../Libraries/XMCLib/src/xmc_usbd.c **** {
1432:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1433:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
1435:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1443:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1446:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
1448:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1449:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
1452:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
1455:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
1457:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1458:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1459:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
1460:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
1462:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
1464:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
1466:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
1468:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1469:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x0U;
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1472:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x1U;
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1475:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x2U;
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1478:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x3U;
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1481:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1482:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1483:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1484:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1485:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1486:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1487:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
1488:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1489:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
1491:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall = 0U;
1493:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
1496:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
1497:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
1498:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
1500:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1501:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1502:../Libraries/XMCLib/src/xmc_usbd.c **** 		depctl_data_t data;
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
1504:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
1506:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1507:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
1508:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1509:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
1510:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
1512:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1513:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x0U;
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1516:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x1U;
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1519:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x2U;
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1522:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x3U;
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1525:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1526:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1527:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1528:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1529:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1530:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
1532:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1533:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1534:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
1535:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1536:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall =(uint8_t) 0U;
1537:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
1538:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
1539:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
1541:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
1542:../Libraries/XMCLib/src/xmc_usbd.c **** }
1543:../Libraries/XMCLib/src/xmc_usbd.c **** 
1544:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1545:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1546:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1547:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr) 
1548:../Libraries/XMCLib/src/xmc_usbd.c **** {
 889              	 .loc 1 1548 0
 890              	 .cfi_startproc
 891              	 
 892              	 
 893              	.LVL79:
 894 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 895              	.LCFI9:
 896              	 .cfi_def_cfa_offset 24
 897              	 .cfi_offset 4,-24
 898              	 .cfi_offset 5,-20
 899              	 .cfi_offset 6,-16
 900              	 .cfi_offset 7,-12
 901              	 .cfi_offset 8,-8
 902              	 .cfi_offset 14,-4
1549:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
1550:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1551:../Libraries/XMCLib/src/xmc_usbd.c **** 	daint_data_t daintmsk;
1552:../Libraries/XMCLib/src/xmc_usbd.c **** 	XMC_USBD_STATUS_t result;
1553:../Libraries/XMCLib/src/xmc_usbd.c **** 	uint32_t number_temp;
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;  
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 903              	 .loc 1 1555 0
 904 0004 384B     	 ldr r3,.L102
1549:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 905              	 .loc 1 1549 0
 906 0006 00F00F04 	 and r4,r0,#15
 907              	.LVL80:
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 908              	 .loc 1 1556 0
 909 000a 3422     	 movs r2,#52
 910 000c 6243     	 muls r2,r4,r2
 911 000e 03EB020E 	 add lr,r3,r2
 912              	.LVL81:
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 913              	 .loc 1 1555 0
 914 0012 D3F8A461 	 ldr r6,[r3,#420]
1557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1558:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 915              	 .loc 1 1558 0
 916 0016 9EF80410 	 ldrb r1,[lr,#4]
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
 917              	 .loc 1 1556 0
 918 001a 9A5C     	 ldrb r2,[r3,r2]
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 919              	 .loc 1 1555 0
 920 001c F569     	 ldr r5,[r6,#28]
 921              	.LVL82:
 922              	 .loc 1 1558 0
 923 001e 11F0040F 	 tst r1,#4
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 924              	 .loc 1 1554 0
 925 0022 4FF00007 	 mov r7,#0
 926              	.LVL83:
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
 927              	 .loc 1 1556 0
 928 0026 02F00F0C 	 and ip,r2,#15
 929              	.LVL84:
 930 002a 4FF00100 	 mov r0,#1
 931              	.LVL85:
 932              	 .loc 1 1558 0
 933 002e 58D0     	 beq .L86
1559:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1560:../Libraries/XMCLib/src/xmc_usbd.c ****      result = XMC_USBD_STATUS_ERROR;
1561:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1562:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1563:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1565:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
1566:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
1567:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 934              	 .loc 1 1570 0
 935 0030 01F0FB01 	 and r1,r1,#251
 936 0034 6FF34511 	 bfc r1,#5,#1
 937 0038 8EF80410 	 strb r1,[lr,#4]
1571:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 938              	 .loc 1 1571 0
 939 003c DEF80410 	 ldr r1,[lr,#4]
 940 0040 21F01001 	 bic r1,r1,#16
 941 0044 CEF80410 	 str r1,[lr,#4]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 942              	 .loc 1 1572 0
 943 0048 DEF80410 	 ldr r1,[lr,#4]
 944              	.LVL86:
1565:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 945              	 .loc 1 1565 0
 946 004c 67F3CF37 	 bfi r7,r7,#15,#1
 947              	 .loc 1 1572 0
 948 0050 21F00801 	 bic r1,r1,#8
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
 949              	 .loc 1 1556 0
 950 0054 00FA0CF0 	 lsl r0,r0,ip
1567:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 951              	 .loc 1 1567 0
 952 0058 47F09047 	 orr r7,r7,#1207959552
 953              	.LVL87:
1573:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 954              	 .loc 1 1574 0
 955 005c 22F07F02 	 bic r2,r2,#127
 956              	.LVL88:
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
 957              	 .loc 1 1572 0
 958 0060 CEF80410 	 str r1,[lr,#4]
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 959              	 .loc 1 1568 0
 960 0064 6FF35557 	 bfc r7,#21,#1
 961              	.LVL89:
 962              	 .loc 1 1574 0
 963 0068 02F0FF08 	 and r8,r2,#255
 964 006c C143     	 mvns r1,r0
 965 006e AAB9     	 cbnz r2,.L87
 966              	 .loc 1 1574 0 is_stmt 0 discriminator 1
 967 0070 9EF80420 	 ldrb r2,[lr,#4]
 968 0074 9007     	 lsls r0,r2,#30
 969 0076 11D0     	 beq .L87
 970              	.LVL90:
 971              	.L90:
1575:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1576:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
1578:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1579:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
1580:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1581:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
1582:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 972              	 .loc 1 1583 0 is_stmt 1
 973 0078 03EB8C0C 	 add ip,r3,ip,lsl#2
 974 007c DCF8C421 	 ldr r2,[ip,#452]
 975 0080 1760     	 str r7,[r2]
1584:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 976              	 .loc 1 1584 0
 977 0082 01EA1542 	 and r2,r1,r5,lsr#16
 978 0086 62F31F45 	 bfi r5,r2,#16,#16
1585:../Libraries/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 979              	 .loc 1 1585 0
 980 008a 184A     	 ldr r2,.L102+4
 981 008c 1268     	 ldr r2,[r2]
 982 008e 527B     	 ldrb r2,[r2,#13]
 983 0090 012A     	 cmp r2,#1
 984 0092 16D1     	 bne .L91
1586:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1587:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 985              	 .loc 1 1587 0
 986 0094 726B     	 ldr r2,[r6,#52]
 987 0096 0A40     	 ands r2,r2,r1
 988 0098 7263     	 str r2,[r6,#52]
 989 009a 12E0     	 b .L91
 990              	.LVL91:
 991              	.L87:
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
 992              	 .loc 1 1577 0
 993 009c 0CF16A02 	 add r2,ip,#106
 994 00a0 53F82220 	 ldr r2,[r3,r2,lsl#2]
 995 00a4 1760     	 str r7,[r2]
 996              	.LVL92:
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 997              	 .loc 1 1579 0
 998 00a6 01EA0502 	 and r2,r1,r5
 999 00aa 62F30F05 	 bfi r5,r2,#0,#16
1581:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1000              	 .loc 1 1581 0
 1001 00ae B8F1000F 	 cmp r8,#0
 1002 00b2 E1D0     	 beq .L90
1581:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1003              	 .loc 1 1581 0 is_stmt 0 discriminator 1
 1004 00b4 0C48     	 ldr r0,.L102
 1005 00b6 3422     	 movs r2,#52
 1006 00b8 02FB0402 	 mla r2,r2,r4,r0
 1007 00bc 1279     	 ldrb r2,[r2,#4]
 1008 00be 9207     	 lsls r2,r2,#30
 1009 00c0 DAD0     	 beq .L90
 1010              	.L91:
1588:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1589:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1590:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
1591:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 1011              	 .loc 1 1591 0 is_stmt 1
 1012 00c2 3420     	 movs r0,#52
 1013 00c4 00FB0430 	 mla r0,r0,r4,r3
1590:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 1014              	 .loc 1 1590 0
 1015 00c8 F561     	 str r5,[r6,#28]
 1016              	.LVL93:
 1017              	 .loc 1 1591 0
 1018 00ca 8188     	 ldrh r1,[r0,#4]
 1019              	.LBB25:
 1020              	.LBB26:
 384:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1021              	 .loc 1 384 0
 1022 00cc 0122     	 movs r2,#1
 1023 00ce C1F38311 	 ubfx r1,r1,#6,#4
 1024 00d2 8A40     	 lsls r2,r2,r1
 1025 00d4 B3F8FC11 	 ldrh r1,[r3,#508]
 1026 00d8 21EA0202 	 bic r2,r1,r2
 1027 00dc A3F8FC21 	 strh r2,[r3,#508]
 1028              	.LBE26:
 1029              	.LBE25:
1592:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 1030              	 .loc 1 1592 0
 1031 00e0 0020     	 movs r0,#0
 1032              	.LVL94:
 1033              	.L86:
1593:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1594:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1595:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1034              	 .loc 1 1595 0
 1035 00e2 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1036              	.LVL95:
 1037              	.L103:
 1038 00e6 00BF     	 .align 2
 1039              	.L102:
 1040 00e8 00000000 	 .word xmc_device
 1041 00ec 00000000 	 .word usbd_init
 1042              	 .cfi_endproc
 1043              	.LFE211:
 1045              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 1046              	 .align 1
 1047              	 .global XMC_USBD_GetFrameNumber
 1048              	 .thumb
 1049              	 .thumb_func
 1051              	XMC_USBD_GetFrameNumber:
 1052              	.LFB212:
1596:../Libraries/XMCLib/src/xmc_usbd.c **** 
1597:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1598:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1599:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1600:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void) 
1601:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1053              	 .loc 1 1601 0
 1054              	 .cfi_startproc
 1055              	 
 1056              	 
 1057              	 
1602:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1603:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1604:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 1058              	 .loc 1 1604 0
 1059 0000 034B     	 ldr r3,.L105
 1060 0002 D3F8A431 	 ldr r3,[r3,#420]
 1061 0006 9868     	 ldr r0,[r3,#8]
 1062              	.LVL96:
1605:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
1606:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
1607:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1063              	 .loc 1 1607 0
 1064 0008 C0F30D20 	 ubfx r0,r0,#8,#14
 1065              	.LVL97:
 1066 000c 7047     	 bx lr
 1067              	.L106:
 1068 000e 00BF     	 .align 2
 1069              	.L105:
 1070 0010 00000000 	 .word xmc_device
 1071              	 .cfi_endproc
 1072              	.LFE212:
 1074              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 1075              	 .align 1
 1076              	 .global XMC_USBD_IsEnumDone
 1077              	 .thumb
 1078              	 .thumb_func
 1080              	XMC_USBD_IsEnumDone:
 1081              	.LFB213:
1608:../Libraries/XMCLib/src/xmc_usbd.c **** 
1609:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1610:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1611:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1612:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1613:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1614:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1615:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1082              	 .loc 1 1615 0
 1083              	 .cfi_startproc
 1084              	 
 1085              	 
 1086              	 
1616:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 1087              	 .loc 1 1616 0
 1088 0000 044B     	 ldr r3,.L108
 1089 0002 93F8FE01 	 ldrb r0,[r3,#510]
 1090 0006 00F00500 	 and r0,r0,#5
1617:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1091              	 .loc 1 1617 0
 1092 000a 431F     	 subs r3,r0,#5
 1093 000c 5842     	 rsbs r0,r3,#0
 1094 000e 5841     	 adcs r0,r0,r3
 1095 0010 7047     	 bx lr
 1096              	.L109:
 1097 0012 00BF     	 .align 2
 1098              	.L108:
 1099 0014 00000000 	 .word xmc_device
 1100              	 .cfi_endproc
 1101              	.LFE213:
 1103              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 1104              	 .align 1
 1105              	 .global XMC_USBD_Uninitialize
 1106              	 .thumb
 1107              	 .thumb_func
 1109              	XMC_USBD_Uninitialize:
 1110              	.LFB200:
1201:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
 1111              	 .loc 1 1201 0
 1112              	 .cfi_startproc
 1113              	 
 1114              	 
1204:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 1115              	 .loc 1 1204 0
 1116 0000 0748     	 ldr r0,.L111
 1117 0002 D0F8A421 	 ldr r2,[r0,#420]
1201:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
 1118              	 .loc 1 1201 0
 1119 0006 08B5     	 push {r3,lr}
 1120              	.LCFI10:
 1121              	 .cfi_def_cfa_offset 8
 1122              	 .cfi_offset 3,-8
 1123              	 .cfi_offset 14,-4
1204:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 1124              	 .loc 1 1204 0
 1125 0008 5368     	 ldr r3,[r2,#4]
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1126              	 .loc 1 1205 0
 1127 000a 43F00203 	 orr r3,r3,#2
 1128              	.LVL98:
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
 1129              	 .loc 1 1206 0
 1130 000e 5360     	 str r3,[r2,#4]
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1131              	 .loc 1 1208 0
 1132 0010 0021     	 movs r1,#0
 1133 0012 4FF40272 	 mov r2,#520
 1134 0016 FFF7FEFF 	 bl memset
 1135              	.LVL99:
1210:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1136              	 .loc 1 1210 0
 1137 001a 0020     	 movs r0,#0
 1138 001c 08BD     	 pop {r3,pc}
 1139              	.L112:
 1140 001e 00BF     	 .align 2
 1141              	.L111:
 1142 0020 00000000 	 .word xmc_device
 1143              	 .cfi_endproc
 1144              	.LFE200:
 1146              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 1147              	 .align 1
 1148              	 .global XMC_USBD_EndpointConfigure
 1149              	 .thumb
 1150              	 .thumb_func
 1152              	XMC_USBD_EndpointConfigure:
 1153              	.LFB210:
1431:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 1154              	 .loc 1 1431 0
 1155              	 .cfi_startproc
 1156              	 
 1157              	 
 1158              	.LVL100:
 1159 0000 2DE9F84F 	 push {r3,r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1160              	.LCFI11:
 1161              	 .cfi_def_cfa_offset 40
 1162              	 .cfi_offset 3,-40
 1163              	 .cfi_offset 4,-36
 1164              	 .cfi_offset 5,-32
 1165              	 .cfi_offset 6,-28
 1166              	 .cfi_offset 7,-24
 1167              	 .cfi_offset 8,-20
 1168              	 .cfi_offset 9,-16
 1169              	 .cfi_offset 10,-12
 1170              	 .cfi_offset 11,-8
 1171              	 .cfi_offset 14,-4
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 1172              	 .loc 1 1434 0
 1173 0004 DFF8B491 	 ldr r9,.L147+8
1431:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 1174              	 .loc 1 1431 0
 1175 0008 1546     	 mov r5,r2
1435:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 1176              	 .loc 1 1435 0
 1177 000a 00F00F08 	 and r8,r0,#15
 1178              	.LVL101:
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
 1179              	 .loc 1 1436 0
 1180 000e 3422     	 movs r2,#52
 1181              	.LVL102:
 1182 0010 02FB08FB 	 mul fp,r2,r8
 1183 0014 0BEB0904 	 add r4,fp,r9
 1184              	.LVL103:
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 1185              	 .loc 1 1434 0
 1186 0018 D9F8A431 	 ldr r3,[r9,#420]
1431:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 1187              	 .loc 1 1431 0
 1188 001c 8246     	 mov r10,r0
 1189 001e 0E46     	 mov r6,r1
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
 1190              	 .loc 1 1436 0
 1191 0020 2046     	 mov r0,r4
 1192              	.LVL104:
 1193 0022 0021     	 movs r1,#0
 1194              	.LVL105:
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 1195              	 .loc 1 1434 0
 1196 0024 DF69     	 ldr r7,[r3,#28]
 1197              	.LVL106:
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
 1198              	 .loc 1 1436 0
 1199 0026 FFF7FEFF 	 bl memset
 1200              	.LVL107:
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 1201              	 .loc 1 1439 0
 1202 002a 2379     	 ldrb r3,[r4,#4]
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 1203              	 .loc 1 1438 0
 1204 002c 0BF809A0 	 strb r10,[fp,r9]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 1205              	 .loc 1 1439 0
 1206 0030 43F00403 	 orr r3,r3,#4
 1207 0034 2371     	 strb r3,[r4,#4]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 1208              	 .loc 1 1440 0
 1209 0036 6368     	 ldr r3,[r4,#4]
 1210 0038 2046     	 mov r0,r4
 1211 003a 65F3D123 	 bfi r3,r5,#11,#7
 1212 003e 40F8043F 	 str r3,[r0,#4]!
 1213 0042 4B46     	 mov r3,r9
1443:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1214              	 .loc 1 1443 0
 1215 0044 4268     	 ldr r2,[r0,#4]
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1216              	 .loc 1 1441 0
 1217 0046 BAF1000F 	 cmp r10,#0
 1218 004a 02D0     	 beq .L114
1443:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1219              	 .loc 1 1443 0
 1220 004c 4FF6C071 	 movw r1,#65472
 1221 0050 00E0     	 b .L144
 1222              	.L114:
1447:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1223              	 .loc 1 1447 0
 1224 0052 4021     	 movs r1,#64
 1225              	.L144:
 1226 0054 61F31202 	 bfi r2,r1,#0,#19
 1227 0058 4260     	 str r2,[r0,#4]
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 1228              	 .loc 1 1450 0
 1229 005a 3422     	 movs r2,#52
 1230 005c 02FB08F2 	 mul r2,r2,r8
 1231 0060 DFF85CE1 	 ldr lr,.L147+12
 1232 0064 995C     	 ldrb r1,[r3,r2]
 1233 0066 01F00F01 	 and r1,r1,#15
 1234 006a 0802     	 lsls r0,r1,#8
 1235 006c 9C18     	 adds r4,r3,r2
 1236              	.LVL108:
 1237 006e 0EEB000C 	 add ip,lr,r0
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
 1238              	 .loc 1 1451 0
 1239 0072 0EF5E06E 	 add lr,lr,#1792
 1240 0076 7044     	 add r0,r0,lr
 1241 0078 E060     	 str r0,[r4,#12]
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 1242              	 .loc 1 1453 0
 1243 007a 4E48     	 ldr r0,.L147
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 1244              	 .loc 1 1450 0
 1245 007c C4F81CC0 	 str ip,[r4,#28]
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 1246              	 .loc 1 1453 0
 1247 0080 50F82100 	 ldr r0,[r0,r1,lsl#2]
 1248 0084 2062     	 str r0,[r4,#32]
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
 1249              	 .loc 1 1454 0
 1250 0086 4C48     	 ldr r0,.L147+4
 1251 0088 50F82100 	 ldr r0,[r0,r1,lsl#2]
 1252 008c 6061     	 str r0,[r4,#20]
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1253              	 .loc 1 1456 0
 1254 008e 9A5C     	 ldrb r2,[r3,r2]
 1255 0090 1006     	 lsls r0,r2,#24
 1256 0092 01D4     	 bmi .L116
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1257              	 .loc 1 1456 0 is_stmt 0 discriminator 1
 1258 0094 002E     	 cmp r6,#0
 1259 0096 54D1     	 bne .L117
 1260              	.L116:
 1261              	.LBB31:
1459:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1262              	 .loc 1 1459 0 is_stmt 1
 1263 0098 01F16A02 	 add r2,r1,#106
 1264 009c 53F822C0 	 ldr ip,[r3,r2,lsl#2]
 1265 00a0 DCF80020 	 ldr r2,[ip]
 1266              	.LVL109:
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1267              	 .loc 1 1461 0
 1268 00a4 42F40042 	 orr r2,r2,#32768
 1269              	.LVL110:
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
 1270              	 .loc 1 1463 0
 1271 00a8 66F39342 	 bfi r2,r6,#18,#2
 1272              	.LVL111:
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1273              	 .loc 1 1465 0
 1274 00ac 9EB9     	 cbnz r6,.L118
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1275              	 .loc 1 1467 0
 1276 00ae 102D     	 cmp r5,#16
 1277 00b0 0DD0     	 beq .L120
 1278 00b2 03D8     	 bhi .L121
 1279 00b4 082D     	 cmp r5,#8
 1280 00b6 10D1     	 bne .L119
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1281              	 .loc 1 1479 0
 1282 00b8 0320     	 movs r0,#3
 1283 00ba 09E0     	 b .L145
 1284              	.L121:
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1285              	 .loc 1 1467 0
 1286 00bc 202D     	 cmp r5,#32
 1287 00be 04D0     	 beq .L123
 1288 00c0 402D     	 cmp r5,#64
 1289 00c2 0AD1     	 bne .L119
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1290              	 .loc 1 1470 0
 1291 00c4 66F30A02 	 bfi r2,r6,#0,#11
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 1292              	 .loc 1 1471 0
 1293 00c8 07E0     	 b .L119
 1294              	.L123:
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1295              	 .loc 1 1473 0
 1296 00ca 0120     	 movs r0,#1
 1297 00cc 00E0     	 b .L145
 1298              	.L120:
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1299              	 .loc 1 1476 0
 1300 00ce 0220     	 movs r0,#2
 1301              	.L145:
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 1302              	 .loc 1 1479 0
 1303 00d0 60F30A02 	 bfi r2,r0,#0,#11
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 1304              	 .loc 1 1480 0
 1305 00d4 01E0     	 b .L119
 1306              	.L118:
1487:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 1307              	 .loc 1 1487 0
 1308 00d6 65F30A02 	 bfi r2,r5,#0,#11
 1309              	.L119:
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
 1310              	 .loc 1 1490 0 discriminator 2
 1311 00da 42F08052 	 orr r2,r2,#268435456
 1312              	.LVL112:
 1313              	.LBB32:
 1314              	.LBB33:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1315              	 .loc 1 363 0 discriminator 2
 1316 00de B3F8FCE1 	 ldrh lr,[r3,#508]
 1317              	.LBE33:
 1318              	.LBE32:
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
 1319              	 .loc 1 1492 0 discriminator 2
 1320 00e2 6FF35552 	 bfc r2,#21,#1
 1321              	.LVL113:
 1322              	.LBB36:
 1323              	.LBB34:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1324              	 .loc 1 363 0 discriminator 2
 1325 00e6 4FF00009 	 mov r9,#0
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 1326              	 .loc 1 360 0 discriminator 2
 1327 00ea 0120     	 movs r0,#1
 1328              	.LVL114:
 1329              	.L125:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1330              	 .loc 1 363 0
 1331 00ec 10EA0E0F 	 tst r0,lr
 1332 00f0 5FFA89F4 	 uxtb r4,r9
 1333              	.LVL115:
 1334 00f4 07D0     	 beq .L126
 1335 00f6 09F10109 	 add r9,r9,#1
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1336              	 .loc 1 365 0
 1337 00fa 4000     	 lsls r0,r0,#1
 1338              	.LVL116:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1339              	 .loc 1 363 0
 1340 00fc B9F1070F 	 cmp r9,#7
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 1341              	 .loc 1 365 0
 1342 0100 80B2     	 uxth r0,r0
 1343              	.LVL117:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1344              	 .loc 1 363 0
 1345 0102 F3D1     	 bne .L125
 1346 0104 4C46     	 mov r4,r9
 1347              	.L126:
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1348              	 .loc 1 368 0
 1349 0106 10EA0E0F 	 tst r0,lr
 370:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 1350              	 .loc 1 370 0
 1351 010a 04BF     	 itt eq
 1352 010c 40EA0E00 	 orreq r0,r0,lr
 1353              	.LVL118:
 1354 0110 A3F8FC01 	 strheq r0,[r3,#508]
 1355              	.LVL119:
 1356              	.LBE34:
 1357              	.LBE36:
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 1358              	 .loc 1 1494 0
 1359 0114 4FF03400 	 mov r0,#52
 1360 0118 00FB0830 	 mla r0,r0,r8,r3
 1361              	.LBB37:
 1362              	.LBB35:
 362:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 1363              	 .loc 1 362 0
 1364 011c 18BF     	 it ne
 1365 011e 0024     	 movne r4,#0
 1366              	.LVL120:
 1367              	.LBE35:
 1368              	.LBE37:
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 1369              	 .loc 1 1494 0
 1370 0120 B0F804E0 	 ldrh lr,[r0,#4]
 1371 0124 04F00F04 	 and r4,r4,#15
 1372              	.LVL121:
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
 1373              	 .loc 1 1495 0
 1374 0128 64F39952 	 bfi r2,r4,#22,#4
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 1375              	 .loc 1 1494 0
 1376 012c 64F3891E 	 bfi lr,r4,#6,#4
 1377 0130 A0F804E0 	 strh lr,[r0,#4]
1496:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
 1378              	 .loc 1 1496 0
 1379 0134 CCF80020 	 str r2,[ip]
1497:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1380              	 .loc 1 1497 0
 1381 0138 0122     	 movs r2,#1
 1382              	.LVL122:
 1383 013a 8A40     	 lsls r2,r2,r1
 1384 013c 3A43     	 orrs r2,r2,r7
 1385 013e 62F30F07 	 bfi r7,r2,#0,#16
 1386              	.L117:
 1387              	.LBE31:
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1388              	 .loc 1 1499 0
 1389 0142 3422     	 movs r2,#52
 1390 0144 02FB08F8 	 mul r8,r2,r8
 1391              	.LVL123:
 1392 0148 13F80820 	 ldrb r2,[r3,r8]
 1393 014c 1206     	 lsls r2,r2,#24
 1394 014e 00D5     	 bpl .L129
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1395              	 .loc 1 1499 0 is_stmt 0 discriminator 1
 1396 0150 56BB     	 cbnz r6,.L130
 1397              	.L129:
 1398              	.LBB38:
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
 1399              	 .loc 1 1503 0 is_stmt 1
 1400 0152 03EB8102 	 add r2,r3,r1,lsl#2
 1401 0156 D2F8C401 	 ldr r0,[r2,#452]
 1402 015a 0268     	 ldr r2,[r0]
 1403              	.LVL124:
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
 1404              	 .loc 1 1505 0
 1405 015c 42F40042 	 orr r2,r2,#32768
 1406              	.LVL125:
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
 1407              	 .loc 1 1507 0
 1408 0160 66F39342 	 bfi r2,r6,#18,#2
 1409              	.LVL126:
1509:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 1410              	 .loc 1 1509 0
 1411 0164 9EB9     	 cbnz r6,.L131
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1412              	 .loc 1 1511 0
 1413 0166 102D     	 cmp r5,#16
 1414 0168 0DD0     	 beq .L133
 1415 016a 03D8     	 bhi .L134
 1416 016c 082D     	 cmp r5,#8
 1417 016e 10D1     	 bne .L132
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1418              	 .loc 1 1523 0
 1419 0170 0324     	 movs r4,#3
 1420 0172 09E0     	 b .L146
 1421              	.L134:
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 1422              	 .loc 1 1511 0
 1423 0174 202D     	 cmp r5,#32
 1424 0176 04D0     	 beq .L136
 1425 0178 402D     	 cmp r5,#64
 1426 017a 0AD1     	 bne .L132
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1427              	 .loc 1 1514 0
 1428 017c 66F30A02 	 bfi r2,r6,#0,#11
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 1429              	 .loc 1 1515 0
 1430 0180 07E0     	 b .L132
 1431              	.L136:
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1432              	 .loc 1 1517 0
 1433 0182 0124     	 movs r4,#1
 1434 0184 00E0     	 b .L146
 1435              	.L133:
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1436              	 .loc 1 1520 0
 1437 0186 0224     	 movs r4,#2
 1438              	.L146:
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 1439              	 .loc 1 1523 0
 1440 0188 64F30A02 	 bfi r2,r4,#0,#11
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 1441              	 .loc 1 1524 0
 1442 018c 01E0     	 b .L132
 1443              	.L131:
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 1444              	 .loc 1 1531 0
 1445 018e 65F30A02 	 bfi r2,r5,#0,#11
 1446              	.L132:
1534:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
 1447              	 .loc 1 1534 0 discriminator 4
 1448 0192 42F08052 	 orr r2,r2,#268435456
 1449              	.LVL127:
1536:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
 1450              	 .loc 1 1536 0 discriminator 4
 1451 0196 6FF35552 	 bfc r2,#21,#1
 1452              	.LVL128:
1537:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
 1453              	 .loc 1 1537 0 discriminator 4
 1454 019a 0260     	 str r2,[r0]
1538:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1455              	 .loc 1 1538 0 discriminator 4
 1456 019c 0122     	 movs r2,#1
 1457              	.LVL129:
 1458 019e 8A40     	 lsls r2,r2,r1
 1459 01a0 42EA1742 	 orr r2,r2,r7,lsr#16
 1460 01a4 62F31F47 	 bfi r7,r2,#16,#16
 1461              	.L130:
 1462              	.LBE38:
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1463              	 .loc 1 1540 0
 1464 01a8 D3F8A431 	 ldr r3,[r3,#420]
1542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1465              	 .loc 1 1542 0
 1466 01ac 0020     	 movs r0,#0
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1467              	 .loc 1 1540 0
 1468 01ae DF61     	 str r7,[r3,#28]
1542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1469              	 .loc 1 1542 0
 1470 01b0 BDE8F88F 	 pop {r3,r4,r5,r6,r7,r8,r9,r10,fp,pc}
 1471              	.LVL130:
 1472              	.L148:
 1473              	 .align 2
 1474              	.L147:
 1475 01b4 00000000 	 .word .LANCHOR1
 1476 01b8 00000000 	 .word .LANCHOR2
 1477 01bc 00000000 	 .word xmc_device
 1478 01c0 00000000 	 .word .LANCHOR0
 1479              	 .cfi_endproc
 1480              	.LFE210:
 1482              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 1483              	 .align 1
 1484              	 .global XMC_USBD_EndpointRead
 1485              	 .thumb
 1486              	 .thumb_func
 1488              	XMC_USBD_EndpointRead:
 1489              	.LFB205:
1285:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 1490              	 .loc 1 1285 0
 1491              	 .cfi_startproc
 1492              	 
 1493              	 
 1494              	.LVL131:
 1495 0000 38B5     	 push {r3,r4,r5,lr}
 1496              	.LCFI12:
 1497              	 .cfi_def_cfa_offset 16
 1498              	 .cfi_offset 3,-16
 1499              	 .cfi_offset 4,-12
 1500              	 .cfi_offset 5,-8
 1501              	 .cfi_offset 14,-4
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1502              	 .loc 1 1287 0
 1503 0002 0C4C     	 ldr r4,.L152
 1504 0004 3423     	 movs r3,#52
 1505 0006 03FB0044 	 mla r4,r3,r0,r4
 1506              	.LVL132:
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 1507              	 .loc 1 1291 0
 1508 000a 0846     	 mov r0,r1
 1509              	.LVL133:
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1510              	 .loc 1 1287 0
 1511 000c 2569     	 ldr r5,[r4,#16]
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 1512              	 .loc 1 1291 0
 1513 000e A369     	 ldr r3,[r4,#24]
 1514 0010 9542     	 cmp r5,r2
 1515 0012 28BF     	 it cs
 1516 0014 1546     	 movcs r5,r2
 1517              	.LVL134:
 1518 0016 E268     	 ldr r2,[r4,#12]
 1519 0018 D118     	 adds r1,r2,r3
 1520              	.LVL135:
 1521 001a 2A46     	 mov r2,r5
 1522 001c FFF7FEFF 	 bl memcpy
 1523              	.LVL136:
1292:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 1524              	 .loc 1 1292 0
 1525 0020 2369     	 ldr r3,[r4,#16]
 1526 0022 5B1B     	 subs r3,r3,r5
 1527 0024 2361     	 str r3,[r4,#16]
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1528              	 .loc 1 1293 0
 1529 0026 0BB1     	 cbz r3,.L150
1295:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1530              	 .loc 1 1295 0
 1531 0028 A369     	 ldr r3,[r4,#24]
 1532 002a 2B44     	 add r3,r3,r5
 1533              	.L150:
1299:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1534              	 .loc 1 1299 0
 1535 002c A361     	 str r3,[r4,#24]
1302:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1536              	 .loc 1 1302 0
 1537 002e 2846     	 mov r0,r5
 1538 0030 38BD     	 pop {r3,r4,r5,pc}
 1539              	.LVL137:
 1540              	.L153:
 1541 0032 00BF     	 .align 2
 1542              	.L152:
 1543 0034 00000000 	 .word xmc_device
 1544              	 .cfi_endproc
 1545              	.LFE205:
 1547              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 1548              	 .align 1
 1549              	 .global XMC_USBD_EndpointWrite
 1550              	 .thumb
 1551              	 .thumb_func
 1553              	XMC_USBD_EndpointWrite:
 1554              	.LFB206:
1308:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 1555              	 .loc 1 1308 0
 1556              	 .cfi_startproc
 1557              	 
 1558              	 
 1559              	.LVL138:
 1560 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1561              	.LCFI13:
 1562              	 .cfi_def_cfa_offset 24
 1563              	 .cfi_offset 3,-24
 1564              	 .cfi_offset 4,-20
 1565              	 .cfi_offset 5,-16
 1566              	 .cfi_offset 6,-12
 1567              	 .cfi_offset 7,-8
 1568              	 .cfi_offset 14,-4
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1569              	 .loc 1 1311 0
 1570 0002 134B     	 ldr r3,.L158
1309:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
 1571              	 .loc 1 1309 0
 1572 0004 00F00F00 	 and r0,r0,#15
 1573              	.LVL139:
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1574              	 .loc 1 1311 0
 1575 0008 3424     	 movs r4,#52
 1576 000a 04FB0034 	 mla r4,r4,r0,r3
 1577              	.LVL140:
 1578 000e 2379     	 ldrb r3,[r4,#4]
 1579 0010 5807     	 lsls r0,r3,#29
 1580 0012 19D5     	 bpl .L156
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1581              	 .loc 1 1315 0
 1582 0014 6368     	 ldr r3,[r4,#4]
 1583 0016 1B07     	 lsls r3,r3,#28
 1584 0018 18D4     	 bmi .L157
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1585              	 .loc 1 1321 0
 1586 001a 236A     	 ldr r3,[r4,#32]
1326:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
 1587              	 .loc 1 1326 0
 1588 001c E069     	 ldr r0,[r4,#28]
 1589 001e 9A42     	 cmp r2,r3
 1590 0020 28BF     	 it cs
 1591 0022 1A46     	 movcs r2,r3
 1592              	.LVL141:
 1593 0024 1546     	 mov r5,r2
 1594              	.LVL142:
 1595 0026 FFF7FEFF 	 bl memcpy
 1596              	.LVL143:
1327:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 1597              	 .loc 1 1327 0
 1598 002a E369     	 ldr r3,[r4,#28]
 1599 002c 6362     	 str r3,[r4,#36]
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 1600              	 .loc 1 1330 0
 1601 002e 0023     	 movs r3,#0
 1602 0030 A362     	 str r3,[r4,#40]
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 1603              	 .loc 1 1331 0
 1604 0032 E362     	 str r3,[r4,#44]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
 1605              	 .loc 1 1332 0
 1606 0034 6368     	 ldr r3,[r4,#4]
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
 1607              	 .loc 1 1328 0
 1608 0036 2563     	 str r5,[r4,#48]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
 1609              	 .loc 1 1332 0
 1610 0038 43F00803 	 orr r3,r3,#8
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
 1611              	 .loc 1 1334 0
 1612 003c 2046     	 mov r0,r4
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
 1613              	 .loc 1 1332 0
 1614 003e 6360     	 str r3,[r4,#4]
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
 1615              	 .loc 1 1334 0
 1616 0040 FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 1617              	.LVL144:
1335:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1618              	 .loc 1 1335 0
 1619 0044 206B     	 ldr r0,[r4,#48]
 1620              	.LVL145:
 1621 0046 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1622              	.LVL146:
 1623              	.L156:
1313:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1624              	 .loc 1 1313 0
 1625 0048 0120     	 movs r0,#1
 1626 004a F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1627              	.LVL147:
 1628              	.L157:
1317:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1629              	 .loc 1 1317 0
 1630 004c 0020     	 movs r0,#0
 1631              	.LVL148:
1338:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1632              	 .loc 1 1338 0
 1633 004e F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1634              	.LVL149:
 1635              	.L159:
 1636              	 .align 2
 1637              	.L158:
 1638 0050 00000000 	 .word xmc_device
 1639              	 .cfi_endproc
 1640              	.LFE206:
 1642              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
 1643              	 .align 1
 1644              	 .global XMC_USBD_lDeviceActive
 1645              	 .thumb
 1646              	 .thumb_func
 1648              	XMC_USBD_lDeviceActive:
 1649              	.LFB174:
 181:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 1650              	 .loc 1 181 0
 1651              	 .cfi_startproc
 1652              	 
 1653              	 
 1654              	.LVL150:
 1655 0000 10B5     	 push {r4,lr}
 1656              	.LCFI14:
 1657              	 .cfi_def_cfa_offset 8
 1658              	 .cfi_offset 4,-8
 1659              	 .cfi_offset 14,-4
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1660              	 .loc 1 184 0
 1661 0002 0023     	 movs r3,#0
 1662 0004 017B     	 ldrb r1,[r0,#12]
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
 1663              	 .loc 1 183 0
 1664 0006 1846     	 mov r0,r3
 1665              	.LVL151:
 1666              	.L161:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1667              	 .loc 1 184 0 discriminator 1
 1668 0008 DAB2     	 uxtb r2,r3
 1669 000a 8A42     	 cmp r2,r1
 1670 000c 0FD2     	 bcs .L166
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1671              	 .loc 1 186 0
 1672 000e 084C     	 ldr r4,.L167
 1673 0010 3422     	 movs r2,#52
 1674 0012 02FB0342 	 mla r2,r2,r3,r4
 1675 0016 5468     	 ldr r4,[r2,#4]
 1676 0018 2407     	 lsls r4,r4,#28
 1677 001a 05D4     	 bmi .L164
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 1678              	 .loc 1 186 0 is_stmt 0 discriminator 1
 1679 001c 5268     	 ldr r2,[r2,#4]
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 1680              	 .loc 1 188 0 is_stmt 1 discriminator 1
 1681 001e 12F0100F 	 tst r2,#16
 1682 0022 18BF     	 it ne
 1683 0024 0120     	 movne r0,#1
 1684              	.LVL152:
 1685 0026 00E0     	 b .L162
 1686              	.LVL153:
 1687              	.L164:
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 1688              	 .loc 1 188 0 is_stmt 0
 1689 0028 0120     	 movs r0,#1
 1690              	.LVL154:
 1691              	.L162:
 1692 002a 0133     	 adds r3,r3,#1
 1693              	.LVL155:
 1694 002c ECE7     	 b .L161
 1695              	.LVL156:
 1696              	.L166:
 192:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1697              	 .loc 1 192 0 is_stmt 1
 1698 002e 10BD     	 pop {r4,pc}
 1699              	.L168:
 1700              	 .align 2
 1701              	.L167:
 1702 0030 00000000 	 .word xmc_device
 1703              	 .cfi_endproc
 1704              	.LFE174:
 1706              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 1707              	 .align 1
 1708              	 .global XMC_USBD_DeviceGetState
 1709              	 .thumb
 1710              	 .thumb_func
 1712              	XMC_USBD_DeviceGetState:
 1713              	.LFB203:
1241:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
 1714              	 .loc 1 1241 0
 1715              	 .cfi_startproc
 1716              	 
 1717              	 
 1718              	.LVL157:
 1719 0000 70B5     	 push {r4,r5,r6,lr}
 1720              	.LCFI15:
 1721              	 .cfi_def_cfa_offset 16
 1722              	 .cfi_offset 4,-16
 1723              	 .cfi_offset 5,-12
 1724              	 .cfi_offset 6,-8
 1725              	 .cfi_offset 14,-4
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 1726              	 .loc 1 1244 0
 1727 0002 0B4E     	 ldr r6,.L170
 1728 0004 96F8FE51 	 ldrb r5,[r6,#510]
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 1729              	 .loc 1 1245 0
 1730 0008 FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 1731              	.LVL158:
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 1732              	 .loc 1 1246 0
 1733 000c 96F8FE31 	 ldrb r3,[r6,#510]
1242:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 1734              	 .loc 1 1242 0
 1735 0010 0024     	 movs r4,#0
 1736              	.LVL159:
1247:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1737              	 .loc 1 1247 0
 1738 0012 C3F38003 	 ubfx r3,r3,#2,#1
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 1739              	 .loc 1 1244 0
 1740 0016 05F00105 	 and r5,r5,#1
 1741              	.LVL160:
1247:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1742              	 .loc 1 1247 0
 1743 001a 63F30004 	 bfi r4,r3,#0,#1
 1744              	.LVL161:
 1745 001e 65F34104 	 bfi r4,r5,#1,#1
 1746 0022 60F38204 	 bfi r4,r0,#2,#1
 1747 0026 0123     	 movs r3,#1
 1748 0028 63F3C404 	 bfi r4,r3,#3,#2
1248:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1749              	 .loc 1 1248 0
 1750 002c 2046     	 mov r0,r4
 1751              	.LVL162:
 1752 002e 70BD     	 pop {r4,r5,r6,pc}
 1753              	.LVL163:
 1754              	.L171:
 1755              	 .align 2
 1756              	.L170:
 1757 0030 00000000 	 .word xmc_device
 1758              	 .cfi_endproc
 1759              	.LFE203:
 1761              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 1762              	 .align 1
 1763              	 .global XMC_USBD_Enable
 1764              	 .thumb
 1765              	 .thumb_func
 1767              	XMC_USBD_Enable:
 1768              	.LFB190:
 942:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 1769              	 .loc 1 942 0
 1770              	 .cfi_startproc
 1771              	 
 1772              	 
 1773 0000 08B5     	 push {r3,lr}
 1774              	.LCFI16:
 1775              	 .cfi_def_cfa_offset 8
 1776              	 .cfi_offset 3,-8
 1777              	 .cfi_offset 14,-4
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 1778              	 .loc 1 947 0
 1779 0002 0348     	 ldr r0,.L173
 1780 0004 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 1781              	.LVL164:
 949:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1782              	 .loc 1 949 0
 1783 0008 BDE80840 	 pop {r3,lr}
 1784              	.LCFI17:
 1785              	 .cfi_restore 14
 1786              	 .cfi_restore 3
 1787              	 .cfi_def_cfa_offset 0
 948:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1788              	 .loc 1 948 0
 1789 000c FFF7FEBF 	 b XMC_SCU_POWER_EnableUsb
 1790              	.LVL165:
 1791              	.L174:
 1792              	 .align 2
 1793              	.L173:
 1794 0010 80000020 	 .word 536871040
 1795              	 .cfi_endproc
 1796              	.LFE190:
 1798              	 .section .text.XMC_USBD_Init,"ax",%progbits
 1799              	 .align 1
 1800              	 .global XMC_USBD_Init
 1801              	 .thumb
 1802              	 .thumb_func
 1804              	XMC_USBD_Init:
 1805              	.LFB199:
1084:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
 1806              	 .loc 1 1084 0
 1807              	 .cfi_startproc
 1808              	 
 1809              	 
 1810              	.LVL166:
 1811 0000 38B5     	 push {r3,r4,r5,lr}
 1812              	.LCFI18:
 1813              	 .cfi_def_cfa_offset 16
 1814              	 .cfi_offset 3,-16
 1815              	 .cfi_offset 4,-12
 1816              	 .cfi_offset 5,-8
 1817              	 .cfi_offset 14,-4
1084:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
 1818              	 .loc 1 1084 0
 1819 0002 0546     	 mov r5,r0
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   
 1820              	 .loc 1 1096 0
 1821 0004 FFF7FEFF 	 bl XMC_USBD_Enable
 1822              	.LVL167:
1098:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1823              	 .loc 1 1098 0
 1824 0008 394B     	 ldr r3,.L187
 1825 000a 1D60     	 str r5,[r3]
 1826              	.LVL168:
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1827              	 .loc 1 1101 0
 1828 000c 0023     	 movs r3,#0
 1829              	.LVL169:
 1830              	.L176:
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 1831              	 .loc 1 1103 0 discriminator 3
 1832 000e 3949     	 ldr r1,.L187+4
 1833 0010 4022     	 movs r2,#64
 1834 0012 41F82320 	 str r2,[r1,r3,lsl#2]
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1835              	 .loc 1 1104 0 discriminator 3
 1836 0016 3849     	 ldr r1,.L187+8
 1837 0018 41F82320 	 str r2,[r1,r3,lsl#2]
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1838              	 .loc 1 1101 0 discriminator 3
 1839 001c 0133     	 adds r3,r3,#1
 1840              	.LVL170:
 1841 001e 072B     	 cmp r3,#7
 1842 0020 F5D1     	 bne .L176
1108:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1843              	 .loc 1 1108 0
 1844 0022 364C     	 ldr r4,.L187+12
 1845 0024 0021     	 movs r1,#0
 1846 0026 4FF40272 	 mov r2,#520
 1847 002a 2046     	 mov r0,r4
 1848 002c FFF7FEFF 	 bl memset
 1849              	.LVL171:
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 1850              	 .loc 1 1111 0
 1851 0030 6B68     	 ldr r3,[r5,#4]
 1852 0032 C4F80032 	 str r3,[r4,#512]
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 1853              	 .loc 1 1112 0
 1854 0036 AB68     	 ldr r3,[r5,#8]
 1855 0038 C4F80432 	 str r3,[r4,#516]
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
 1856              	 .loc 1 1113 0
 1857 003c 2B68     	 ldr r3,[r5]
 1858              	.LVL172:
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
 1859              	 .loc 1 1115 0
 1860 003e C4F8A031 	 str r3,[r4,#416]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 1861              	 .loc 1 1116 0
 1862 0042 03F50062 	 add r2,r3,#2048
 1863 0046 C4F8A421 	 str r2,[r4,#420]
 1864              	.LVL173:
 1865 004a 04F5D271 	 add r1,r4,#420
 1866 004e 03F51062 	 add r2,r3,#2304
 1867 0052 03F51E60 	 add r0,r3,#2528
 1868              	.LVL174:
 1869              	.L177:
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
 1870              	 .loc 1 1119 0 discriminator 3
 1871 0056 41F8042F 	 str r2,[r1,#4]!
 1872 005a 2032     	 adds r2,r2,#32
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1873              	 .loc 1 1117 0 discriminator 3
 1874 005c 8242     	 cmp r2,r0
 1875 005e FAD1     	 bne .L177
 1876 0060 2749     	 ldr r1,.L187+16
 1877 0062 03F53062 	 add r2,r3,#2816
 1878 0066 03F53E60 	 add r0,r3,#3040
 1879              	.L178:
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 1880              	 .loc 1 1124 0 discriminator 3
 1881 006a 41F8042F 	 str r2,[r1,#4]!
 1882 006e 2032     	 adds r2,r2,#32
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1883              	 .loc 1 1122 0 discriminator 3
 1884 0070 8242     	 cmp r2,r0
 1885 0072 FAD1     	 bne .L178
 1886 0074 2349     	 ldr r1,.L187+20
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1887              	 .loc 1 1122 0 is_stmt 0
 1888 0076 0022     	 movs r2,#0
 1889              	.L179:
 1890              	.LVL175:
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
 1891              	 .loc 1 1131 0 is_stmt 1 discriminator 3
 1892 0078 0132     	 adds r2,r2,#1
 1893              	.LVL176:
 1894 007a 03EB0230 	 add r0,r3,r2,lsl#12
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1895              	 .loc 1 1128 0 discriminator 3
 1896 007e 072A     	 cmp r2,#7
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 1897              	 .loc 1 1130 0 discriminator 3
 1898 0080 41F8040F 	 str r0,[r1,#4]!
 1899              	.LVL177:
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1900              	 .loc 1 1128 0 discriminator 3
 1901 0084 F8D1     	 bne .L179
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 1902              	 .loc 1 1137 0
 1903 0086 9A68     	 ldr r2,[r3,#8]
 1904              	.LVL178:
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1905              	 .loc 1 1140 0
 1906 0088 697B     	 ldrb r1,[r5,#13]
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1907              	 .loc 1 1139 0
 1908 008a 42F08102 	 orr r2,r2,#129
 1909              	.LVL179:
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1910              	 .loc 1 1140 0
 1911 008e 11B9     	 cbnz r1,.L180
 1912              	.LVL180:
1143:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1913              	 .loc 1 1143 0
 1914 0090 42F02002 	 orr r2,r2,#32
 1915              	.LVL181:
 1916 0094 01E0     	 b .L181
 1917              	.L180:
1147:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1918              	 .loc 1 1147 0
 1919 0096 6FF34512 	 bfc r2,#5,#1
 1920              	.LVL182:
 1921              	.L181:
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
 1922              	 .loc 1 1149 0
 1923 009a 9A60     	 str r2,[r3,#8]
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 1924              	 .loc 1 1151 0
 1925 009c DA68     	 ldr r2,[r3,#12]
 1926              	.LVL183:
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1927              	 .loc 1 1153 0
 1928 009e 42F08042 	 orr r2,r2,#1073741824
 1929              	.LVL184:
 1930 00a2 42F48072 	 orr r2,r2,#256
 1931              	.LVL185:
1154:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1932              	 .loc 1 1154 0
 1933 00a6 DA60     	 str r2,[r3,#12]
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 1934              	 .loc 1 1158 0
 1935 00a8 D3F80028 	 ldr r2,[r3,#2048]
 1936              	.LVL186:
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 1937              	 .loc 1 1159 0
 1938 00ac 42F00302 	 orr r2,r2,#3
 1939              	.LVL187:
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1940              	 .loc 1 1160 0
 1941 00b0 6FF3D752 	 bfc r2,#23,#1
 1942              	.LVL188:
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
 1943              	 .loc 1 1161 0
 1944 00b4 C3F80028 	 str r2,[r3,#2048]
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 1945              	 .loc 1 1163 0
 1946 00b8 D3F80428 	 ldr r2,[r3,#2052]
 1947              	.LVL189:
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
 1948              	 .loc 1 1164 0
 1949 00bc 42F00202 	 orr r2,r2,#2
 1950              	.LVL190:
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 1951              	 .loc 1 1166 0
 1952 00c0 C3F80428 	 str r2,[r3,#2052]
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 1953              	 .loc 1 1168 0
 1954 00c4 1020     	 movs r0,#16
 1955 00c6 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 1956              	.LVL191:
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
 1957              	 .loc 1 1169 0
 1958 00ca FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 1959              	.LVL192:
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 1960              	 .loc 1 1172 0
 1961 00ce D4F8A021 	 ldr r2,[r4,#416]
1189:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1962              	 .loc 1 1189 0
 1963 00d2 0D49     	 ldr r1,.L187+24
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1964              	 .loc 1 1187 0
 1965 00d4 6C7B     	 ldrb r4,[r5,#13]
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 1966              	 .loc 1 1172 0
 1967 00d6 0020     	 movs r0,#0
1173:../Libraries/XMCLib/src/xmc_usbd.c ****  
 1968              	 .loc 1 1173 0
 1969 00d8 4FF0FF33 	 mov r3,#-1
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 1970              	 .loc 1 1172 0
 1971 00dc 9061     	 str r0,[r2,#24]
1173:../Libraries/XMCLib/src/xmc_usbd.c ****  
 1972              	 .loc 1 1173 0
 1973 00de 5361     	 str r3,[r2,#20]
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1974              	 .loc 1 1186 0
 1975 00e0 0A4B     	 ldr r3,.L187+28
 1976              	.LVL193:
1189:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 1977              	 .loc 1 1189 0
 1978 00e2 012C     	 cmp r4,#1
 1979 00e4 08BF     	 it eq
 1980 00e6 0B46     	 moveq r3,r1
 1981              	.LVL194:
1192:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 1982              	 .loc 1 1192 0
 1983 00e8 43F44023 	 orr r3,r3,#786432
 1984              	.LVL195:
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 1985              	 .loc 1 1193 0
 1986 00ec 9361     	 str r3,[r2,#24]
1195:../Libraries/XMCLib/src/xmc_usbd.c **** 
 1987              	 .loc 1 1195 0
 1988 00ee 38BD     	 pop {r3,r4,r5,pc}
 1989              	.LVL196:
 1990              	.L188:
 1991              	 .align 2
 1992              	.L187:
 1993 00f0 00000000 	 .word usbd_init
 1994 00f4 00000000 	 .word .LANCHOR2
 1995 00f8 00000000 	 .word .LANCHOR1
 1996 00fc 00000000 	 .word xmc_device
 1997 0100 C0010000 	 .word xmc_device+448
 1998 0104 DC010000 	 .word xmc_device+476
 1999 0108 1E3C00C0 	 .word -1073726434
 2000 010c 0E3C00C0 	 .word -1073726450
 2001              	 .cfi_endproc
 2002              	.LFE199:
 2004              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2005              	 .align 1
 2006              	 .global XMC_USBD_Disable
 2007              	 .thumb
 2008              	 .thumb_func
 2010              	XMC_USBD_Disable:
 2011              	.LFB191:
 955:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 2012              	 .loc 1 955 0
 2013              	 .cfi_startproc
 2014              	 
 2015              	 
 2016 0000 08B5     	 push {r3,lr}
 2017              	.LCFI19:
 2018              	 .cfi_def_cfa_offset 8
 2019              	 .cfi_offset 3,-8
 2020              	 .cfi_offset 14,-4
 957:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 2021              	 .loc 1 957 0
 2022 0002 0348     	 ldr r0,.L190
 2023 0004 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 2024              	.LVL197:
 962:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2025              	 .loc 1 962 0
 2026 0008 BDE80840 	 pop {r3,lr}
 2027              	.LCFI20:
 2028              	 .cfi_restore 14
 2029              	 .cfi_restore 3
 2030              	 .cfi_def_cfa_offset 0
 961:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2031              	 .loc 1 961 0
 2032 000c FFF7FEBF 	 b XMC_SCU_POWER_DisableUsb
 2033              	.LVL198:
 2034              	.L191:
 2035              	 .align 2
 2036              	.L190:
 2037 0010 80000020 	 .word 536871040
 2038              	 .cfi_endproc
 2039              	.LFE191:
 2041              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2042              	 .align 1
 2043              	 .global XMC_USBD_ClearEvent
 2044              	 .thumb
 2045              	 .thumb_func
 2047              	XMC_USBD_ClearEvent:
 2048              	.LFB192:
 968:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 2049              	 .loc 1 968 0
 2050              	 .cfi_startproc
 2051              	 
 2052              	 
 2053              	 
 2054              	.LVL199:
 970:../Libraries/XMCLib/src/xmc_usbd.c ****   switch(event)
 2055              	 .loc 1 970 0
 2056 0000 0023     	 movs r3,#0
 2057              	.LVL200:
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2058              	 .loc 1 971 0
 2059 0002 0D28     	 cmp r0,#13
 2060 0004 1ED8     	 bhi .L193
 2061 0006 DFE800F0 	 tbb [pc,r0]
 2062              	.L195:
 2063 000a 07       	 .byte (.L194-.L195)/2
 2064 000b 1D       	 .byte (.L193-.L195)/2
 2065 000c 1D       	 .byte (.L193-.L195)/2
 2066 000d 1D       	 .byte (.L193-.L195)/2
 2067 000e 0A       	 .byte (.L196-.L195)/2
 2068 000f 1D       	 .byte (.L193-.L195)/2
 2069 0010 0D       	 .byte (.L197-.L195)/2
 2070 0011 10       	 .byte (.L199-.L195)/2
 2071 0012 10       	 .byte (.L199-.L195)/2
 2072 0013 13       	 .byte (.L200-.L195)/2
 2073 0014 15       	 .byte (.L201-.L195)/2
 2074 0015 18       	 .byte (.L202-.L195)/2
 2075 0016 1D       	 .byte (.L193-.L195)/2
 2076 0017 1B       	 .byte (.L203-.L195)/2
 2077              	 .p2align 1
 2078              	.L194:
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2079              	 .loc 1 974 0
 2080 0018 4FF08043 	 mov r3,#1073741824
 975:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 2081              	 .loc 1 975 0
 2082 001c 12E0     	 b .L193
 2083              	.L196:
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2084              	 .loc 1 977 0
 2085 001e 4FF48053 	 mov r3,#4096
 978:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 2086              	 .loc 1 978 0
 2087 0022 0FE0     	 b .L193
 2088              	.L197:
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2089              	 .loc 1 980 0
 2090 0024 4FF40063 	 mov r3,#2048
 981:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 2091              	 .loc 1 981 0
 2092 0028 0CE0     	 b .L193
 2093              	.L199:
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2094              	 .loc 1 986 0
 2095 002a 4FF00043 	 mov r3,#-2147483648
 987:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 2096              	 .loc 1 987 0
 2097 002e 09E0     	 b .L193
 2098              	.L200:
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2099              	 .loc 1 989 0
 2100 0030 0823     	 movs r3,#8
 990:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 2101              	 .loc 1 990 0
 2102 0032 07E0     	 b .L193
 2103              	.L201:
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2104              	 .loc 1 992 0
 2105 0034 4FF48063 	 mov r3,#1024
 993:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 2106              	 .loc 1 993 0
 2107 0038 04E0     	 b .L193
 2108              	.L202:
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2109              	 .loc 1 995 0
 2110 003a 4FF40053 	 mov r3,#8192
 996:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 2111              	 .loc 1 996 0
 2112 003e 01E0     	 b .L193
 2113              	.L203:
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2114              	 .loc 1 998 0
 2115 0040 4FF40023 	 mov r3,#524288
 2116              	.L193:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2117              	 .loc 1 1003 0
 2118 0044 024A     	 ldr r2,.L204
 2119 0046 D2F8A021 	 ldr r2,[r2,#416]
 2120              	.LVL201:
 2121 004a 5361     	 str r3,[r2,#20]
 2122 004c 7047     	 bx lr
 2123              	.L205:
 2124 004e 00BF     	 .align 2
 2125              	.L204:
 2126 0050 00000000 	 .word xmc_device
 2127              	 .cfi_endproc
 2128              	.LFE192:
 2130              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 2131              	 .align 1
 2132              	 .global XMC_USBD_ClearEventINEP
 2133              	 .thumb
 2134              	 .thumb_func
 2136              	XMC_USBD_ClearEventINEP:
 2137              	.LFB194:
1020:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
 2138              	 .loc 1 1020 0
 2139              	 .cfi_startproc
 2140              	 
 2141              	 
 2142              	 
 2143              	.LVL202:
1023:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2144              	 .loc 1 1023 0
 2145 0000 6A31     	 adds r1,r1,#106
 2146              	.LVL203:
 2147 0002 024B     	 ldr r3,.L207
 2148 0004 53F82130 	 ldr r3,[r3,r1,lsl#2]
 2149 0008 9860     	 str r0,[r3,#8]
 2150 000a 7047     	 bx lr
 2151              	.L208:
 2152              	 .align 2
 2153              	.L207:
 2154 000c 00000000 	 .word xmc_device
 2155              	 .cfi_endproc
 2156              	.LFE194:
 2158              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 2159              	 .align 1
 2160              	 .global XMC_USBD_ClearEventOUTEP
 2161              	 .thumb
 2162              	 .thumb_func
 2164              	XMC_USBD_ClearEventOUTEP:
 2165              	.LFB195:
1030:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
 2166              	 .loc 1 1030 0
 2167              	 .cfi_startproc
 2168              	 
 2169              	 
 2170              	 
 2171              	.LVL204:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2172              	 .loc 1 1033 0
 2173 0000 034B     	 ldr r3,.L210
 2174 0002 03EB8101 	 add r1,r3,r1,lsl#2
 2175              	.LVL205:
 2176 0006 D1F8C431 	 ldr r3,[r1,#452]
 2177 000a 9860     	 str r0,[r3,#8]
 2178 000c 7047     	 bx lr
 2179              	.L211:
 2180 000e 00BF     	 .align 2
 2181              	.L210:
 2182 0010 00000000 	 .word xmc_device
 2183              	 .cfi_endproc
 2184              	.LFE195:
 2186              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 2187              	 .align 1
 2188              	 .global XMC_USBD_EnableEventOUTEP
 2189              	 .thumb
 2190              	 .thumb_func
 2192              	XMC_USBD_EnableEventOUTEP:
 2193              	.LFB196:
1040:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
 2194              	 .loc 1 1040 0
 2195              	 .cfi_startproc
 2196              	 
 2197              	 
 2198              	 
 2199              	.LVL206:
1043:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2200              	 .loc 1 1043 0
 2201 0000 034B     	 ldr r3,.L213
 2202 0002 D3F8A421 	 ldr r2,[r3,#420]
 2203 0006 5369     	 ldr r3,[r2,#20]
 2204 0008 1843     	 orrs r0,r0,r3
 2205              	.LVL207:
 2206 000a 5061     	 str r0,[r2,#20]
 2207 000c 7047     	 bx lr
 2208              	.L214:
 2209 000e 00BF     	 .align 2
 2210              	.L213:
 2211 0010 00000000 	 .word xmc_device
 2212              	 .cfi_endproc
 2213              	.LFE196:
 2215              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 2216              	 .align 1
 2217              	 .global XMC_USBD_EnableEventINEP
 2218              	 .thumb
 2219              	 .thumb_func
 2221              	XMC_USBD_EnableEventINEP:
 2222              	.LFB197:
1050:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
 2223              	 .loc 1 1050 0
 2224              	 .cfi_startproc
 2225              	 
 2226              	 
 2227              	 
 2228              	.LVL208:
1053:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2229              	 .loc 1 1053 0
 2230 0000 034B     	 ldr r3,.L216
 2231 0002 D3F8A421 	 ldr r2,[r3,#420]
 2232 0006 1369     	 ldr r3,[r2,#16]
 2233 0008 1843     	 orrs r0,r0,r3
 2234              	.LVL209:
 2235 000a 1061     	 str r0,[r2,#16]
 2236 000c 7047     	 bx lr
 2237              	.L217:
 2238 000e 00BF     	 .align 2
 2239              	.L216:
 2240 0010 00000000 	 .word xmc_device
 2241              	 .cfi_endproc
 2242              	.LFE197:
 2244              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2245              	 .align 1
 2246              	 .global XMC_USBD_IRQHandler
 2247              	 .thumb
 2248              	 .thumb_func
 2250              	XMC_USBD_IRQHandler:
 2251              	.LFB189:
 867:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 2252              	 .loc 1 867 0
 2253              	 .cfi_startproc
 2254              	 
 2255              	 
 2256              	.LVL210:
 2257 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 2258              	.LCFI21:
 2259              	 .cfi_def_cfa_offset 36
 2260              	 .cfi_offset 4,-36
 2261              	 .cfi_offset 5,-32
 2262              	 .cfi_offset 6,-28
 2263              	 .cfi_offset 7,-24
 2264              	 .cfi_offset 8,-20
 2265              	 .cfi_offset 9,-16
 2266              	 .cfi_offset 10,-12
 2267              	 .cfi_offset 11,-8
 2268              	 .cfi_offset 14,-4
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2269              	 .loc 1 871 0
 2270 0004 C14C     	 ldr r4,.L322
 2271 0006 D4F8A031 	 ldr r3,[r4,#416]
 2272 000a 9F69     	 ldr r7,[r3,#24]
 2273              	.LVL211:
 872:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 2274              	 .loc 1 872 0
 2275 000c 5D69     	 ldr r5,[r3,#20]
 2276              	.LVL212:
 2277 000e 3D40     	 ands r5,r5,r7
 2278              	.LVL213:
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2279              	 .loc 1 874 0
 2280 0010 5FFA85F8 	 uxtb r8,r5
 2281 0014 18F0080F 	 tst r8,#8
 867:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 2282              	 .loc 1 867 0
 2283 0018 85B0     	 sub sp,sp,#20
 2284              	.LCFI22:
 2285              	 .cfi_def_cfa_offset 56
 867:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 2286              	 .loc 1 867 0
 2287 001a 0646     	 mov r6,r0
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2288              	 .loc 1 874 0
 2289 001c 06D0     	 beq .L219
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2290              	 .loc 1 876 0
 2291 001e 0920     	 movs r0,#9
 2292              	.LVL214:
 2293 0020 D4F80032 	 ldr r3,[r4,#512]
 2294 0024 9847     	 blx r3
 2295              	.LVL215:
 877:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2296              	 .loc 1 877 0
 2297 0026 0920     	 movs r0,#9
 2298 0028 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2299              	.LVL216:
 2300              	.L219:
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2301              	 .loc 1 879 0
 2302 002c 737B     	 ldrb r3,[r6,#13]
 2303 002e 012B     	 cmp r3,#1
 2304 0030 19D1     	 bne .L220
 881:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2305              	 .loc 1 881 0
 2306 0032 18F0100F 	 tst r8,#16
 2307 0036 16D0     	 beq .L220
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2308              	 .loc 1 885 0
 2309 0038 D4F8A031 	 ldr r3,[r4,#416]
 884:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2310              	 .loc 1 884 0
 2311 003c 6FF30417 	 bfc r7,#4,#1
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2312              	 .loc 1 885 0
 2313 0040 9F61     	 str r7,[r3,#24]
 2314              	.LBB64:
 2315              	.LBB65:
 838:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2316              	 .loc 1 838 0
 2317 0042 196A     	 ldr r1,[r3,#32]
 840:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 2318              	 .loc 1 840 0
 2319 0044 C1F34343 	 ubfx r3,r1,#17,#4
 2320 0048 022B     	 cmp r3,#2
 2321 004a 01D0     	 beq .L223
 2322 004c 062B     	 cmp r3,#6
 2323 004e 05D1     	 bne .L221
 2324              	.L223:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2325              	 .loc 1 850 0
 2326 0050 01F00F00 	 and r0,r1,#15
 2327 0054 C1F30A11 	 ubfx r1,r1,#4,#11
 2328 0058 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 2329              	.LVL217:
 2330              	.L221:
 2331              	.LBE65:
 2332              	.LBE64:
 888:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2333              	 .loc 1 888 0
 2334 005c D4F8A031 	 ldr r3,[r4,#416]
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2335              	 .loc 1 887 0
 2336 0060 47F01007 	 orr r7,r7,#16
 2337              	.LVL218:
 888:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2338              	 .loc 1 888 0
 2339 0064 9F61     	 str r7,[r3,#24]
 2340              	.L220:
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2341              	 .loc 1 891 0
 2342 0066 C5F30727 	 ubfx r7,r5,#8,#8
 2343              	.LVL219:
 2344 006a 7A07     	 lsls r2,r7,#29
 2345 006c 02D5     	 bpl .L224
 893:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2346              	 .loc 1 893 0
 2347 006e 0A20     	 movs r0,#10
 2348 0070 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2349              	.LVL220:
 2350              	.L224:
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2351              	 .loc 1 895 0
 2352 0074 3B07     	 lsls r3,r7,#28
 2353 0076 06D5     	 bpl .L225
 897:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2354              	 .loc 1 897 0
 2355 0078 0620     	 movs r0,#6
 2356 007a D4F80032 	 ldr r3,[r4,#512]
 2357 007e 9847     	 blx r3
 2358              	.LVL221:
 898:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2359              	 .loc 1 898 0
 2360 0080 0620     	 movs r0,#6
 2361 0082 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2362              	.LVL222:
 2363              	.L225:
 900:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2364              	 .loc 1 900 0
 2365 0086 4FEA1568 	 lsr r8,r5,#24
 2366 008a 18F0800F 	 tst r8,#128
 2367 008e 06D0     	 beq .L226
 902:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2368              	 .loc 1 902 0
 2369 0090 0820     	 movs r0,#8
 2370 0092 D4F80032 	 ldr r3,[r4,#512]
 2371 0096 9847     	 blx r3
 2372              	.LVL223:
 903:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2373              	 .loc 1 903 0
 2374 0098 0820     	 movs r0,#8
 2375 009a FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2376              	.LVL224:
 2377              	.L226:
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2378              	 .loc 1 905 0
 2379 009e 18F0400F 	 tst r8,#64
 2380 00a2 0CD0     	 beq .L227
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2381              	 .loc 1 907 0
 2382 00a4 94F8FE31 	 ldrb r3,[r4,#510]
 2383 00a8 43F00403 	 orr r3,r3,#4
 2384 00ac 84F8FE31 	 strb r3,[r4,#510]
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2385              	 .loc 1 908 0
 2386 00b0 0020     	 movs r0,#0
 2387 00b2 D4F80032 	 ldr r3,[r4,#512]
 2388 00b6 9847     	 blx r3
 2389              	.LVL225:
 909:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2390              	 .loc 1 909 0
 2391 00b8 0020     	 movs r0,#0
 2392 00ba FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2393              	.LVL226:
 2394              	.L227:
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2395              	 .loc 1 911 0
 2396 00be F806     	 lsls r0,r7,#27
 2397 00c0 5CD5     	 bpl .L228
 2398              	.LVL227:
 2399              	.LBB66:
 2400              	.LBB67:
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 2401              	 .loc 1 530 0
 2402 00c2 D4F8A421 	 ldr r2,[r4,#420]
 2403 00c6 5368     	 ldr r3,[r2,#4]
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 2404              	 .loc 1 531 0
 2405 00c8 43F00103 	 orr r3,r3,#1
 2406              	.LVL228:
 532:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2407              	 .loc 1 532 0
 2408 00cc 5360     	 str r3,[r2,#4]
 2409              	.LVL229:
 2410 00ce 904B     	 ldr r3,.L322+4
 2411              	.LVL230:
 2412 00d0 03F11C00 	 add r0,r3,#28
 2413              	.LVL231:
 2414              	.L229:
 537:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 2415              	 .loc 1 537 0
 2416 00d4 53F8041F 	 ldr r1,[r3,#4]!
 2417 00d8 0A68     	 ldr r2,[r1]
 2418              	.LVL232:
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 2419              	 .loc 1 538 0
 2420 00da 42F00062 	 orr r2,r2,#134217728
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 2421              	 .loc 1 539 0
 2422 00de 6FF35552 	 bfc r2,#21,#1
 2423              	.LVL233:
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2424              	 .loc 1 535 0
 2425 00e2 8342     	 cmp r3,r0
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2426              	 .loc 1 540 0
 2427 00e4 0A60     	 str r2,[r1]
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2428              	 .loc 1 535 0
 2429 00e6 F5D1     	 bne .L229
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 2430              	 .loc 1 545 0
 2431 00e8 D4F8A031 	 ldr r3,[r4,#416]
 2432 00ec 4021     	 movs r1,#64
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 2433              	 .loc 1 548 0
 2434 00ee 4FF48012 	 mov r2,#1048576
 2435              	.LVL234:
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 2436              	 .loc 1 549 0
 2437 00f2 61F30F02 	 bfi r2,r1,#0,#16
 2438              	.LVL235:
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 2439              	 .loc 1 545 0
 2440 00f6 5962     	 str r1,[r3,#36]
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 2441              	 .loc 1 550 0
 2442 00f8 9A62     	 str r2,[r3,#40]
 2443              	.LVL236:
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2444              	 .loc 1 554 0
 2445 00fa 864A     	 ldr r2,.L322+8
 2446              	.LVL237:
 2447 00fc C3F80421 	 str r2,[r3,#260]
 2448              	.LVL238:
 2449 0100 1032     	 adds r2,r2,#16
 2450 0102 C3F80821 	 str r2,[r3,#264]
 2451              	.LVL239:
 2452 0106 1032     	 adds r2,r2,#16
 2453 0108 C3F80C21 	 str r2,[r3,#268]
 2454              	.LVL240:
 2455 010c 1032     	 adds r2,r2,#16
 2456 010e C3F81021 	 str r2,[r3,#272]
 2457              	.LVL241:
 2458 0112 1032     	 adds r2,r2,#16
 2459 0114 C3F81421 	 str r2,[r3,#276]
 2460              	.LVL242:
 2461 0118 1032     	 adds r2,r2,#16
 2462 011a C3F81821 	 str r2,[r3,#280]
 2463              	.LVL243:
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 2464              	 .loc 1 558 0
 2465 011e 1020     	 movs r0,#16
 2466 0120 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 2467              	.LVL244:
 559:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 2468              	 .loc 1 559 0
 2469 0124 0020     	 movs r0,#0
 2470 0126 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 2471              	.LVL245:
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 2472              	 .loc 1 560 0
 2473 012a FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 2474              	.LVL246:
 566:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2475              	 .loc 1 566 0
 2476 012e D4F8A431 	 ldr r3,[r4,#420]
 2477 0132 4FF00112 	 mov r2,#65537
 2478              	.LVL247:
 2479 0136 DA61     	 str r2,[r3,#28]
 570:../Libraries/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 2480              	 .loc 1 570 0
 2481 0138 0F20     	 movs r0,#15
 2482 013a FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 2483              	.LVL248:
 574:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 2484              	 .loc 1 574 0
 2485 013e 0F20     	 movs r0,#15
 2486 0140 FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 2487              	.LVL249:
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 2488              	 .loc 1 579 0
 2489 0144 D4F8A421 	 ldr r2,[r4,#420]
 2490 0148 1368     	 ldr r3,[r2]
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 2491              	 .loc 1 564 0
 2492 014a 4FF00008 	 mov r8,#0
 2493              	.LVL250:
 580:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 2494              	 .loc 1 580 0
 2495 014e 68F30A13 	 bfi r3,r8,#4,#7
 2496              	.LVL251:
 581:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2497              	 .loc 1 581 0
 2498 0152 1360     	 str r3,[r2]
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2499              	 .loc 1 583 0
 2500 0154 737B     	 ldrb r3,[r6,#13]
 2501              	.LVL252:
 2502 0156 012B     	 cmp r3,#1
 586:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 2503              	 .loc 1 586 0
 2504 0158 08BF     	 it eq
 2505 015a C2F83480 	 streq r8,[r2,#52]
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 2506              	 .loc 1 589 0
 2507 015e 6368     	 ldr r3,[r4,#4]
 2508 0160 23F01003 	 bic r3,r3,#16
 2509 0164 6360     	 str r3,[r4,#4]
 590:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2510              	 .loc 1 590 0
 2511 0166 6368     	 ldr r3,[r4,#4]
 2512 0168 23F00803 	 bic r3,r3,#8
 2513 016c 6360     	 str r3,[r4,#4]
 592:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2514              	 .loc 1 592 0
 2515 016e 0420     	 movs r0,#4
 2516 0170 D4F80032 	 ldr r3,[r4,#512]
 2517 0174 9847     	 blx r3
 2518              	.LVL253:
 595:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2519              	 .loc 1 595 0
 2520 0176 0420     	 movs r0,#4
 2521 0178 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2522              	.LVL254:
 2523              	.L228:
 2524              	.LBE67:
 2525              	.LBE66:
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2526              	 .loc 1 915 0
 2527 017c B906     	 lsls r1,r7,#26
 2528 017e 19D5     	 bpl .L231
 2529              	.LBB68:
 2530              	.LBB69:
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 2531              	 .loc 1 628 0
 2532 0180 D4F8A821 	 ldr r2,[r4,#424]
 2533 0184 1368     	 ldr r3,[r2]
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 2534              	 .loc 1 629 0
 2535 0186 6FF30A03 	 bfc r3,#0,#11
 2536              	.LVL255:
 630:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2537              	 .loc 1 630 0
 2538 018a 1360     	 str r3,[r2]
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 2539              	 .loc 1 633 0
 2540 018c 94F8FE31 	 ldrb r3,[r4,#510]
 2541              	.LVL256:
 634:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2542              	 .loc 1 634 0
 2543 0190 43F00503 	 orr r3,r3,#5
 2544 0194 84F8FE31 	 strb r3,[r4,#510]
 636:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2545              	 .loc 1 636 0
 2546 0198 0220     	 movs r0,#2
 2547 019a D4F80032 	 ldr r3,[r4,#512]
 2548 019e 9847     	 blx r3
 2549              	.LVL257:
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 2550              	 .loc 1 639 0
 2551 01a0 D4F8A021 	 ldr r2,[r4,#416]
 2552 01a4 D368     	 ldr r3,[r2,#12]
 640:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 2553              	 .loc 1 640 0
 2554 01a6 0921     	 movs r1,#9
 2555 01a8 61F38D23 	 bfi r3,r1,#10,#4
 2556              	.LVL258:
 641:../Libraries/XMCLib/src/xmc_usbd.c **** 
 2557              	 .loc 1 641 0
 2558 01ac D360     	 str r3,[r2,#12]
 644:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2559              	 .loc 1 644 0
 2560 01ae 0B20     	 movs r0,#11
 2561 01b0 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2562              	.LVL259:
 2563              	.L231:
 2564              	.LBE69:
 2565              	.LBE68:
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2566              	 .loc 1 919 0
 2567 01b4 C5F30747 	 ubfx r7,r5,#16,#8
 2568 01b8 7A07     	 lsls r2,r7,#29
 2569 01ba 40F1BB80 	 bpl .L232
 2570              	.LVL260:
 2571              	.LBB70:
 2572              	.LBB71:
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2573              	 .loc 1 759 0
 2574 01be D4F8A431 	 ldr r3,[r4,#420]
 2575 01c2 9A69     	 ldr r2,[r3,#24]
 761:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2576              	 .loc 1 761 0
 2577 01c4 1B69     	 ldr r3,[r3,#16]
 2578 01c6 0193     	 str r3,[sp,#4]
 2579              	.LVL261:
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 2580              	 .loc 1 764 0
 2581 01c8 4FF0000A 	 mov r10,#0
 2582 01cc 93B2     	 uxth r3,r2
 2583              	.LVL262:
 2584 01ce 0293     	 str r3,[sp,#8]
 2585              	.LVL263:
 763:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 2586              	 .loc 1 763 0
 2587 01d0 D046     	 mov r8,r10
 2588              	.LVL264:
 2589              	.L233:
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2590              	 .loc 1 767 0
 2591 01d2 029B     	 ldr r3,[sp,#8]
 2592 01d4 5FFA8AF4 	 uxtb r4,r10
 2593              	.LVL265:
 2594 01d8 2341     	 asrs r3,r3,r4
 2595 01da 00F0A880 	 beq .L320
 2596              	.LVL266:
 771:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2597              	 .loc 1 771 0
 2598 01de DB07     	 lsls r3,r3,#31
 2599              	.LVL267:
 2600 01e0 40F1A280 	 bpl .L234
 2601              	.LVL268:
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2602              	 .loc 1 774 0
 2603 01e4 494A     	 ldr r2,.L322
 2604 01e6 04F16A03 	 add r3,r4,#106
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2605              	 .loc 1 776 0
 2606 01ea 4FF0340E 	 mov lr,#52
 2607 01ee 0EFB04FE 	 mul lr,lr,r4
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2608              	 .loc 1 774 0
 2609 01f2 52F82300 	 ldr r0,[r2,r3,lsl#2]
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2610              	 .loc 1 776 0
 2611 01f6 D2F8A431 	 ldr r3,[r2,#420]
 774:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2612              	 .loc 1 774 0
 2613 01fa D0F808C0 	 ldr ip,[r0,#8]
 2614              	.LVL269:
 776:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2615              	 .loc 1 776 0
 2616 01fe 5B6B     	 ldr r3,[r3,#52]
 2617 0200 02EB0E01 	 add r1,r2,lr
 2618              	.LVL270:
 2619 0204 12F80EE0 	 ldrb lr,[r2,lr]
 2620 0208 0EF00F09 	 and r9,lr,#15
 2621 020c 23FA09F3 	 lsr r3,r3,r9
 777:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2622              	 .loc 1 777 0
 2623 0210 4FEAC319 	 lsl r9,r3,#7
 2624 0214 019B     	 ldr r3,[sp,#4]
 2625 0216 5FFA89F9 	 uxtb r9,r9
 2626 021a 49EA0309 	 orr r9,r9,r3
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2627              	 .loc 1 778 0
 2628 021e 737B     	 ldrb r3,[r6,#13]
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 2629              	 .loc 1 775 0
 2630 0220 09EA0C09 	 and r9,r9,ip
 2631              	.LVL271:
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2632              	 .loc 1 778 0
 2633 0224 13B9     	 cbnz r3,.L235
 780:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 2634              	 .loc 1 780 0
 2635 0226 D0F81080 	 ldr r8,[r0,#16]
 2636              	.LVL272:
 2637 022a 3CE0     	 b .L236
 2638              	.L235:
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2639              	 .loc 1 782 0
 2640 022c 012B     	 cmp r3,#1
 2641 022e 3AD1     	 bne .L236
 2642              	.LVL273:
 784:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2643              	 .loc 1 784 0
 2644 0230 19F0800F 	 tst r9,#128
 2645 0234 37D0     	 beq .L236
 2646              	.LVL274:
 2647              	.LBB72:
 2648              	.LBB73:
 2649              	.LBB74:
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 2650              	 .loc 1 266 0
 2651 0236 0EF00F0E 	 and lr,lr,#15
 2652 023a 0EF17800 	 add r0,lr,#120
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 2653              	 .loc 1 267 0
 2654 023e 0EF16A0E 	 add lr,lr,#106
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 2655              	 .loc 1 266 0
 2656 0242 52F82000 	 ldr r0,[r2,r0,lsl#2]
 2657 0246 0390     	 str r0,[sp,#12]
 2658              	.LVL275:
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 2659              	 .loc 1 269 0
 2660 0248 886A     	 ldr r0,[r1,#40]
 2661              	.LVL276:
 2662 024a C96A     	 ldr r1,[r1,#44]
 2663              	.LVL277:
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 2664              	 .loc 1 267 0
 2665 024c 52F82E20 	 ldr r2,[r2,lr,lsl#2]
 2666              	.LVL278:
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2667              	 .loc 1 270 0
 2668 0250 401A     	 subs r0,r0,r1
 2669              	.LVL279:
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 2670              	 .loc 1 267 0
 2671 0252 9269     	 ldr r2,[r2,#24]
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2672              	 .loc 1 270 0
 2673 0254 1DD0     	 beq .L237
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 2674              	 .loc 1 277 0
 2675 0256 00F1030C 	 add ip,r0,#3
 2676              	.LVL280:
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2677              	 .loc 1 278 0
 2678 025a 92B2     	 uxth r2,r2
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 2679              	 .loc 1 277 0
 2680 025c 4FEA9C0C 	 lsr ip,ip,#2
 2681              	.LVL281:
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2682              	 .loc 1 278 0
 2683 0260 9445     	 cmp ip,r2
 2684              	.LVL282:
 281:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2685              	 .loc 1 281 0
 2686 0262 84BF     	 itt hi
 2687 0264 9000     	 lslhi r0,r2,#2
 2688              	.LVL283:
 2689 0266 9446     	 movhi ip,r2
 2690              	.LVL284:
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2691              	 .loc 1 285 0
 2692 0268 4FF0000B 	 mov fp,#0
 2693              	.LVL285:
 2694              	.L239:
 2695 026c E345     	 cmp fp,ip
 2696 026e 10D0     	 beq .L237
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 2697              	 .loc 1 287 0
 2698 0270 2649     	 ldr r1,.L322
 2699 0272 3422     	 movs r2,#52
 2700 0274 02FB041E 	 mla lr,r2,r4,r1
 288:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 2701              	 .loc 1 288 0
 2702 0278 0BF1010B 	 add fp,fp,#1
 2703              	.LVL286:
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 2704              	 .loc 1 287 0
 2705 027c DEF82410 	 ldr r1,[lr,#36]
 2706 0280 0A68     	 ldr r2,[r1]
 2707 0282 0399     	 ldr r1,[sp,#12]
 2708 0284 0A60     	 str r2,[r1]
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2709              	 .loc 1 285 0
 2710 0286 DEF82420 	 ldr r2,[lr,#36]
 2711 028a 0432     	 adds r2,r2,#4
 2712 028c CEF82420 	 str r2,[lr,#36]
 2713 0290 ECE7     	 b .L239
 2714              	.LVL287:
 2715              	.L237:
 2716              	.LBE74:
 2717              	.LBE73:
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2718              	 .loc 1 788 0
 2719 0292 1E4A     	 ldr r2,.L322
 2720 0294 3421     	 movs r1,#52
 2721 0296 01FB0421 	 mla r1,r1,r4,r2
 2722 029a CA6A     	 ldr r2,[r1,#44]
 2723 029c 0244     	 add r2,r2,r0
 2724 029e CA62     	 str r2,[r1,#44]
 789:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2725              	 .loc 1 789 0
 2726 02a0 4A6A     	 ldr r2,[r1,#36]
 2727 02a2 0244     	 add r2,r2,r0
 2728 02a4 4A62     	 str r2,[r1,#36]
 2729              	.LVL288:
 2730              	.L236:
 2731              	.LBE72:
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2732              	 .loc 1 792 0
 2733 02a6 19F0010F 	 tst r9,#1
 2734 02aa 37D0     	 beq .L241
 794:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2735              	 .loc 1 794 0
 2736 02ac 83B9     	 cbnz r3,.L243
 797:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 2737              	 .loc 1 797 0
 2738 02ae 28F06042 	 bic r2,r8,#-536870912
 2739 02b2 6AB9     	 cbnz r2,.L243
 2740              	.LBB75:
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 2741              	 .loc 1 799 0
 2742 02b4 154A     	 ldr r2,.L322
 2743 02b6 3421     	 movs r1,#52
 2744 02b8 01FB0421 	 mla r1,r1,r4,r2
 2745 02bc D1F828E0 	 ldr lr,[r1,#40]
 2746 02c0 CA6A     	 ldr r2,[r1,#44]
 801:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 2747              	 .loc 1 801 0
 2748 02c2 486A     	 ldr r0,[r1,#36]
 800:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2749              	 .loc 1 800 0
 2750 02c4 C1F82CE0 	 str lr,[r1,#44]
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 2751              	 .loc 1 799 0
 2752 02c8 C2EB0E02 	 rsb r2,r2,lr
 2753              	.LVL289:
 801:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 2754              	 .loc 1 801 0
 2755 02cc 0244     	 add r2,r2,r0
 2756              	.LVL290:
 2757 02ce 4A62     	 str r2,[r1,#36]
 2758              	.LVL291:
 2759              	.L243:
 2760              	.LBE75:
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2761              	 .loc 1 804 0
 2762 02d0 DFF838E0 	 ldr lr,.L322
 2763 02d4 3420     	 movs r0,#52
 2764 02d6 00FB04E0 	 mla r0,r0,r4,lr
 2765 02da 016B     	 ldr r1,[r0,#48]
 2766 02dc 826A     	 ldr r2,[r0,#40]
 2767 02de 9142     	 cmp r1,r2
 2768 02e0 1AD1     	 bne .L245
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2769              	 .loc 1 806 0
 2770 02e2 4268     	 ldr r2,[r0,#4]
 2771 02e4 22F00802 	 bic r2,r2,#8
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 2772              	 .loc 1 807 0
 2773 02e8 012B     	 cmp r3,#1
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2774              	 .loc 1 806 0
 2775 02ea 4260     	 str r2,[r0,#4]
 811:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 2776              	 .loc 1 811 0
 2777 02ec 01BF     	 itttt eq
 2778 02ee DEF8A421 	 ldreq r2,[lr,#420]
 2779 02f2 516B     	 ldreq r1,[r2,#52]
 2780 02f4 A340     	 lsleq r3,r3,r4
 2781 02f6 21EA0303 	 biceq r3,r1,r3
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2782              	 .loc 1 810 0
 2783 02fa 08BF     	 it eq
 2784 02fc 5363     	 streq r3,[r2,#52]
 813:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2785              	 .loc 1 813 0
 2786 02fe 44F08000 	 orr r0,r4,#128
 2787 0302 DEF80432 	 ldr r3,[lr,#516]
 2788 0306 0221     	 movs r1,#2
 2789 0308 9847     	 blx r3
 2790              	.LVL292:
 2791 030a 07E0     	 b .L241
 2792              	.L323:
 2793              	 .align 2
 2794              	.L322:
 2795 030c 00000000 	 .word xmc_device
 2796 0310 C0010000 	 .word xmc_device+448
 2797 0314 50001000 	 .word 1048656
 2798              	.L245:
 818:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2799              	 .loc 1 818 0
 2800 0318 FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 2801              	.LVL293:
 2802              	.L241:
 2803              	.LBB76:
 2804              	.LBB77:
1023:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2805              	 .loc 1 1023 0
 2806 031c 6A34     	 adds r4,r4,#106
 2807              	.LVL294:
 2808 031e 564B     	 ldr r3,.L324
 2809 0320 53F82430 	 ldr r3,[r3,r4,lsl#2]
 2810 0324 C3F80890 	 str r9,[r3,#8]
 2811              	.LVL295:
 2812              	.L234:
 2813 0328 0AF1010A 	 add r10,r10,#1
 2814              	.LVL296:
 2815 032c 51E7     	 b .L233
 2816              	.LVL297:
 2817              	.L320:
 2818              	.LBE77:
 2819              	.LBE76:
 827:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2820              	 .loc 1 827 0
 2821 032e 0E20     	 movs r0,#14
 2822 0330 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2823              	.LVL298:
 2824              	.L232:
 2825              	.LBE71:
 2826              	.LBE70:
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2827              	 .loc 1 923 0
 2828 0334 3807     	 lsls r0,r7,#28
 2829 0336 40F18780 	 bpl .L248
 2830              	.LVL299:
 2831              	.LBB78:
 2832              	.LBB79:
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2833              	 .loc 1 667 0
 2834 033a 4F4A     	 ldr r2,.L324
 2835 033c D2F8A411 	 ldr r1,[r2,#420]
 2836 0340 8B69     	 ldr r3,[r1,#24]
 669:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2837              	 .loc 1 669 0
 2838 0342 CF69     	 ldr r7,[r1,#28]
 671:../Libraries/XMCLib/src/xmc_usbd.c ****   
 2839              	 .loc 1 671 0
 2840 0344 4969     	 ldr r1,[r1,#20]
 2841 0346 0191     	 str r1,[sp,#4]
 2842              	.LVL300:
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 2843              	 .loc 1 673 0
 2844 0348 C3F30F43 	 ubfx r3,r3,#16,#16
 675:../Libraries/XMCLib/src/xmc_usbd.c ****  
 2845              	 .loc 1 675 0
 2846 034c 4FF00008 	 mov r8,#0
 2847              	.LVL301:
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 2848              	 .loc 1 673 0
 2849 0350 03EA1747 	 and r7,r3,r7,lsr#16
 2850              	.LVL302:
 675:../Libraries/XMCLib/src/xmc_usbd.c ****  
 2851              	 .loc 1 675 0
 2852 0354 C246     	 mov r10,r8
 2853 0356 9346     	 mov fp,r2
 2854              	.LVL303:
 2855              	.L249:
 2856 0358 5FFA8AF4 	 uxtb r4,r10
 2857              	.LVL304:
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2858              	 .loc 1 677 0
 2859 035c 57FA04F3 	 asrs r3,r7,r4
 2860 0360 6FD0     	 beq .L321
 2861              	.LVL305:
 681:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 2862              	 .loc 1 681 0
 2863 0362 D907     	 lsls r1,r3,#31
 2864 0364 6AD5     	 bpl .L250
 2865              	.LVL306:
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2866              	 .loc 1 685 0
 2867 0366 0BEB8403 	 add r3,fp,r4,lsl#2
 2868              	.LVL307:
 2869 036a 019A     	 ldr r2,[sp,#4]
 2870 036c D3F8C411 	 ldr r1,[r3,#452]
 2871 0370 8B68     	 ldr r3,[r1,#8]
 2872 0372 03EA0209 	 and r9,r3,r2
 2873              	.LVL308:
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2874              	 .loc 1 686 0
 2875 0376 737B     	 ldrb r3,[r6,#13]
 2876 0378 0BB9     	 cbnz r3,.L251
 688:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 2877              	 .loc 1 688 0
 2878 037a D1F81080 	 ldr r8,[r1,#16]
 2879              	.L251:
 2880              	.LVL309:
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2881              	 .loc 1 691 0
 2882 037e 5FFA89FC 	 uxtb ip,r9
 2883 0382 1CF0080F 	 tst ip,#8
 2884 0386 29D0     	 beq .L252
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2885              	 .loc 1 694 0
 2886 0388 3420     	 movs r0,#52
 2887 038a 00FB04B0 	 mla r0,r0,r4,fp
 2888 038e 0179     	 ldrb r1,[r0,#4]
 2889 0390 6FF34511 	 bfc r1,#5,#1
 2890 0394 0171     	 strb r1,[r0,#4]
 695:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2891              	 .loc 1 695 0
 2892 0396 2BB9     	 cbnz r3,.L253
 699:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2893              	 .loc 1 699 0
 2894 0398 C8F34173 	 ubfx r3,r8,#29,#2
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 2895              	 .loc 1 698 0
 2896 039c DB00     	 lsls r3,r3,#3
 2897 039e C3F11803 	 rsb r3,r3,#24
 2898 03a2 04E0     	 b .L319
 2899              	.L253:
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 2900              	 .loc 1 701 0
 2901 03a4 012B     	 cmp r3,#1
 2902 03a6 03D1     	 bne .L254
 703:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 2903              	 .loc 1 703 0
 2904 03a8 C16A     	 ldr r1,[r0,#44]
 2905 03aa 0369     	 ldr r3,[r0,#16]
 2906 03ac 0B44     	 add r3,r3,r1
 2907              	.L319:
 2908 03ae 0361     	 str r3,[r0,#16]
 2909              	.L254:
 705:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 2910              	 .loc 1 705 0
 2911 03b0 3423     	 movs r3,#52
 2912 03b2 03FB04B3 	 mla r3,r3,r4,fp
 2913 03b6 CDF808C0 	 str ip,[sp,#8]
 2914 03ba 5968     	 ldr r1,[r3,#4]
 2915 03bc 21F01001 	 bic r1,r1,#16
 2916 03c0 5960     	 str r1,[r3,#4]
 706:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 2917              	 .loc 1 706 0
 2918 03c2 0020     	 movs r0,#0
 2919 03c4 DBF80432 	 ldr r3,[fp,#516]
 2920 03c8 0146     	 mov r1,r0
 2921 03ca 9847     	 blx r3
 2922              	.LVL310:
 2923              	.LBB80:
 2924              	.LBB81:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2925              	 .loc 1 1033 0
 2926 03cc 0BEB8403 	 add r3,fp,r4,lsl#2
 2927 03d0 0821     	 movs r1,#8
 2928 03d2 D3F8C431 	 ldr r3,[r3,#452]
 2929 03d6 DDF808C0 	 ldr ip,[sp,#8]
 2930 03da 9960     	 str r1,[r3,#8]
 2931              	.LVL311:
 2932              	.L252:
 2933              	.LBE81:
 2934              	.LBE80:
 710:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 2935              	 .loc 1 710 0
 2936 03dc 1CF0010F 	 tst ip,#1
 2937 03e0 26D0     	 beq .L255
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2938              	 .loc 1 712 0
 2939 03e2 737B     	 ldrb r3,[r6,#13]
 2940 03e4 73B9     	 cbnz r3,.L256
 2941              	.LBB82:
 714:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 2942              	 .loc 1 714 0
 2943 03e6 3423     	 movs r3,#52
 2944 03e8 03FB04B3 	 mla r3,r3,r4,fp
 2945 03ec C8F3120C 	 ubfx ip,r8,#0,#19
 2946 03f0 D96A     	 ldr r1,[r3,#44]
 2947 03f2 986A     	 ldr r0,[r3,#40]
 2948 03f4 401A     	 subs r0,r0,r1
 2949 03f6 CCEB0000 	 rsb r0,ip,r0
 2950              	.LVL312:
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2951              	 .loc 1 715 0
 2952 03fa 0144     	 add r1,r1,r0
 2953 03fc D962     	 str r1,[r3,#44]
 716:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 2954              	 .loc 1 716 0
 2955 03fe 596A     	 ldr r1,[r3,#36]
 2956 0400 0144     	 add r1,r1,r0
 2957 0402 5962     	 str r1,[r3,#36]
 2958              	.LVL313:
 2959              	.L256:
 2960              	.LBE82:
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 2961              	 .loc 1 718 0
 2962 0404 3420     	 movs r0,#52
 2963 0406 00FB04B0 	 mla r0,r0,r4,fp
 2964 040a 016B     	 ldr r1,[r0,#48]
 2965 040c 836A     	 ldr r3,[r0,#40]
 2966 040e 9942     	 cmp r1,r3
 2967 0410 0CD1     	 bne .L257
 720:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 2968              	 .loc 1 720 0
 2969 0412 C36A     	 ldr r3,[r0,#44]
 2970 0414 0361     	 str r3,[r0,#16]
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 2971              	 .loc 1 721 0
 2972 0416 4368     	 ldr r3,[r0,#4]
 2973 0418 23F01003 	 bic r3,r3,#16
 2974 041c 4360     	 str r3,[r0,#4]
 722:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2975              	 .loc 1 722 0
 2976 041e 164B     	 ldr r3,.L324
 2977 0420 2046     	 mov r0,r4
 2978 0422 D3F80432 	 ldr r3,[r3,#516]
 2979 0426 0121     	 movs r1,#1
 2980 0428 9847     	 blx r3
 2981              	.LVL314:
 2982 042a 01E0     	 b .L255
 2983              	.L257:
 726:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 2984              	 .loc 1 726 0
 2985 042c FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 2986              	.LVL315:
 2987              	.L255:
 2988              	.LBB83:
 2989              	.LBB84:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2990              	 .loc 1 1033 0
 2991 0430 0BEB8404 	 add r4,fp,r4,lsl#2
 2992              	.LVL316:
 2993 0434 D4F8C431 	 ldr r3,[r4,#452]
 2994 0438 C3F80890 	 str r9,[r3,#8]
 2995              	.LVL317:
 2996              	.L250:
 2997 043c 0AF1010A 	 add r10,r10,#1
 2998              	.LVL318:
 2999 0440 8AE7     	 b .L249
 3000              	.LVL319:
 3001              	.L321:
 3002              	.LBE84:
 3003              	.LBE83:
 737:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3004              	 .loc 1 737 0
 3005 0442 0D20     	 movs r0,#13
 3006 0444 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 3007              	.LVL320:
 3008              	.L248:
 3009              	.LBE79:
 3010              	.LBE78:
 927:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3011              	 .loc 1 927 0
 3012 0448 6A07     	 lsls r2,r5,#29
 3013 044a 12D5     	 bpl .L218
 3014              	.LBB85:
 3015              	.LBB86:
 606:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 3016              	 .loc 1 606 0
 3017 044c 0A4C     	 ldr r4,.L324
 3018 044e D4F8A031 	 ldr r3,[r4,#416]
 3019 0452 5D68     	 ldr r5,[r3,#4]
 3020              	.LVL321:
 607:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3021              	 .loc 1 607 0
 3022 0454 6B07     	 lsls r3,r5,#29
 3023 0456 09D5     	 bpl .L260
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 3024              	 .loc 1 609 0
 3025 0458 94F8FE31 	 ldrb r3,[r4,#510]
 3026 045c 6FF38203 	 bfc r3,#2,#1
 3027 0460 84F8FE31 	 strb r3,[r4,#510]
 610:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 3028              	 .loc 1 610 0
 3029 0464 0120     	 movs r0,#1
 3030 0466 D4F80032 	 ldr r3,[r4,#512]
 3031 046a 9847     	 blx r3
 3032              	.LVL322:
 3033              	.L260:
 3034              	.LBB87:
 3035              	.LBB88:
1013:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3036              	 .loc 1 1013 0
 3037 046c D4F8A031 	 ldr r3,[r4,#416]
 3038 0470 5D60     	 str r5,[r3,#4]
 3039              	.LVL323:
 3040              	.L218:
 3041              	.LBE88:
 3042              	.LBE87:
 3043              	.LBE86:
 3044              	.LBE85:
 932:../Libraries/XMCLib/src/xmc_usbd.c **** 
 3045              	 .loc 1 932 0
 3046 0472 05B0     	 add sp,sp,#20
 3047              	.LCFI23:
 3048              	 .cfi_def_cfa_offset 36
 3049              	 
 3050 0474 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 3051              	.LVL324:
 3052              	.L325:
 3053              	 .align 2
 3054              	.L324:
 3055 0478 00000000 	 .word xmc_device
 3056              	 .cfi_endproc
 3057              	.LFE189:
 3059              	 .global Driver_USBD0
 3060              	 .comm usbd_init,4,4
 3061              	 .comm xmc_device,520,4
 3062              	 .global XMC_USBD_EP_IN_BUFFERSIZE
 3063              	 .global XMC_USBD_EP_OUT_BUFFERSIZE
 3064              	 .section .rodata.Driver_USBD0,"a",%progbits
 3065              	 .align 2
 3068              	Driver_USBD0:
 3069 0000 00000000 	 .word XMC_USBD_GetCapabilities
 3070 0004 00000000 	 .word XMC_USBD_Init
 3071 0008 00000000 	 .word XMC_USBD_Uninitialize
 3072 000c 00000000 	 .word XMC_USBD_DeviceConnect
 3073 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
 3074 0014 00000000 	 .word XMC_USBD_DeviceGetState
 3075 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
 3076 001c 00000000 	 .word XMC_USBD_EndpointConfigure
 3077 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
 3078 0024 00000000 	 .word XMC_USBD_EndpointStall
 3079 0028 00000000 	 .word XMC_USBD_EndpointReadStart
 3080 002c 00000000 	 .word XMC_USBD_EndpointRead
 3081 0030 00000000 	 .word XMC_USBD_EndpointWrite
 3082 0034 00000000 	 .word XMC_USBD_EndpointAbort
 3083 0038 00000000 	 .word XMC_USBD_GetFrameNumber
 3084 003c 00000000 	 .word XMC_USBD_IsEnumDone
 3085              	 .section USB_RAM,"aw",%progbits
 3086              	 .align 2
 3087              	 .set .LANCHOR0,.+0
 3090              	XMC_USBD_EP_IN_BUFFER:
 3091 0000 00000000 	 .space 1792
 3091      00000000 
 3091      00000000 
 3091      00000000 
 3091      00000000 
 3094              	XMC_USBD_EP_OUT_BUFFER:
 3095 0700 00000000 	 .space 1792
 3095      00000000 
 3095      00000000 
 3095      00000000 
 3095      00000000 
 3096              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
 3097              	 .align 2
 3098              	 .set .LANCHOR2,.+0
 3101              	XMC_USBD_EP_OUT_BUFFERSIZE:
 3102 0000 00000000 	 .space 28
 3102      00000000 
 3102      00000000 
 3102      00000000 
 3102      00000000 
 3103              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
 3104              	 .align 2
 3105              	 .set .LANCHOR1,.+0
 3108              	XMC_USBD_EP_IN_BUFFERSIZE:
 3109 0000 00000000 	 .space 28
 3109      00000000 
 3109      00000000 
 3109      00000000 
 3109      00000000 
 3110              	 .text
 3111              	.Letext0:
 3112              	 .file 2 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3113              	 .file 3 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3114              	 .file 4 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3115              	 .file 5 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 3116              	 .file 6 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc4_scu.h"
 3117              	 .file 7 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_usbd.h"
 3118              	 .file 8 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include/core_cm4.h"
 3119              	 .file 9 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:20     .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:24     .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:134    .text.XMC_USBD_lReadFifo:00000080 $d
                            *COM*:00000208 xmc_device
    {standard input}:139    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:143    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:193    .text.XMC_USBD_lFlushTXFifo:00000038 $d
    {standard input}:198    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:202    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:242    .text.XMC_USBD_lFlushRXFifo:00000028 $d
    {standard input}:247    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:251    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:362    .text.XMC_USBD_lStartReadXfer:00000090 $d
                            *COM*:00000004 usbd_init
    {standard input}:368    .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:372    .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:501    .text.XMC_USBD_lStartWriteXfer:000000b8 $d
    {standard input}:507    .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:512    .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:527    .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:532    .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:554    .text.XMC_USBD_DeviceConnect:00000014 $d
    {standard input}:559    .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:564    .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:586    .text.XMC_USBD_DeviceDisconnect:00000014 $d
    {standard input}:591    .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:596    .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:660    .text.XMC_USBD_EndpointReadStart:0000003c $d
    {standard input}:665    .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:670    .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:697    .text.XMC_USBD_DeviceSetAddress:00000014 $d
    {standard input}:702    .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:707    .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:805    .text.XMC_USBD_EndpointStall:00000078 $d
    {standard input}:810    .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:815    .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:877    .text.XMC_USBD_EndpointAbort:0000004c $d
    {standard input}:882    .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:887    .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:1040   .text.XMC_USBD_EndpointUnconfigure:000000e8 $d
    {standard input}:1046   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:1051   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:1070   .text.XMC_USBD_GetFrameNumber:00000010 $d
    {standard input}:1075   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:1080   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:1099   .text.XMC_USBD_IsEnumDone:00000014 $d
    {standard input}:1104   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:1109   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:1142   .text.XMC_USBD_Uninitialize:00000020 $d
    {standard input}:1147   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:1152   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:1475   .text.XMC_USBD_EndpointConfigure:000001b4 $d
    {standard input}:1483   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:1488   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:1543   .text.XMC_USBD_EndpointRead:00000034 $d
    {standard input}:1548   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:1553   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:1638   .text.XMC_USBD_EndpointWrite:00000050 $d
    {standard input}:1643   .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:1648   .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:1702   .text.XMC_USBD_lDeviceActive:00000030 $d
    {standard input}:1707   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:1712   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:1757   .text.XMC_USBD_DeviceGetState:00000030 $d
    {standard input}:1762   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:1767   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:1794   .text.XMC_USBD_Enable:00000010 $d
    {standard input}:1799   .text.XMC_USBD_Init:00000000 $t
    {standard input}:1804   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:1993   .text.XMC_USBD_Init:000000f0 $d
    {standard input}:2005   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2010   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2037   .text.XMC_USBD_Disable:00000010 $d
    {standard input}:2042   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2047   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:2063   .text.XMC_USBD_ClearEvent:0000000a $d
    {standard input}:2077   .text.XMC_USBD_ClearEvent:00000018 $t
    {standard input}:2126   .text.XMC_USBD_ClearEvent:00000050 $d
    {standard input}:2131   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:2136   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2154   .text.XMC_USBD_ClearEventINEP:0000000c $d
    {standard input}:2159   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:2164   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:2182   .text.XMC_USBD_ClearEventOUTEP:00000010 $d
    {standard input}:2187   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:2192   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:2211   .text.XMC_USBD_EnableEventOUTEP:00000010 $d
    {standard input}:2216   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:2221   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2240   .text.XMC_USBD_EnableEventINEP:00000010 $d
    {standard input}:2245   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2250   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2795   .text.XMC_USBD_IRQHandler:0000030c $d
    {standard input}:2800   .text.XMC_USBD_IRQHandler:00000318 $t
    {standard input}:3055   .text.XMC_USBD_IRQHandler:00000478 $d
    {standard input}:3068   .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:3108   .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
    {standard input}:3101   .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:3065   .rodata.Driver_USBD0:00000000 $d
    {standard input}:3086   USB_RAM:00000000 $d
    {standard input}:3090   USB_RAM:00000000 XMC_USBD_EP_IN_BUFFER
    {standard input}:3094   USB_RAM:00000700 XMC_USBD_EP_OUT_BUFFER
    {standard input}:3097   .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:3104   .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.ca5ae67a873a4952d630d8e4120b9e3e
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fe7d912fc917043c98742c35eddd8cff
                           .group:00000000 wm4.config.h.216.aad1ef7bee4fb69981cb38ce62f84d9c
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.4e89a3f145accdcb1100c37260c088e6
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.xmc_device.h.65.5c0d35eb1a6853ff8300ab2ec1b944b0
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.57f124f9262f3dbf77da6a6506ffb430
                           .group:00000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:00000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1500.3eca65ed9ba7f90e09c1ffcb0b3f5724
                           .group:00000000 wm4.xmc_common.h.98.806f17e888fd51d0e4be2ad115163551
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.fe81d5186f74ee22c982a1a79f340ee8
                           .group:00000000 wm4.xmc_usbd_regs.h.80.57c6c85fa0ecbc9f8327ce445aebb9bc
                           .group:00000000 wm4.xmc4_scu.h.90.f49c0839764a6c1240876a5f2e586200
                           .group:00000000 wm4.xmc_usbd.h.122.ce57a9e6a9da48ee33ece02813c49593

UNDEFINED SYMBOLS
memset
memcpy
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_POWER_DisableUsb
