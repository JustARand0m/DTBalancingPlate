   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usic.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_Enable.part.0,"ax",%progbits
  20              	 .align 1
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_Enable.part.0:
  25              	.LFB252:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:../Libraries/XMCLib/src/xmc_usic.c ****  *
  52:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:../Libraries/XMCLib/src/xmc_usic.c ****  *
  55:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:../Libraries/XMCLib/src/xmc_usic.c ****  *
  58:../Libraries/XMCLib/src/xmc_usic.c ****  * 2018-09-29:
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  60:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  61:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-03-30:
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  63:../Libraries/XMCLib/src/xmc_usic.c ****  *
  64:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-05-07:
  65:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  66:../Libraries/XMCLib/src/xmc_usic.c ****  *
  67:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *
  69:../Libraries/XMCLib/src/xmc_usic.c ****  */
  70:../Libraries/XMCLib/src/xmc_usic.c **** 
  71:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  72:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  73:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  74:../Libraries/XMCLib/src/xmc_usic.c **** 
  75:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  76:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  77:../Libraries/XMCLib/src/xmc_usic.c **** 
  78:../Libraries/XMCLib/src/xmc_usic.c **** #include <stdlib.h>     /* abs */
  79:../Libraries/XMCLib/src/xmc_usic.c **** 
  80:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  82:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_usic.c **** 
  84:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  85:../Libraries/XMCLib/src/xmc_usic.c **** 
  86:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  87:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  88:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  89:../Libraries/XMCLib/src/xmc_usic.c **** 
  90:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  91:../Libraries/XMCLib/src/xmc_usic.c **** {
  92:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  93:../Libraries/XMCLib/src/xmc_usic.c **** 
  94:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
  95:../Libraries/XMCLib/src/xmc_usic.c ****   {
  96:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
  97:../Libraries/XMCLib/src/xmc_usic.c ****   }
  98:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
  99:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 100:../Libraries/XMCLib/src/xmc_usic.c ****   {
 101:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 102:../Libraries/XMCLib/src/xmc_usic.c ****   }
 103:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 104:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 105:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 106:../Libraries/XMCLib/src/xmc_usic.c ****   {
 107:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 108:../Libraries/XMCLib/src/xmc_usic.c ****   }
 109:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 110:../Libraries/XMCLib/src/xmc_usic.c ****   else
 111:../Libraries/XMCLib/src/xmc_usic.c ****   {
 112:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 113:../Libraries/XMCLib/src/xmc_usic.c ****   }
 114:../Libraries/XMCLib/src/xmc_usic.c **** 
 115:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 116:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 117:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 118:../Libraries/XMCLib/src/xmc_usic.c ****   {
 119:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 120:../Libraries/XMCLib/src/xmc_usic.c ****   }
 121:../Libraries/XMCLib/src/xmc_usic.c **** 
 122:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 123:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 124:../Libraries/XMCLib/src/xmc_usic.c **** }
 125:../Libraries/XMCLib/src/xmc_usic.c **** 
 126:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 127:../Libraries/XMCLib/src/xmc_usic.c **** {
 128:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 129:../Libraries/XMCLib/src/xmc_usic.c **** }
 130:../Libraries/XMCLib/src/xmc_usic.c **** 
 131:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 132:../Libraries/XMCLib/src/xmc_usic.c **** {
 133:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 134:../Libraries/XMCLib/src/xmc_usic.c ****   
 135:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 136:../Libraries/XMCLib/src/xmc_usic.c ****   
 137:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 138:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 139:../Libraries/XMCLib/src/xmc_usic.c **** 
 140:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 141:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 142:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 143:../Libraries/XMCLib/src/xmc_usic.c ****   
 144:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 145:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 146:../Libraries/XMCLib/src/xmc_usic.c **** 
 147:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 148:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 149:../Libraries/XMCLib/src/xmc_usic.c ****   {
 150:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 151:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 152:../Libraries/XMCLib/src/xmc_usic.c **** 
 153:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 154:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 155:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 156:../Libraries/XMCLib/src/xmc_usic.c **** 
 157:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 158:../Libraries/XMCLib/src/xmc_usic.c ****     {
 159:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 160:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 161:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 162:../Libraries/XMCLib/src/xmc_usic.c **** 
 163:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 164:../Libraries/XMCLib/src/xmc_usic.c ****       {
 165:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 166:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 167:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 168:../Libraries/XMCLib/src/xmc_usic.c ****       }
 169:../Libraries/XMCLib/src/xmc_usic.c ****     }
 170:../Libraries/XMCLib/src/xmc_usic.c **** 
 171:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 172:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 173:../Libraries/XMCLib/src/xmc_usic.c **** 
 174:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 175:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 176:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 177:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 178:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 179:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 180:../Libraries/XMCLib/src/xmc_usic.c ****                     
 181:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 182:../Libraries/XMCLib/src/xmc_usic.c ****   }
 183:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 184:../Libraries/XMCLib/src/xmc_usic.c ****   {
 185:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 186:../Libraries/XMCLib/src/xmc_usic.c ****   }
 187:../Libraries/XMCLib/src/xmc_usic.c ****   
 188:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 189:../Libraries/XMCLib/src/xmc_usic.c **** }
 190:../Libraries/XMCLib/src/xmc_usic.c **** 
 191:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_
 192:../Libraries/XMCLib/src/xmc_usic.c **** {
 193:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 194:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t brg_clock = rate * oversampling;
 195:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 196:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t actual_rate_upper;
 197:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t actual_rate_lower;
 198:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 199:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv = 1;
 200:../Libraries/XMCLib/src/xmc_usic.c **** 
 201:../Libraries/XMCLib/src/xmc_usic.c ****   if (peripheral_clock > brg_clock)
 202:../Libraries/XMCLib/src/xmc_usic.c ****   {
 203:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 204:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 205:../Libraries/XMCLib/src/xmc_usic.c ****     {
 206:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv++;
 207:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 208:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 209:../Libraries/XMCLib/src/xmc_usic.c ****     }
 210:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 211:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 212:../Libraries/XMCLib/src/xmc_usic.c **** 
 213:../Libraries/XMCLib/src/xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 214:../Libraries/XMCLib/src/xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 215:../Libraries/XMCLib/src/xmc_usic.c ****     {
 216:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step += 1;
 217:../Libraries/XMCLib/src/xmc_usic.c ****     }
 218:../Libraries/XMCLib/src/xmc_usic.c **** 
 219:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = 1024 - divider_step;
 220:../Libraries/XMCLib/src/xmc_usic.c **** 
 221:../Libraries/XMCLib/src/xmc_usic.c **** 
 222:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 223:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 224:../Libraries/XMCLib/src/xmc_usic.c **** 
 225:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 226:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 227:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 228:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 229:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 230:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 231:../Libraries/XMCLib/src/xmc_usic.c **** 
 232:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 233:../Libraries/XMCLib/src/xmc_usic.c ****   }
 234:../Libraries/XMCLib/src/xmc_usic.c ****   else
 235:../Libraries/XMCLib/src/xmc_usic.c ****   {
 236:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 237:../Libraries/XMCLib/src/xmc_usic.c ****   }
 238:../Libraries/XMCLib/src/xmc_usic.c **** 
 239:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 240:../Libraries/XMCLib/src/xmc_usic.c **** }
 241:../Libraries/XMCLib/src/xmc_usic.c **** 
 242:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 243:../Libraries/XMCLib/src/xmc_usic.c **** {
 244:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 245:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 246:../Libraries/XMCLib/src/xmc_usic.c ****   {
 247:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 3
 248:../Libraries/XMCLib/src/xmc_usic.c ****     divider = 2;
 249:../Libraries/XMCLib/src/xmc_usic.c ****   }
 250:../Libraries/XMCLib/src/xmc_usic.c ****   else
 251:../Libraries/XMCLib/src/xmc_usic.c ****   {
 252:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 0, 1, or 2
 253:../Libraries/XMCLib/src/xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 254:../Libraries/XMCLib/src/xmc_usic.c ****   
 255:../Libraries/XMCLib/src/xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 256:../Libraries/XMCLib/src/xmc_usic.c ****     {
 257:../Libraries/XMCLib/src/xmc_usic.c **** 	  // CTQSEL = 0 or 2
 258:../Libraries/XMCLib/src/xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 259:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 260:../Libraries/XMCLib/src/xmc_usic.c ****       {
 261:../Libraries/XMCLib/src/xmc_usic.c ****         // CTQSEL = 2
 262:../Libraries/XMCLib/src/xmc_usic.c ****         divider *= 2;
 263:../Libraries/XMCLib/src/xmc_usic.c ****       }
 264:../Libraries/XMCLib/src/xmc_usic.c ****     }
 265:../Libraries/XMCLib/src/xmc_usic.c ****   }
 266:../Libraries/XMCLib/src/xmc_usic.c **** 
 267:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 268:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 269:../Libraries/XMCLib/src/xmc_usic.c **** 
 270:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 271:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 272:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 273:../Libraries/XMCLib/src/xmc_usic.c ****   {
 274:../Libraries/XMCLib/src/xmc_usic.c **** 	baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 275:../Libraries/XMCLib/src/xmc_usic.c ****   }
 276:../Libraries/XMCLib/src/xmc_usic.c ****   else
 277:../Libraries/XMCLib/src/xmc_usic.c ****   {
 278:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 279:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 280:../Libraries/XMCLib/src/xmc_usic.c ****   }
 281:../Libraries/XMCLib/src/xmc_usic.c **** 
 282:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 283:../Libraries/XMCLib/src/xmc_usic.c **** 
 284:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 285:../Libraries/XMCLib/src/xmc_usic.c **** }
 286:../Libraries/XMCLib/src/xmc_usic.c **** 
 287:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 288:../Libraries/XMCLib/src/xmc_usic.c **** {
 289:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 290:../Libraries/XMCLib/src/xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 291:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 292:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 293:../Libraries/XMCLib/src/xmc_usic.c **** 
 294:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 295:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 296:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 297:../Libraries/XMCLib/src/xmc_usic.c ****   {
 298:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 299:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 300:../Libraries/XMCLib/src/xmc_usic.c ****   }
 301:../Libraries/XMCLib/src/xmc_usic.c ****   else
 302:../Libraries/XMCLib/src/xmc_usic.c ****   {
 303:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 304:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 305:../Libraries/XMCLib/src/xmc_usic.c ****   }
 306:../Libraries/XMCLib/src/xmc_usic.c **** 
 307:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 308:../Libraries/XMCLib/src/xmc_usic.c **** 
 309:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 310:../Libraries/XMCLib/src/xmc_usic.c **** }
 311:../Libraries/XMCLib/src/xmc_usic.c **** 
 312:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 313:../Libraries/XMCLib/src/xmc_usic.c **** {
 314:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 315:../Libraries/XMCLib/src/xmc_usic.c **** 
 316:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 317:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 318:../Libraries/XMCLib/src/xmc_usic.c ****   {
 319:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 320:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 321:../Libraries/XMCLib/src/xmc_usic.c ****   }
 322:../Libraries/XMCLib/src/xmc_usic.c ****   else
 323:../Libraries/XMCLib/src/xmc_usic.c ****   {
 324:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 325:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 326:../Libraries/XMCLib/src/xmc_usic.c ****   }
 327:../Libraries/XMCLib/src/xmc_usic.c **** 
 328:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= 2;
 329:../Libraries/XMCLib/src/xmc_usic.c **** 
 330:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 331:../Libraries/XMCLib/src/xmc_usic.c **** }
 332:../Libraries/XMCLib/src/xmc_usic.c **** 
 333:../Libraries/XMCLib/src/xmc_usic.c **** 
 334:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 335:../Libraries/XMCLib/src/xmc_usic.c **** 		                                        const uint16_t pdiv,
 336:../Libraries/XMCLib/src/xmc_usic.c **** 												const uint32_t oversampling,
 337:../Libraries/XMCLib/src/xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 338:../Libraries/XMCLib/src/xmc_usic.c **** {
 339:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 340:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 341:../Libraries/XMCLib/src/xmc_usic.c **** 
 342:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 343:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 344:../Libraries/XMCLib/src/xmc_usic.c **** 
 345:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 346:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 347:../Libraries/XMCLib/src/xmc_usic.c **** 
 348:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 349:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 350:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 351:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 352:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 353:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 354:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 355:../Libraries/XMCLib/src/xmc_usic.c **** }
 356:../Libraries/XMCLib/src/xmc_usic.c **** 
 357:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 358:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 359:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 360:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 361:../Libraries/XMCLib/src/xmc_usic.c **** {
 362:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 363:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 364:../Libraries/XMCLib/src/xmc_usic.c **** 
 365:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 366:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 367:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 368:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 369:../Libraries/XMCLib/src/xmc_usic.c ****    */
 370:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 371:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 372:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 373:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 374:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 375:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 376:../Libraries/XMCLib/src/xmc_usic.c **** }
 377:../Libraries/XMCLib/src/xmc_usic.c **** 
 378:../Libraries/XMCLib/src/xmc_usic.c **** 
 379:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 380:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 381:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 382:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 383:../Libraries/XMCLib/src/xmc_usic.c **** {
 384:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 385:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 386:../Libraries/XMCLib/src/xmc_usic.c **** 
 387:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 388:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 389:../Libraries/XMCLib/src/xmc_usic.c ****    */
 390:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 391:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 392:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 393:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 394:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 395:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 396:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 397:../Libraries/XMCLib/src/xmc_usic.c **** }
 398:../Libraries/XMCLib/src/xmc_usic.c **** 
 399:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 400:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 401:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 402:../Libraries/XMCLib/src/xmc_usic.c **** {
 403:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 404:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 405:../Libraries/XMCLib/src/xmc_usic.c **** 
 406:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 407:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 408:../Libraries/XMCLib/src/xmc_usic.c ****    */
 409:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 410:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 411:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 412:../Libraries/XMCLib/src/xmc_usic.c **** }
 413:../Libraries/XMCLib/src/xmc_usic.c **** 
 414:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 415:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 416:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 417:../Libraries/XMCLib/src/xmc_usic.c **** {
 418:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 419:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 420:../Libraries/XMCLib/src/xmc_usic.c **** 
 421:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 422:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 423:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 424:../Libraries/XMCLib/src/xmc_usic.c **** }
 425:../Libraries/XMCLib/src/xmc_usic.c **** 
 426:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 427:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 428:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 429:../Libraries/XMCLib/src/xmc_usic.c **** {
 430:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 431:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 432:../Libraries/XMCLib/src/xmc_usic.c **** }
 433:../Libraries/XMCLib/src/xmc_usic.c **** 
 434:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 435:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 436:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 437:../Libraries/XMCLib/src/xmc_usic.c **** {
 438:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 439:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 440:../Libraries/XMCLib/src/xmc_usic.c **** }
 441:../Libraries/XMCLib/src/xmc_usic.c **** 
 442:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 443:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 444:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 445:../Libraries/XMCLib/src/xmc_usic.c **** {
 446:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 447:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 448:../Libraries/XMCLib/src/xmc_usic.c **** }
 449:../Libraries/XMCLib/src/xmc_usic.c **** 
 450:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
  27              	 .loc 1 450 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	.LVL0:
  32 0000 08B5     	 push {r3,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 3,-8
  36              	 .cfi_offset 14,-4
 451:../Libraries/XMCLib/src/xmc_usic.c **** {
 452:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 453:../Libraries/XMCLib/src/xmc_usic.c ****   {
 454:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 455:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 456:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 457:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 458:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 459:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 460:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 461:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 462:../Libraries/XMCLib/src/xmc_usic.c ****   }
 463:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 464:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 465:../Libraries/XMCLib/src/xmc_usic.c ****   {
 466:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 467:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 468:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 469:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 470:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 471:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
  37              	 .loc 1 471 0
  38 0002 0448     	 ldr r0,.L5
  39 0004 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  40              	.LVL1:
  41              	.L2:
 472:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
  42              	 .loc 1 472 0
  43 0008 0248     	 ldr r0,.L5
  44 000a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
  45              	.LVL2:
  46 000e 0028     	 cmp r0,#0
  47 0010 FAD1     	 bne .L2
 473:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 474:../Libraries/XMCLib/src/xmc_usic.c ****   }
 475:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 476:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 477:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 478:../Libraries/XMCLib/src/xmc_usic.c ****   {
 479:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 480:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 481:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 482:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 483:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 484:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 485:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 486:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 487:../Libraries/XMCLib/src/xmc_usic.c ****   }
 488:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 489:../Libraries/XMCLib/src/xmc_usic.c ****   else
 490:../Libraries/XMCLib/src/xmc_usic.c ****   {
 491:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 492:../Libraries/XMCLib/src/xmc_usic.c ****   }
 493:../Libraries/XMCLib/src/xmc_usic.c **** }
  48              	 .loc 1 493 0
  49 0012 08BD     	 pop {r3,pc}
  50              	.L6:
  51              	 .align 2
  52              	.L5:
  53 0014 80000010 	 .word 268435584
  54              	 .cfi_endproc
  55              	.LFE252:
  57              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
  58              	 .align 1
  59              	 .global XMC_USIC_CH_Disable
  60              	 .thumb
  61              	 .thumb_func
  63              	XMC_USIC_CH_Disable:
  64              	.LFB236:
 127:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
  65              	 .loc 1 127 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70              	.LVL3:
 128:../Libraries/XMCLib/src/xmc_usic.c **** }
  71              	 .loc 1 128 0
  72 0000 C368     	 ldr r3,[r0,#12]
  73 0002 23F00303 	 bic r3,r3,#3
  74 0006 43F00203 	 orr r3,r3,#2
  75 000a C360     	 str r3,[r0,#12]
  76 000c 7047     	 bx lr
  77              	 .cfi_endproc
  78              	.LFE236:
  80              	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
  81              	 .align 1
  82              	 .global XMC_USIC_CH_SetBaudrate
  83              	 .thumb
  84              	 .thumb_func
  86              	XMC_USIC_CH_SetBaudrate:
  87              	.LFB237:
 132:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
  88              	 .loc 1 132 0
  89              	 .cfi_startproc
  90              	 
  91              	 
  92              	.LVL4:
 148:../Libraries/XMCLib/src/xmc_usic.c ****   {
  93              	 .loc 1 148 0
  94 0000 6329     	 cmp r1,#99
 132:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
  95              	 .loc 1 132 0
  96 0002 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
  97              	.LCFI1:
  98              	 .cfi_def_cfa_offset 24
  99              	 .cfi_offset 4,-24
 100              	 .cfi_offset 5,-20
 101              	 .cfi_offset 6,-16
 102              	 .cfi_offset 7,-12
 103              	 .cfi_offset 8,-8
 104              	 .cfi_offset 14,-4
 132:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 105              	 .loc 1 132 0
 106 0006 0546     	 mov r5,r0
 107 0008 0C46     	 mov r4,r1
 108 000a 1646     	 mov r6,r2
 148:../Libraries/XMCLib/src/xmc_usic.c ****   {
 109              	 .loc 1 148 0
 110 000c 30D9     	 bls .L13
 148:../Libraries/XMCLib/src/xmc_usic.c ****   {
 111              	 .loc 1 148 0 is_stmt 0 discriminator 1
 112 000e 7AB3     	 cbz r2,.L13
 150:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 113              	 .loc 1 150 0 is_stmt 1
 114 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 115              	.LVL5:
 116 0014 6421     	 movs r1,#100
 155:../Libraries/XMCLib/src/xmc_usic.c **** 
 117              	 .loc 1 155 0
 118 0016 40F2FF3C 	 movw ip,#1023
 150:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 119              	 .loc 1 150 0
 120 001a B0FBF1FE 	 udiv lr,r0,r1
 121              	.LVL6:
 151:../Libraries/XMCLib/src/xmc_usic.c **** 
 122              	 .loc 1 151 0
 123 001e B4FBF1F4 	 udiv r4,r4,r1
 124              	.LVL7:
 154:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 125              	 .loc 1 154 0
 126 0022 0121     	 movs r1,#1
 159:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 127              	 .loc 1 159 0
 128 0024 7443     	 muls r4,r6,r4
 129              	.LVL8:
 130 0026 CEEB8E27 	 rsb r7,lr,lr,lsl#10
 153:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 131              	 .loc 1 153 0
 132 002a 0A46     	 mov r2,r1
 157:../Libraries/XMCLib/src/xmc_usic.c ****     {
 133              	 .loc 1 157 0
 134 002c 6046     	 mov r0,ip
 135              	.LVL9:
 136              	.L11:
 159:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 137              	 .loc 1 159 0
 138 002e B7FBF4F3 	 udiv r3,r7,r4
 139              	.LVL10:
 160:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 140              	 .loc 1 160 0
 141 0032 4FEA9328 	 lsr r8,r3,#10
 142              	.LVL11:
 163:../Libraries/XMCLib/src/xmc_usic.c ****       {
 143              	 .loc 1 163 0
 144 0036 B8F5806F 	 cmp r8,#1024
 145 003a 06D2     	 bcs .L10
 161:../Libraries/XMCLib/src/xmc_usic.c **** 
 146              	 .loc 1 161 0 discriminator 1
 147 003c C3F30903 	 ubfx r3,r3,#0,#10
 148              	.LVL12:
 163:../Libraries/XMCLib/src/xmc_usic.c ****       {
 149              	 .loc 1 163 0 discriminator 1
 150 0040 6345     	 cmp r3,ip
 151 0042 3EBF     	 ittt cc
 152 0044 9C46     	 movcc ip,r3
 153              	.LVL13:
 154 0046 4146     	 movcc r1,r8
 155 0048 0246     	 movcc r2,r0
 156              	.L10:
 157              	.LVL14:
 157:../Libraries/XMCLib/src/xmc_usic.c ****     {
 158              	 .loc 1 157 0 discriminator 2
 159 004a 0138     	 subs r0,r0,#1
 160              	.LVL15:
 161 004c CEEB0707 	 rsb r7,lr,r7
 162              	.LVL16:
 163 0050 EDD1     	 bne .L11
 171:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 164              	 .loc 1 171 0
 165 0052 42F40042 	 orr r2,r2,#32768
 166 0056 2A61     	 str r2,[r5,#16]
 174:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 167              	 .loc 1 174 0
 168 0058 6A69     	 ldr r2,[r5,#20]
 169 005a 074B     	 ldr r3,.L15
 178:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 170              	 .loc 1 178 0
 171 005c 013E     	 subs r6,r6,#1
 172              	.LVL17:
 174:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 173              	 .loc 1 174 0
 174 005e 1340     	 ands r3,r3,r2
 177:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 175              	 .loc 1 177 0
 176 0060 43EA8623 	 orr r3,r3,r6,lsl#10
 179:../Libraries/XMCLib/src/xmc_usic.c ****                     
 177              	 .loc 1 179 0
 178 0064 0139     	 subs r1,r1,#1
 178:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 179              	 .loc 1 178 0
 180 0066 43EA0143 	 orr r3,r3,r1,lsl#16
 174:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 181              	 .loc 1 174 0
 182 006a 6B61     	 str r3,[r5,#20]
 183              	.LVL18:
 181:../Libraries/XMCLib/src/xmc_usic.c ****   }
 184              	 .loc 1 181 0
 185 006c BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 186              	.LVL19:
 187              	.L13:
 185:../Libraries/XMCLib/src/xmc_usic.c ****   }
 188              	 .loc 1 185 0
 189 0070 0120     	 movs r0,#1
 190              	.LVL20:
 189:../Libraries/XMCLib/src/xmc_usic.c **** 
 191              	 .loc 1 189 0
 192 0072 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 193              	.LVL21:
 194              	.L16:
 195 0076 00BF     	 .align 2
 196              	.L15:
 197 0078 EF8000FC 	 .word -67075857
 198              	 .cfi_endproc
 199              	.LFE237:
 201              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 202              	 .align 1
 203              	 .global XMC_USIC_CH_SetBaudrateEx
 204              	 .thumb
 205              	 .thumb_func
 207              	XMC_USIC_CH_SetBaudrateEx:
 208              	.LFB238:
 192:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 209              	 .loc 1 192 0
 210              	 .cfi_startproc
 211              	 
 212              	 
 213              	.LVL22:
 214 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 215              	.LCFI2:
 216              	 .cfi_def_cfa_offset 24
 217              	 .cfi_offset 4,-24
 218              	 .cfi_offset 5,-20
 219              	 .cfi_offset 6,-16
 220              	 .cfi_offset 7,-12
 221              	 .cfi_offset 8,-8
 222              	 .cfi_offset 14,-4
 192:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 223              	 .loc 1 192 0
 224 0004 0F46     	 mov r7,r1
 225 0006 9046     	 mov r8,r2
 226 0008 0546     	 mov r5,r0
 193:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t brg_clock = rate * oversampling;
 227              	 .loc 1 193 0
 228 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 229              	.LVL23:
 194:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 230              	 .loc 1 194 0
 231 000e 08FB07F2 	 mul r2,r8,r7
 232              	.LVL24:
 201:../Libraries/XMCLib/src/xmc_usic.c ****   {
 233              	 .loc 1 201 0
 234 0012 9042     	 cmp r0,r2
 235 0014 37D9     	 bls .L22
 203:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 236              	 .loc 1 203 0
 237 0016 B0FBF2F3 	 udiv r3,r0,r2
 238              	.LVL25:
 239 001a 5100     	 lsls r1,r2,#1
 199:../Libraries/XMCLib/src/xmc_usic.c **** 
 240              	 .loc 1 199 0
 241 001c 0126     	 movs r6,#1
 242              	.LVL26:
 243              	.L19:
 204:../Libraries/XMCLib/src/xmc_usic.c ****     {
 244              	 .loc 1 204 0
 245 001e 40F2FE34 	 movw r4,#1022
 246 0022 A342     	 cmp r3,r4
 247 0024 04D9     	 bls .L23
 208:../Libraries/XMCLib/src/xmc_usic.c ****     }
 248              	 .loc 1 208 0
 249 0026 B0FBF1F3 	 udiv r3,r0,r1
 250              	.LVL27:
 206:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 251              	 .loc 1 206 0
 252 002a 0136     	 adds r6,r6,#1
 253              	.LVL28:
 254 002c 1144     	 add r1,r1,r2
 255              	.LVL29:
 256 002e F6E7     	 b .L19
 257              	.L23:
 258              	.LVL30:
 211:../Libraries/XMCLib/src/xmc_usic.c **** 
 259              	 .loc 1 211 0
 260 0030 5A1C     	 adds r2,r3,#1
 261              	.LVL31:
 262 0032 08FB06F4 	 mul r4,r8,r6
 263 0036 03FB06F1 	 mul r1,r3,r6
 264 003a 5443     	 muls r4,r2,r4
 265 003c B0FBF4F4 	 udiv r4,r0,r4
 266              	.LVL32:
 214:../Libraries/XMCLib/src/xmc_usic.c ****     {
 267              	 .loc 1 214 0
 268 0040 3C1B     	 subs r4,r7,r4
 269              	.LVL33:
 270 0042 002C     	 cmp r4,#0
 210:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 271              	 .loc 1 210 0
 272 0044 08FB01F1 	 mul r1,r8,r1
 273 0048 B0FBF1F0 	 udiv r0,r0,r1
 274              	.LVL34:
 214:../Libraries/XMCLib/src/xmc_usic.c ****     {
 275              	 .loc 1 214 0
 276 004c A7EB0007 	 sub r7,r7,r0
 277              	.LVL35:
 278 0050 B8BF     	 it lt
 279 0052 6442     	 rsblt r4,r4,#0
 280 0054 002F     	 cmp r7,#0
 281 0056 B8BF     	 it lt
 282 0058 7F42     	 rsblt r7,r7,#0
 216:../Libraries/XMCLib/src/xmc_usic.c ****     }
 283              	 .loc 1 216 0
 284 005a BC42     	 cmp r4,r7
 285 005c B8BF     	 it lt
 286 005e 1346     	 movlt r3,r2
 287              	.LVL36:
 219:../Libraries/XMCLib/src/xmc_usic.c **** 
 288              	 .loc 1 219 0
 289 0060 C3F58063 	 rsb r3,r3,#1024
 290              	.LVL37:
 222:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 291              	 .loc 1 222 0
 292 0064 43F48043 	 orr r3,r3,#16384
 293              	.LVL38:
 294 0068 2B61     	 str r3,[r5,#16]
 225:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 295              	 .loc 1 225 0
 296 006a 6A69     	 ldr r2,[r5,#20]
 297              	.LVL39:
 298 006c 074B     	 ldr r3,.L24
 229:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 299              	 .loc 1 229 0
 300 006e 08F1FF38 	 add r8,r8,#-1
 301              	.LVL40:
 225:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 302              	 .loc 1 225 0
 303 0072 1340     	 ands r3,r3,r2
 228:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 304              	 .loc 1 228 0
 305 0074 43EA8823 	 orr r3,r3,r8,lsl#10
 230:../Libraries/XMCLib/src/xmc_usic.c **** 
 306              	 .loc 1 230 0
 307 0078 013E     	 subs r6,r6,#1
 308              	.LVL41:
 229:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 309              	 .loc 1 229 0
 310 007a 43EA0643 	 orr r3,r3,r6,lsl#16
 225:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 311              	 .loc 1 225 0
 312 007e 6B61     	 str r3,[r5,#20]
 313              	.LVL42:
 232:../Libraries/XMCLib/src/xmc_usic.c ****   }
 314              	 .loc 1 232 0
 315 0080 0020     	 movs r0,#0
 316              	.LVL43:
 317 0082 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 318              	.LVL44:
 319              	.L22:
 236:../Libraries/XMCLib/src/xmc_usic.c ****   }
 320              	 .loc 1 236 0
 321 0086 0120     	 movs r0,#1
 322              	.LVL45:
 240:../Libraries/XMCLib/src/xmc_usic.c **** 
 323              	 .loc 1 240 0
 324 0088 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 325              	.LVL46:
 326              	.L25:
 327              	 .align 2
 328              	.L24:
 329 008c EF8000FC 	 .word -67075857
 330              	 .cfi_endproc
 331              	.LFE238:
 333              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 334              	 .align 1
 335              	 .global XMC_USIC_CH_GetBaudrate
 336              	 .thumb
 337              	 .thumb_func
 339              	XMC_USIC_CH_GetBaudrate:
 340              	.LFB239:
 243:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 341              	 .loc 1 243 0
 342              	 .cfi_startproc
 343              	 
 344              	 
 345              	.LVL47:
 346 0000 38B5     	 push {r3,r4,r5,lr}
 347              	.LCFI3:
 348              	 .cfi_def_cfa_offset 16
 349              	 .cfi_offset 3,-16
 350              	 .cfi_offset 4,-12
 351              	 .cfi_offset 5,-8
 352              	 .cfi_offset 14,-4
 245:../Libraries/XMCLib/src/xmc_usic.c ****   {
 353              	 .loc 1 245 0
 354 0002 4369     	 ldr r3,[r0,#20]
 355 0004 03F0C003 	 and r3,r3,#192
 356 0008 C02B     	 cmp r3,#192
 243:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 357              	 .loc 1 243 0
 358 000a 0546     	 mov r5,r0
 245:../Libraries/XMCLib/src/xmc_usic.c ****   {
 359              	 .loc 1 245 0
 360 000c 12D0     	 beq .L31
 253:../Libraries/XMCLib/src/xmc_usic.c ****   
 361              	 .loc 1 253 0
 362 000e 4369     	 ldr r3,[r0,#20]
 255:../Libraries/XMCLib/src/xmc_usic.c ****     {
 363              	 .loc 1 255 0
 364 0010 4269     	 ldr r2,[r0,#20]
 253:../Libraries/XMCLib/src/xmc_usic.c ****   
 365              	 .loc 1 253 0
 366 0012 13F0100F 	 tst r3,#16
 367 0016 14BF     	 ite ne
 368 0018 0223     	 movne r3,#2
 369 001a 0123     	 moveq r3,#1
 370              	.LVL48:
 255:../Libraries/XMCLib/src/xmc_usic.c ****     {
 371              	 .loc 1 255 0
 372 001c 5106     	 lsls r1,r2,#25
 373 001e 0AD4     	 bmi .L27
 258:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 374              	 .loc 1 258 0
 375 0020 4269     	 ldr r2,[r0,#20]
 376 0022 C2F30942 	 ubfx r2,r2,#16,#10
 377 0026 02FB0333 	 mla r3,r2,r3,r3
 378              	.LVL49:
 259:../Libraries/XMCLib/src/xmc_usic.c ****       {
 379              	 .loc 1 259 0
 380 002a 4269     	 ldr r2,[r0,#20]
 381 002c 1206     	 lsls r2,r2,#24
 382 002e 02D5     	 bpl .L27
 262:../Libraries/XMCLib/src/xmc_usic.c ****       }
 383              	 .loc 1 262 0
 384 0030 5B00     	 lsls r3,r3,#1
 385              	.LVL50:
 386 0032 00E0     	 b .L27
 387              	.LVL51:
 388              	.L31:
 248:../Libraries/XMCLib/src/xmc_usic.c ****   }
 389              	 .loc 1 248 0
 390 0034 0223     	 movs r3,#2
 391              	.L27:
 392              	.LVL52:
 267:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 393              	 .loc 1 267 0
 394 0036 6A69     	 ldr r2,[r5,#20]
 395              	.LVL53:
 268:../Libraries/XMCLib/src/xmc_usic.c **** 
 396              	 .loc 1 268 0
 397 0038 6C69     	 ldr r4,[r5,#20]
 267:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 398              	 .loc 1 267 0
 399 003a C2F30122 	 ubfx r2,r2,#8,#2
 400              	.LVL54:
 268:../Libraries/XMCLib/src/xmc_usic.c **** 
 401              	 .loc 1 268 0
 402 003e C4F38421 	 ubfx r1,r4,#10,#5
 267:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 403              	 .loc 1 267 0
 404 0042 541C     	 adds r4,r2,#1
 405 0044 01FB0444 	 mla r4,r1,r4,r4
 268:../Libraries/XMCLib/src/xmc_usic.c **** 
 406              	 .loc 1 268 0
 407 0048 5C43     	 muls r4,r3,r4
 408              	.LVL55:
 270:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 409              	 .loc 1 270 0
 410 004a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 411              	.LVL56:
 272:../Libraries/XMCLib/src/xmc_usic.c ****   {
 412              	 .loc 1 272 0
 413 004e 2B69     	 ldr r3,[r5,#16]
 414 0050 03F44043 	 and r3,r3,#49152
 415 0054 B3F5004F 	 cmp r3,#32768
 274:../Libraries/XMCLib/src/xmc_usic.c ****   }
 416              	 .loc 1 274 0
 417 0058 2B69     	 ldr r3,[r5,#16]
 418 005a C3F30903 	 ubfx r3,r3,#0,#10
 279:../Libraries/XMCLib/src/xmc_usic.c ****   }
 419              	 .loc 1 279 0
 420 005e 1CBF     	 itt ne
 421 0060 C3F58063 	 rsbne r3,r3,#1024
 422 0064 07EE103A 	 fmsrne s14,r3
 423 0068 07EE900A 	 fmsr s15,r0
 424 006c 18BF     	 it ne
 425 006e B8EEC77A 	 fsitosne s14,s14
 426 0072 F8EE676A 	 fuitos s13,s15
 427 0076 1ABF     	 itte ne
 428 0078 F7EE007A 	 fconstsne s15,#112
 429 007c 87EE877A 	 fdivsne s14,s15,s14
 274:../Libraries/XMCLib/src/xmc_usic.c ****   }
 430              	 .loc 1 274 0
 431 0080 07EE103A 	 fmsreq s14,r3
 282:../Libraries/XMCLib/src/xmc_usic.c **** 
 432              	 .loc 1 282 0
 433 0084 07EE904A 	 fmsr s15,r4
 274:../Libraries/XMCLib/src/xmc_usic.c ****   }
 434              	 .loc 1 274 0
 435 0088 08BF     	 it eq
 436 008a BAEECB7A 	 vcvteq.f32.s32 s14,s14,#10
 282:../Libraries/XMCLib/src/xmc_usic.c **** 
 437              	 .loc 1 282 0
 438 008e F8EEE77A 	 fsitos s15,s15
 279:../Libraries/XMCLib/src/xmc_usic.c ****   }
 439              	 .loc 1 279 0
 440 0092 26EE877A 	 fmuls s14,s13,s14
 441              	.LVL57:
 282:../Libraries/XMCLib/src/xmc_usic.c **** 
 442              	 .loc 1 282 0
 443 0096 C7EE277A 	 fdivs s15,s14,s15
 444              	.LVL58:
 285:../Libraries/XMCLib/src/xmc_usic.c **** 
 445              	 .loc 1 285 0
 446 009a FCEEE77A 	 ftouizs s15,s15
 447              	.LVL59:
 448 009e 17EE900A 	 fmrs r0,s15
 449              	.LVL60:
 450 00a2 38BD     	 pop {r3,r4,r5,pc}
 451              	 .cfi_endproc
 452              	.LFE239:
 454              	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 455              	 .align 1
 456              	 .global XMC_USIC_CH_GetSCLKFrequency
 457              	 .thumb
 458              	 .thumb_func
 460              	XMC_USIC_CH_GetSCLKFrequency:
 461              	.LFB240:
 288:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 462              	 .loc 1 288 0
 463              	 .cfi_startproc
 464              	 
 465              	 
 466              	.LVL61:
 467 0000 38B5     	 push {r3,r4,r5,lr}
 468              	.LCFI4:
 469              	 .cfi_def_cfa_offset 16
 470              	 .cfi_offset 3,-16
 471              	 .cfi_offset 4,-12
 472              	 .cfi_offset 5,-8
 473              	 .cfi_offset 14,-4
 290:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 474              	 .loc 1 290 0
 475 0002 4369     	 ldr r3,[r0,#20]
 476 0004 13F0100F 	 tst r3,#16
 291:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 477              	 .loc 1 291 0
 478 0008 4369     	 ldr r3,[r0,#20]
 479 000a C3F30943 	 ubfx r3,r3,#16,#10
 288:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 480              	 .loc 1 288 0
 481 000e 0546     	 mov r5,r0
 291:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 482              	 .loc 1 291 0
 483 0010 03F10103 	 add r3,r3,#1
 290:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 484              	 .loc 1 290 0
 485 0014 14BF     	 ite ne
 486 0016 0222     	 movne r2,#2
 487 0018 0122     	 moveq r2,#1
 488              	.LVL62:
 489 001a 5B00     	 lsls r3,r3,#1
 292:../Libraries/XMCLib/src/xmc_usic.c **** 
 490              	 .loc 1 292 0
 491 001c 02FB03F4 	 mul r4,r2,r3
 492              	.LVL63:
 294:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 493              	 .loc 1 294 0
 494 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 495              	.LVL64:
 296:../Libraries/XMCLib/src/xmc_usic.c ****   {
 496              	 .loc 1 296 0
 497 0024 2B69     	 ldr r3,[r5,#16]
 498 0026 03F44043 	 and r3,r3,#49152
 499 002a B3F5004F 	 cmp r3,#32768
 299:../Libraries/XMCLib/src/xmc_usic.c ****   }
 500              	 .loc 1 299 0
 501 002e 2B69     	 ldr r3,[r5,#16]
 502 0030 07EE900A 	 fmsr s15,r0
 503 0034 C3F30903 	 ubfx r3,r3,#0,#10
 304:../Libraries/XMCLib/src/xmc_usic.c ****   }
 504              	 .loc 1 304 0
 505 0038 18BF     	 it ne
 506 003a C3F58063 	 rsbne r3,r3,#1024
 507 003e B8EE677A 	 fuitos s14,s15
 508 0042 1FBF     	 itttt ne
 509 0044 07EE903A 	 fmsrne s15,r3
 510 0048 F8EEE76A 	 fsitosne s13,s15
 511 004c F7EE007A 	 fconstsne s15,#112
 512 0050 C7EEA67A 	 fdivsne s15,s15,s13
 299:../Libraries/XMCLib/src/xmc_usic.c ****   }
 513              	 .loc 1 299 0
 514 0054 04BF     	 itt eq
 515 0056 07EE903A 	 fmsreq s15,r3
 516 005a FAEECB7A 	 vcvteq.f32.s32 s15,s15,#10
 304:../Libraries/XMCLib/src/xmc_usic.c ****   }
 517              	 .loc 1 304 0
 518 005e 67EE277A 	 fmuls s15,s14,s15
 519              	.LVL65:
 307:../Libraries/XMCLib/src/xmc_usic.c **** 
 520              	 .loc 1 307 0
 521 0062 07EE104A 	 fmsr s14,r4
 522 0066 B8EEC77A 	 fsitos s14,s14
 523 006a C7EE877A 	 fdivs s15,s15,s14
 524              	.LVL66:
 310:../Libraries/XMCLib/src/xmc_usic.c **** 
 525              	 .loc 1 310 0
 526 006e FCEEE77A 	 ftouizs s15,s15
 527              	.LVL67:
 528 0072 17EE900A 	 fmrs r0,s15
 529              	.LVL68:
 530 0076 38BD     	 pop {r3,r4,r5,pc}
 531              	 .cfi_endproc
 532              	.LFE240:
 534              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 535              	 .align 1
 536              	 .global XMC_USIC_CH_GetMCLKFrequency
 537              	 .thumb
 538              	 .thumb_func
 540              	XMC_USIC_CH_GetMCLKFrequency:
 541              	.LFB241:
 313:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 542              	 .loc 1 313 0
 543              	 .cfi_startproc
 544              	 
 545              	 
 546              	.LVL69:
 547 0000 10B5     	 push {r4,lr}
 548              	.LCFI5:
 549              	 .cfi_def_cfa_offset 8
 550              	 .cfi_offset 4,-8
 551              	 .cfi_offset 14,-4
 313:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 552              	 .loc 1 313 0
 553 0002 0446     	 mov r4,r0
 314:../Libraries/XMCLib/src/xmc_usic.c **** 
 554              	 .loc 1 314 0
 555 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 556              	.LVL70:
 317:../Libraries/XMCLib/src/xmc_usic.c ****   {
 557              	 .loc 1 317 0
 558 0008 2369     	 ldr r3,[r4,#16]
 559 000a 03F44043 	 and r3,r3,#49152
 560 000e B3F5004F 	 cmp r3,#32768
 320:../Libraries/XMCLib/src/xmc_usic.c ****   }
 561              	 .loc 1 320 0
 562 0012 2369     	 ldr r3,[r4,#16]
 563 0014 07EE900A 	 fmsr s15,r0
 564 0018 C3F30903 	 ubfx r3,r3,#0,#10
 565 001c 08BF     	 it eq
 566 001e C3F58063 	 rsbeq r3,r3,#1024
 567 0022 B8EE677A 	 fuitos s14,s15
 568 0026 09BF     	 itett eq
 569 0028 07EE903A 	 fmsreq s15,r3
 325:../Libraries/XMCLib/src/xmc_usic.c ****   }
 570              	 .loc 1 325 0
 571 002c 07EE903A 	 fmsrne s15,r3
 320:../Libraries/XMCLib/src/xmc_usic.c ****   }
 572              	 .loc 1 320 0
 573 0030 F8EEE77A 	 fsitoseq s15,s15
 574 0034 F7EE006A 	 fconstseq s13,#112
 575 0038 0BBF     	 itete eq
 576 003a C6EEA77A 	 fdivseq s15,s13,s15
 325:../Libraries/XMCLib/src/xmc_usic.c ****   }
 577              	 .loc 1 325 0
 578 003e FAEECB7A 	 vcvtne.f32.s32 s15,s15,#10
 320:../Libraries/XMCLib/src/xmc_usic.c ****   }
 579              	 .loc 1 320 0
 580 0042 67EE277A 	 fmulseq s15,s14,s15
 325:../Libraries/XMCLib/src/xmc_usic.c ****   }
 581              	 .loc 1 325 0
 582 0046 C7EE277A 	 fdivsne s15,s14,s15
 583              	.LVL71:
 328:../Libraries/XMCLib/src/xmc_usic.c **** 
 584              	 .loc 1 328 0
 585 004a B6EE007A 	 fconsts s14,#96
 586 004e 67EE877A 	 fmuls s15,s15,s14
 587              	.LVL72:
 331:../Libraries/XMCLib/src/xmc_usic.c **** 
 588              	 .loc 1 331 0
 589 0052 FCEEE77A 	 ftouizs s15,s15
 590              	.LVL73:
 591 0056 17EE900A 	 fmrs r0,s15
 592              	.LVL74:
 593 005a 10BD     	 pop {r4,pc}
 594              	 .cfi_endproc
 595              	.LFE241:
 597              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 598              	 .align 1
 599              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 600              	 .thumb
 601              	 .thumb_func
 603              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 604              	.LFB242:
 338:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 605              	 .loc 1 338 0
 606              	 .cfi_startproc
 607              	 
 608              	 
 609              	.LVL75:
 610 0000 10B5     	 push {r4,lr}
 611              	.LCFI6:
 612              	 .cfi_def_cfa_offset 8
 613              	 .cfi_offset 4,-8
 614              	 .cfi_offset 14,-4
 615              	.LBB6:
 616              	.LBB7:
 617              	 .file 2 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_usic.h"
   1:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-05-07
   4:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  90:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
  92:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  94:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  95:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  96:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  97:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  98:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
  99:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 100:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 101:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 102:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 103:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 104:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 105:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 106:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 107:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 108:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 109:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 110:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 111:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 112:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 113:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 114:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 115:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 116:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 117:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 118:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 119:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 120:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 121:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 122:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 123:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 124:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 125:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 126:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 127:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 128:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 129:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 130:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 131:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 132:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 133:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 134:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 135:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 136:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 137:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 138:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 139:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 140:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 141:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 142:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 143:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 144:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 145:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 146:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 147:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 148:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 149:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 150:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 151:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 152:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 153:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 154:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 155:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 156:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 157:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 158:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 159:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 160:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 161:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 162:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 163:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 164:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 167:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 168:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 169:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 170:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 171:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 172:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 173:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 174:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 175:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 176:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 177:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 178:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 179:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 180:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 181:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 182:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 183:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 185:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 186:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 187:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 188:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 189:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 190:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 191:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 192:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 193:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 194:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 195:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 196:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 197:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 198:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 199:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 200:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 201:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 202:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 203:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 204:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 205:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 206:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 207:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 208:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 209:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 210:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 211:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 212:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 213:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 214:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 215:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 216:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 217:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 218:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 219:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 220:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 221:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 222:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 223:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 224:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 225:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 226:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 227:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 228:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 231:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 233:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 235:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 236:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 237:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 238:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 239:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 240:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 241:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 242:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 243:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 244:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 245:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 246:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 247:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 248:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 249:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 250:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 251:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 252:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 253:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 254:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 255:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 256:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 257:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 258:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 259:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 260:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 261:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 262:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 263:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 264:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 265:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 266:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 267:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 268:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 269:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 270:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 271:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 272:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 273:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 274:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 275:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 276:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 277:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 278:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 279:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 280:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 281:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 282:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 283:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 284:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 285:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 286:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 287:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 288:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 289:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 290:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 291:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 292:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 293:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 294:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 295:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 296:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 297:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 298:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 299:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 300:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 301:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 302:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 303:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 304:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 305:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 306:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 307:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 308:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 309:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 310:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 311:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 312:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 313:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 314:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 315:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 316:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 317:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 318:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 319:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 320:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 321:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 322:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 323:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 324:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 325:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 326:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 327:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 328:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 329:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 330:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 331:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 332:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 333:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 334:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 335:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 336:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 337:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 338:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 339:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 340:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 341:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 342:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 343:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 344:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 345:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 346:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 347:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 348:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 349:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 350:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 351:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 352:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 353:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 354:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 355:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 356:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 357:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 358:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 359:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 360:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 361:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 362:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 363:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 364:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 365:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 366:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 367:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 368:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 369:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 370:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 371:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 372:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 373:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 374:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 375:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 376:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 377:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 378:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 379:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 380:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 381:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 382:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 383:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 384:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 385:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 386:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 387:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 388:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 389:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 390:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 391:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 392:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 393:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 394:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 395:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 396:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 397:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 398:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 399:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 400:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 401:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 402:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 403:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 404:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 405:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 406:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 407:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 408:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 409:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 410:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 411:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 412:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 413:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 414:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 415:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 416:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 417:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 418:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 419:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 420:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 421:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 422:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 423:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 424:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 425:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 426:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 427:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 428:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 429:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 430:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 431:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 432:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 433:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 434:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 435:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 436:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 437:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 438:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 439:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 440:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 441:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 442:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 443:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 444:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 445:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 446:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 447:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 448:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 449:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 450:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 451:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 452:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 453:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 454:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 455:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 456:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 457:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 458:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 459:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 460:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 461:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 462:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 463:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 464:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 465:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 466:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 467:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 468:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 469:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 471:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 472:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 473:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 474:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 475:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 476:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 477:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 478:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 479:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 480:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 481:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 482:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 483:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 484:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 485:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 486:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 487:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 488:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 489:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 490:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 491:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 492:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 493:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 494:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 495:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 496:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 497:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 498:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 499:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 500:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 501:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 502:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 503:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 504:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 505:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 506:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 507:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 508:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 509:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   };
 510:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 511:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 512:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 514:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 515:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 516:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 517:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 518:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 519:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   };
 520:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 521:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 522:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 523:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 524:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 525:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 526:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 527:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 528:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 529:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 530:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 531:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 532:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 533:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 534:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 535:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 536:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 537:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 538:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 539:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 540:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 541:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 542:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 543:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 544:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 545:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 546:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 547:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 548:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 549:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 550:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 551:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 552:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 553:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 554:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 555:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 556:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 557:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 558:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 559:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 560:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 561:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 562:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 563:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 564:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 565:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 566:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 567:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 568:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 569:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 571:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 572:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 573:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 575:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 576:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 577:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 578:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 579:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 580:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 581:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 582:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 583:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 584:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 586:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 587:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 588:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 590:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 591:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 592:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 593:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 594:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 595:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 596:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 597:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 598:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 599:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 600:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 601:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 602:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 603:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 604:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 605:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 606:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 607:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 608:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 609:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 610:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 611:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 612:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 613:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 614:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 615:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 616:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 617:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 618:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 619:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 620:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 621:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 622:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 623:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 624:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 625:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 626:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 627:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 628:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 629:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 630:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 631:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 632:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 633:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 634:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 635:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 636:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 637:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 639:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 640:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 641:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 642:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 643:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 644:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 645:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 646:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 647:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 648:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 649:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 650:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 651:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 652:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 653:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 654:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 655:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 656:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 657:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 658:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 659:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 660:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 661:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 662:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 663:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 664:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 665:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 666:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 667:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 668:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 669:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 670:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 673:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 674:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 675:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 676:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 677:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 678:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 679:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 680:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 681:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 682:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 683:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 684:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 685:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 686:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 687:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 688:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 689:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 690:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_
 691:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 692:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 693:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 694:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 695:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 696:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 697:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 698:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 699:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 700:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 701:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 702:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 703:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 704:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 705:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 706:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 707:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 708:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 709:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 710:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 711:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 712:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 713:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 714:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 715:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 716:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 717:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 719:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 720:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 721:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 722:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 723:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 724:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 725:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 726:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 727:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 728:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 729:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 730:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 731:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 732:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 733:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 734:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 735:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 736:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 737:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 738:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 739:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 740:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 741:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 742:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 743:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 744:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 745:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 746:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 747:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 748:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 749:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 750:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 751:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 752:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 753:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 754:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 755:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 756:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 757:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 758:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 759:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 760:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 761:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 762:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 763:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 764:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 765:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 766:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 767:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 768:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 769:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 770:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 771:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 772:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 773:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 774:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 775:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 776:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 777:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 778:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 779:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 780:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 781:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 783:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 784:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 785:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 786:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 787:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 788:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 789:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 790:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 791:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 792:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 793:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 795:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 796:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 797:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 798:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 799:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 800:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 801:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 802:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 803:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 804:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 805:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 806:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 807:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 808:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 809:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 810:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 811:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 812:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 813:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 814:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 815:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 816:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 817:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 818:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 819:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 820:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 821:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 822:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 823:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 824:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 825:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 826:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 827:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 828:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 829:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 830:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 831:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 832:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 833:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 834:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 835:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 836:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 837:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 839:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 841:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 842:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 843:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 844:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 845:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 846:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 847:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 848:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 849:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 850:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 851:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 852:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 853:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 854:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 855:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 856:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 858:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 859:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 860:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 861:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 862:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 863:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 864:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 865:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 866:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 867:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 868:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 869:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 870:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 871:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 872:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 873:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 875:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 876:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 877:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 878:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 879:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 880:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 881:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 882:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 883:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 884:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 885:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 886:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 887:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 888:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 889:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 890:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 893:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 895:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 896:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 897:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 898:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 899:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 900:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 901:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 902:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 903:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 904:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 905:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 906:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 907:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 908:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 909:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 910:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 911:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 912:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 913:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 914:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 915:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 916:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 917:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 918:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 919:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 920:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 921:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 922:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 923:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 924:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 925:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 926:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 927:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 928:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 929:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 930:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 931:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 932:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 933:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 934:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 935:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 936:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 937:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 938:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 939:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 940:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 941:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 942:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 943:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 944:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 945:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 946:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 947:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 948:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 949:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 950:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 951:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 952:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 953:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 954:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 955:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 956:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 957:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 958:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 959:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 960:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 961:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 962:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 963:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 964:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 965:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 966:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 967:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 968:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 969:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 970:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 971:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 972:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 973:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 974:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 975:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 976:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 977:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 978:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 979:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 980:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 981:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 982:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 984:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 985:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 986:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 987:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 988:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 989:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 990:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 991:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 992:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 993:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 994:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 995:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 996:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 997:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 998:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 999:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1000:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1001:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
1002:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1003:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1004:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1006:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1007:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
1008:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1009:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1010:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1011:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
1012:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1013:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1014:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
1016:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
1017:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1018:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1019:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1020:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1024:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1026:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1027:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
1028:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1029:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
1030:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 618              	 .loc 2 1030 0
 619 0002 4469     	 ldr r4,[r0,#20]
 620 0004 24F00304 	 bic r4,r4,#3
 621 0008 44F00204 	 orr r4,r4,#2
 622 000c 4461     	 str r4,[r0,#20]
 623              	.LVL76:
 624              	.LBE7:
 625              	.LBE6:
 626              	.LBB8:
 627              	.LBB9:
1012:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 628              	 .loc 2 1012 0
 629 000e 046A     	 ldr r4,[r0,#32]
 630 0010 24F44064 	 bic r4,r4,#3072
 631 0014 44EA8323 	 orr r3,r4,r3,lsl#10
 632              	.LVL77:
 633 0018 0362     	 str r3,[r0,#32]
 634              	.LBE9:
 635              	.LBE8:
 349:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 636              	 .loc 1 349 0
 637 001a 4469     	 ldr r4,[r0,#20]
 638 001c 044B     	 ldr r3,.L47
 354:../Libraries/XMCLib/src/xmc_usic.c **** }
 639              	 .loc 1 354 0
 640 001e 0139     	 subs r1,r1,#1
 641              	.LVL78:
 353:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 642              	 .loc 1 353 0
 643 0020 013A     	 subs r2,r2,#1
 644              	.LVL79:
 354:../Libraries/XMCLib/src/xmc_usic.c **** }
 645              	 .loc 1 354 0
 646 0022 0904     	 lsls r1,r1,#16
 647 0024 41EA8222 	 orr r2,r1,r2,lsl#10
 648              	.LVL80:
 349:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 649              	 .loc 1 349 0
 650 0028 2340     	 ands r3,r3,r4
 353:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 651              	 .loc 1 353 0
 652 002a 1343     	 orrs r3,r3,r2
 349:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 653              	 .loc 1 349 0
 654 002c 4361     	 str r3,[r0,#20]
 655 002e 10BD     	 pop {r4,pc}
 656              	.L48:
 657              	 .align 2
 658              	.L47:
 659 0030 EF8000FC 	 .word -67075857
 660              	 .cfi_endproc
 661              	.LFE242:
 663              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 664              	 .align 1
 665              	 .global XMC_USIC_CH_TXFIFO_Configure
 666              	 .thumb
 667              	 .thumb_func
 669              	XMC_USIC_CH_TXFIFO_Configure:
 670              	.LFB243:
 361:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 671              	 .loc 1 361 0
 672              	 .cfi_startproc
 673              	 
 674              	 
 675              	.LVL81:
 676 0000 30B5     	 push {r4,r5,lr}
 677              	.LCFI7:
 678              	 .cfi_def_cfa_offset 12
 679              	 .cfi_offset 4,-12
 680              	 .cfi_offset 5,-8
 681              	 .cfi_offset 14,-4
 363:../Libraries/XMCLib/src/xmc_usic.c **** 
 682              	 .loc 1 363 0
 683 0002 D0F80841 	 ldr r4,[r0,#264]
 684 0006 24F0E064 	 bic r4,r4,#117440512
 685 000a C0F80841 	 str r4,[r0,#264]
 370:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 686              	 .loc 1 370 0
 687 000e D0F80851 	 ldr r5,[r0,#264]
 688 0012 054C     	 ldr r4,.L50
 689 0014 2C40     	 ands r4,r4,r5
 690 0016 2143     	 orrs r1,r1,r4
 691              	.LVL82:
 692 0018 41EA0262 	 orr r2,r1,r2,lsl#24
 693              	.LVL83:
 372:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 694              	 .loc 1 372 0
 695 001c 42EA0323 	 orr r3,r2,r3,lsl#8
 696              	.LVL84:
 370:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 697              	 .loc 1 370 0
 698 0020 C0F80831 	 str r3,[r0,#264]
 699 0024 30BD     	 pop {r4,r5,pc}
 700              	.L51:
 701 0026 00BF     	 .align 2
 702              	.L50:
 703 0028 C0C0FFF8 	 .word -117456704
 704              	 .cfi_endproc
 705              	.LFE243:
 707              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 708              	 .align 1
 709              	 .global XMC_USIC_CH_RXFIFO_Configure
 710              	 .thumb
 711              	 .thumb_func
 713              	XMC_USIC_CH_RXFIFO_Configure:
 714              	.LFB244:
 383:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 715              	 .loc 1 383 0
 716              	 .cfi_startproc
 717              	 
 718              	 
 719              	.LVL85:
 720 0000 30B5     	 push {r4,r5,lr}
 721              	.LCFI8:
 722              	 .cfi_def_cfa_offset 12
 723              	 .cfi_offset 4,-12
 724              	 .cfi_offset 5,-8
 725              	 .cfi_offset 14,-4
 385:../Libraries/XMCLib/src/xmc_usic.c **** 
 726              	 .loc 1 385 0
 727 0002 D0F80C41 	 ldr r4,[r0,#268]
 728 0006 24F0E064 	 bic r4,r4,#117440512
 729 000a C0F80C41 	 str r4,[r0,#268]
 390:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 730              	 .loc 1 390 0
 731 000e D0F80C51 	 ldr r5,[r0,#268]
 732 0012 064C     	 ldr r4,.L53
 733 0014 2C40     	 ands r4,r4,r5
 734 0016 44F08054 	 orr r4,r4,#268435456
 735 001a 2143     	 orrs r1,r1,r4
 736              	.LVL86:
 737 001c 41EA0262 	 orr r2,r1,r2,lsl#24
 738              	.LVL87:
 739 0020 42EA0323 	 orr r3,r2,r3,lsl#8
 740              	.LVL88:
 741 0024 C0F80C31 	 str r3,[r0,#268]
 742 0028 30BD     	 pop {r4,r5,pc}
 743              	.L54:
 744 002a 00BF     	 .align 2
 745              	.L53:
 746 002c C0C0FFEF 	 .word -268451648
 747              	 .cfi_endproc
 748              	.LFE244:
 750              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 751              	 .align 1
 752              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 753              	 .thumb
 754              	 .thumb_func
 756              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 757              	.LFB245:
 402:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 758              	 .loc 1 402 0
 759              	 .cfi_startproc
 760              	 
 761              	 
 762              	 
 763              	.LVL89:
 404:../Libraries/XMCLib/src/xmc_usic.c **** 
 764              	 .loc 1 404 0
 765 0000 D0F80831 	 ldr r3,[r0,#264]
 766 0004 23F0E063 	 bic r3,r3,#117440512
 767 0008 C0F80831 	 str r3,[r0,#264]
 409:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 768              	 .loc 1 409 0
 769 000c D0F80831 	 ldr r3,[r0,#264]
 411:../Libraries/XMCLib/src/xmc_usic.c **** }
 770              	 .loc 1 411 0
 771 0010 0906     	 lsls r1,r1,#24
 772              	.LVL90:
 773 0012 41EA0222 	 orr r2,r1,r2,lsl#8
 774              	.LVL91:
 409:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 775              	 .loc 1 409 0
 776 0016 23F47C53 	 bic r3,r3,#16128
 777 001a 1343     	 orrs r3,r3,r2
 778 001c C0F80831 	 str r3,[r0,#264]
 779 0020 7047     	 bx lr
 780              	 .cfi_endproc
 781              	.LFE245:
 783              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 784              	 .align 1
 785              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 786              	 .thumb
 787              	 .thumb_func
 789              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 790              	.LFB246:
 417:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 791              	 .loc 1 417 0
 792              	 .cfi_startproc
 793              	 
 794              	 
 795              	 
 796              	.LVL92:
 419:../Libraries/XMCLib/src/xmc_usic.c **** 
 797              	 .loc 1 419 0
 798 0000 D0F80C31 	 ldr r3,[r0,#268]
 799 0004 23F0E063 	 bic r3,r3,#117440512
 800 0008 C0F80C31 	 str r3,[r0,#268]
 421:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 801              	 .loc 1 421 0
 802 000c D0F80C31 	 ldr r3,[r0,#268]
 423:../Libraries/XMCLib/src/xmc_usic.c **** }
 803              	 .loc 1 423 0
 804 0010 0906     	 lsls r1,r1,#24
 805              	.LVL93:
 806 0012 41EA0222 	 orr r2,r1,r2,lsl#8
 807              	.LVL94:
 421:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 808              	 .loc 1 421 0
 809 0016 23F47C53 	 bic r3,r3,#16128
 810 001a 1343     	 orrs r3,r3,r2
 811 001c C0F80C31 	 str r3,[r0,#268]
 812 0020 7047     	 bx lr
 813              	 .cfi_endproc
 814              	.LFE246:
 816              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 817              	 .align 1
 818              	 .global XMC_USIC_CH_SetInterruptNodePointer
 819              	 .thumb
 820              	 .thumb_func
 822              	XMC_USIC_CH_SetInterruptNodePointer:
 823              	.LFB247:
 429:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 824              	 .loc 1 429 0
 825              	 .cfi_startproc
 826              	 
 827              	 
 828              	.LVL95:
 829 0000 10B5     	 push {r4,lr}
 830              	.LCFI9:
 831              	 .cfi_def_cfa_offset 8
 832              	 .cfi_offset 4,-8
 833              	 .cfi_offset 14,-4
 430:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 834              	 .loc 1 430 0
 835 0002 0723     	 movs r3,#7
 836 0004 8469     	 ldr r4,[r0,#24]
 837 0006 8B40     	 lsls r3,r3,r1
 838 0008 24EA0303 	 bic r3,r4,r3
 431:../Libraries/XMCLib/src/xmc_usic.c **** }
 839              	 .loc 1 431 0
 840 000c 8A40     	 lsls r2,r2,r1
 841              	.LVL96:
 430:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 842              	 .loc 1 430 0
 843 000e 1A43     	 orrs r2,r2,r3
 844 0010 8261     	 str r2,[r0,#24]
 845 0012 10BD     	 pop {r4,pc}
 846              	 .cfi_endproc
 847              	.LFE247:
 849              	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 850              	 .align 1
 851              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 852              	 .thumb
 853              	 .thumb_func
 855              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 856              	.LFB248:
 437:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 857              	 .loc 1 437 0
 858              	 .cfi_startproc
 859              	 
 860              	 
 861              	.LVL97:
 862 0000 10B5     	 push {r4,lr}
 863              	.LCFI10:
 864              	 .cfi_def_cfa_offset 8
 865              	 .cfi_offset 4,-8
 866              	 .cfi_offset 14,-4
 438:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 867              	 .loc 1 438 0
 868 0002 0723     	 movs r3,#7
 869 0004 D0F80841 	 ldr r4,[r0,#264]
 870 0008 8B40     	 lsls r3,r3,r1
 871 000a 24EA0303 	 bic r3,r4,r3
 439:../Libraries/XMCLib/src/xmc_usic.c **** }
 872              	 .loc 1 439 0
 873 000e 8A40     	 lsls r2,r2,r1
 874              	.LVL98:
 438:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 875              	 .loc 1 438 0
 876 0010 1A43     	 orrs r2,r2,r3
 877 0012 C0F80821 	 str r2,[r0,#264]
 878 0016 10BD     	 pop {r4,pc}
 879              	 .cfi_endproc
 880              	.LFE248:
 882              	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 883              	 .align 1
 884              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 885              	 .thumb
 886              	 .thumb_func
 888              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 889              	.LFB249:
 445:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 890              	 .loc 1 445 0
 891              	 .cfi_startproc
 892              	 
 893              	 
 894              	.LVL99:
 895 0000 10B5     	 push {r4,lr}
 896              	.LCFI11:
 897              	 .cfi_def_cfa_offset 8
 898              	 .cfi_offset 4,-8
 899              	 .cfi_offset 14,-4
 446:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 900              	 .loc 1 446 0
 901 0002 0723     	 movs r3,#7
 902 0004 D0F80C41 	 ldr r4,[r0,#268]
 903 0008 8B40     	 lsls r3,r3,r1
 904 000a 24EA0303 	 bic r3,r4,r3
 447:../Libraries/XMCLib/src/xmc_usic.c **** }
 905              	 .loc 1 447 0
 906 000e 8A40     	 lsls r2,r2,r1
 907              	.LVL100:
 446:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 908              	 .loc 1 446 0
 909 0010 1A43     	 orrs r2,r2,r3
 910 0012 C0F80C21 	 str r2,[r0,#268]
 911 0016 10BD     	 pop {r4,pc}
 912              	 .cfi_endproc
 913              	.LFE249:
 915              	 .section .text.XMC_USIC_Enable,"ax",%progbits
 916              	 .align 1
 917              	 .global XMC_USIC_Enable
 918              	 .thumb
 919              	 .thumb_func
 921              	XMC_USIC_Enable:
 922              	.LFB250:
 451:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 923              	 .loc 1 451 0
 924              	 .cfi_startproc
 925              	 
 926              	 
 927              	.LVL101:
 928 0000 08B5     	 push {r3,lr}
 929              	.LCFI12:
 930              	 .cfi_def_cfa_offset 8
 931              	 .cfi_offset 3,-8
 932              	 .cfi_offset 14,-4
 452:../Libraries/XMCLib/src/xmc_usic.c ****   {
 933              	 .loc 1 452 0
 934 0002 104B     	 ldr r3,.L69
 935 0004 9842     	 cmp r0,r3
 936 0006 0AD1     	 bne .L61
 459:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 937              	 .loc 1 459 0
 938 0008 4FF40060 	 mov r0,#2048
 939              	.LVL102:
 940 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 941              	.LVL103:
 942              	.L62:
 460:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 943              	 .loc 1 460 0 discriminator 1
 944 0010 4FF40060 	 mov r0,#2048
 945 0014 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 946              	.LVL104:
 947 0018 0028     	 cmp r0,#0
 948 001a F9D1     	 bne .L62
 949 001c 08BD     	 pop {r3,pc}
 950              	.LVL105:
 951              	.L61:
 464:../Libraries/XMCLib/src/xmc_usic.c ****   {
 952              	 .loc 1 464 0
 953 001e 0A4B     	 ldr r3,.L69+4
 954 0020 9842     	 cmp r0,r3
 955 0022 03D1     	 bne .L64
 956              	 .loc 1 493 0
 957 0024 BDE80840 	 pop {r3,lr}
 958              	.LCFI13:
 959              	 .cfi_remember_state
 960              	 .cfi_restore 14
 961              	 .cfi_restore 3
 962              	 .cfi_def_cfa_offset 0
 963 0028 FFF7FEBF 	 b XMC_USIC_Enable.part.0
 964              	.LVL106:
 965              	.L64:
 966              	.LCFI14:
 967              	 .cfi_restore_state
 477:../Libraries/XMCLib/src/xmc_usic.c ****   {
 968              	 .loc 1 477 0
 969 002c 074B     	 ldr r3,.L69+8
 970 002e 9842     	 cmp r0,r3
 971 0030 07D1     	 bne .L60
 484:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 972              	 .loc 1 484 0
 973 0032 0748     	 ldr r0,.L69+12
 974              	.LVL107:
 975 0034 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 976              	.LVL108:
 977              	.L66:
 485:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 978              	 .loc 1 485 0 discriminator 1
 979 0038 0548     	 ldr r0,.L69+12
 980 003a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 981              	.LVL109:
 982 003e 0028     	 cmp r0,#0
 983 0040 FAD1     	 bne .L66
 984              	.L60:
 985 0042 08BD     	 pop {r3,pc}
 986              	.L70:
 987              	 .align 2
 988              	.L69:
 989 0044 08000340 	 .word 1073938440
 990 0048 08000248 	 .word 1208090632
 991 004c 08400248 	 .word 1208107016
 992 0050 00010010 	 .word 268435712
 993              	 .cfi_endproc
 994              	.LFE250:
 996              	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 997              	 .align 1
 998              	 .global XMC_USIC_CH_Enable
 999              	 .thumb
 1000              	 .thumb_func
 1002              	XMC_USIC_CH_Enable:
 1003              	.LFB235:
  91:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
 1004              	 .loc 1 91 0
 1005              	 .cfi_startproc
 1006              	 
 1007              	 
 1008              	.LVL110:
  94:../Libraries/XMCLib/src/xmc_usic.c ****   {
 1009              	 .loc 1 94 0
 1010 0000 144B     	 ldr r3,.L82
 1011 0002 9842     	 cmp r0,r3
  91:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
 1012              	 .loc 1 91 0
 1013 0004 10B5     	 push {r4,lr}
 1014              	.LCFI15:
 1015              	 .cfi_def_cfa_offset 8
 1016              	 .cfi_offset 4,-8
 1017              	 .cfi_offset 14,-4
  91:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
 1018              	 .loc 1 91 0
 1019 0006 0446     	 mov r4,r0
  94:../Libraries/XMCLib/src/xmc_usic.c ****   {
 1020              	 .loc 1 94 0
 1021 0008 03D0     	 beq .L72
  94:../Libraries/XMCLib/src/xmc_usic.c ****   {
 1022              	 .loc 1 94 0 is_stmt 0 discriminator 1
 1023 000a 03F50073 	 add r3,r3,#512
 1024 000e 9842     	 cmp r0,r3
 1025 0010 01D1     	 bne .L73
 1026              	.L72:
  96:../Libraries/XMCLib/src/xmc_usic.c ****   }
 1027              	 .loc 1 96 0 is_stmt 1
 1028 0012 1148     	 ldr r0,.L82+4
 1029              	.LVL111:
 1030 0014 11E0     	 b .L81
 1031              	.LVL112:
 1032              	.L73:
  99:../Libraries/XMCLib/src/xmc_usic.c ****   {
 1033              	 .loc 1 99 0
 1034 0016 114B     	 ldr r3,.L82+8
 1035 0018 9842     	 cmp r0,r3
 1036 001a 03D0     	 beq .L75
  99:../Libraries/XMCLib/src/xmc_usic.c ****   {
 1037              	 .loc 1 99 0 is_stmt 0 discriminator 1
 1038 001c 03F50073 	 add r3,r3,#512
 1039 0020 9842     	 cmp r0,r3
 1040 0022 02D1     	 bne .L76
 1041              	.L75:
 1042              	.LVL113:
 1043              	.LBB12:
 1044              	.LBB13:
 1045 0024 FFF7FEFF 	 bl XMC_USIC_Enable.part.0
 1046              	.LVL114:
 1047 0028 09E0     	 b .L74
 1048              	.LVL115:
 1049              	.L76:
 1050              	.LBE13:
 1051              	.LBE12:
 105:../Libraries/XMCLib/src/xmc_usic.c ****   {
 1052              	 .loc 1 105 0 is_stmt 1
 1053 002a 0D4B     	 ldr r3,.L82+12
 1054 002c 9842     	 cmp r0,r3
 1055 002e 03D0     	 beq .L77
 105:../Libraries/XMCLib/src/xmc_usic.c ****   {
 1056              	 .loc 1 105 0 is_stmt 0 discriminator 1
 1057 0030 03F50073 	 add r3,r3,#512
 1058 0034 9842     	 cmp r0,r3
 1059 0036 02D1     	 bne .L74
 1060              	.L77:
 107:../Libraries/XMCLib/src/xmc_usic.c ****   }
 1061              	 .loc 1 107 0 is_stmt 1
 1062 0038 0A48     	 ldr r0,.L82+16
 1063              	.LVL116:
 1064              	.L81:
 1065 003a FFF7FEFF 	 bl XMC_USIC_Enable
 1066              	.LVL117:
 1067              	.L74:
 116:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 1068              	 .loc 1 116 0
 1069 003e 0323     	 movs r3,#3
 1070 0040 E360     	 str r3,[r4,#12]
 1071              	.L78:
 117:../Libraries/XMCLib/src/xmc_usic.c ****   {
 1072              	 .loc 1 117 0 discriminator 1
 1073 0042 E368     	 ldr r3,[r4,#12]
 1074 0044 DB07     	 lsls r3,r3,#31
 1075 0046 FCD5     	 bpl .L78
 123:../Libraries/XMCLib/src/xmc_usic.c **** }
 1076              	 .loc 1 123 0
 1077 0048 236C     	 ldr r3,[r4,#64]
 1078 004a 23F00F03 	 bic r3,r3,#15
 1079 004e 2364     	 str r3,[r4,#64]
 1080 0050 10BD     	 pop {r4,pc}
 1081              	.LVL118:
 1082              	.L83:
 1083 0052 00BF     	 .align 2
 1084              	.L82:
 1085 0054 00000340 	 .word 1073938432
 1086 0058 08000340 	 .word 1073938440
 1087 005c 00000248 	 .word 1208090624
 1088 0060 00400248 	 .word 1208107008
 1089 0064 08400248 	 .word 1208107016
 1090              	 .cfi_endproc
 1091              	.LFE235:
 1093              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1094              	 .align 1
 1095              	 .global XMC_USIC_Disable
 1096              	 .thumb
 1097              	 .thumb_func
 1099              	XMC_USIC_Disable:
 1100              	.LFB251:
 494:../Libraries/XMCLib/src/xmc_usic.c **** 
 495:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 496:../Libraries/XMCLib/src/xmc_usic.c **** {
 1101              	 .loc 1 496 0
 1102              	 .cfi_startproc
 1103              	 
 1104              	 
 1105              	 
 1106              	.LVL119:
 497:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1107              	 .loc 1 497 0
 1108 0000 084B     	 ldr r3,.L89
 1109 0002 9842     	 cmp r0,r3
 1110 0004 02D1     	 bne .L85
 498:../Libraries/XMCLib/src/xmc_usic.c ****   {
 499:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 500:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1111              	 .loc 1 500 0
 1112 0006 4FF40060 	 mov r0,#2048
 1113              	.LVL120:
 1114 000a 08E0     	 b .L88
 1115              	.LVL121:
 1116              	.L85:
 501:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 502:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 503:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 504:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 505:../Libraries/XMCLib/src/xmc_usic.c ****   }
 506:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 507:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 1117              	 .loc 1 507 0
 1118 000c 064B     	 ldr r3,.L89+4
 1119 000e 9842     	 cmp r0,r3
 1120 0010 01D1     	 bne .L86
 508:../Libraries/XMCLib/src/xmc_usic.c ****   {
 509:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 510:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1121              	 .loc 1 510 0
 1122 0012 0648     	 ldr r0,.L89+8
 1123              	.LVL122:
 1124 0014 03E0     	 b .L88
 1125              	.LVL123:
 1126              	.L86:
 511:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 512:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 513:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 514:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 515:../Libraries/XMCLib/src/xmc_usic.c ****   }
 516:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 517:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 518:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 1127              	 .loc 1 518 0
 1128 0016 064B     	 ldr r3,.L89+12
 1129 0018 9842     	 cmp r0,r3
 1130 001a 02D1     	 bne .L84
 519:../Libraries/XMCLib/src/xmc_usic.c ****   {
 520:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 521:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1131              	 .loc 1 521 0
 1132 001c 0548     	 ldr r0,.L89+16
 1133              	.LVL124:
 1134              	.L88:
 1135 001e FFF7FEBF 	 b XMC_SCU_RESET_AssertPeripheralReset
 1136              	.LVL125:
 1137              	.L84:
 1138 0022 7047     	 bx lr
 1139              	.L90:
 1140              	 .align 2
 1141              	.L89:
 1142 0024 08000340 	 .word 1073938440
 1143 0028 08000248 	 .word 1208090632
 1144 002c 80000010 	 .word 268435584
 1145 0030 08400248 	 .word 1208107016
 1146 0034 00010010 	 .word 268435712
 1147              	 .cfi_endproc
 1148              	.LFE251:
 1150              	 .text
 1151              	.Letext0:
 1152              	 .file 3 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1153              	 .file 4 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1154              	 .file 5 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1155              	 .file 6 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc4_scu.h"
 1156              	 .file 7 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include/core_cm4.h"
 1157              	 .file 8 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 1158              	 .file 9 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:20     .text.XMC_USIC_Enable.part.0:00000000 $t
    {standard input}:24     .text.XMC_USIC_Enable.part.0:00000000 XMC_USIC_Enable.part.0
    {standard input}:53     .text.XMC_USIC_Enable.part.0:00000014 $d
    {standard input}:58     .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:63     .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:81     .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:86     .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:197    .text.XMC_USIC_CH_SetBaudrate:00000078 $d
    {standard input}:202    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:207    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:329    .text.XMC_USIC_CH_SetBaudrateEx:0000008c $d
    {standard input}:334    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:339    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:455    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:460    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:535    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:540    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:598    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:603    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:659    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000030 $d
    {standard input}:664    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:669    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:703    .text.XMC_USIC_CH_TXFIFO_Configure:00000028 $d
    {standard input}:708    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:713    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:746    .text.XMC_USIC_CH_RXFIFO_Configure:0000002c $d
    {standard input}:751    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:756    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:784    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:789    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:817    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:822    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:850    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:855    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:883    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:888    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:916    .text.XMC_USIC_Enable:00000000 $t
    {standard input}:921    .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:989    .text.XMC_USIC_Enable:00000044 $d
    {standard input}:997    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:1002   .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1085   .text.XMC_USIC_CH_Enable:00000054 $d
    {standard input}:1094   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1099   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1142   .text.XMC_USIC_Disable:00000024 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.ca5ae67a873a4952d630d8e4120b9e3e
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fe7d912fc917043c98742c35eddd8cff
                           .group:00000000 wm4.config.h.216.aad1ef7bee4fb69981cb38ce62f84d9c
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.4e89a3f145accdcb1100c37260c088e6
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.xmc_device.h.65.5c0d35eb1a6853ff8300ab2ec1b944b0
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.57f124f9262f3dbf77da6a6506ffb430
                           .group:00000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:00000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1500.3eca65ed9ba7f90e09c1ffcb0b3f5724
                           .group:00000000 wm4.xmc_common.h.98.806f17e888fd51d0e4be2ad115163551
                           .group:00000000 wm4.xmc_usic.h.134.9712f83499eef353e90ec1876381b81e
                           .group:00000000 wm4.xmc4_usic_map.h.58.c72ca24cddd51bff3428962310391fa9
                           .group:00000000 wm4.xmc4_scu.h.90.f49c0839764a6c1240876a5f2e586200
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.fe81d5186f74ee22c982a1a79f340ee8

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_SCU_RESET_AssertPeripheralReset
