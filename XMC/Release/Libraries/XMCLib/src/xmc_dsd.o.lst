   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_dsd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DSD_Enable,"ax",%progbits
  20              	 .align 1
  21              	 .global XMC_DSD_Enable
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_DSD_Enable:
  26              	.LFB192:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_dsd.c"
   1:../Libraries/XMCLib/src/xmc_dsd.c **** /**
   2:../Libraries/XMCLib/src/xmc_dsd.c ****  * @file xmc_dsd.c
   3:../Libraries/XMCLib/src/xmc_dsd.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_dsd.c ****  *
   5:../Libraries/XMCLib/src/xmc_dsd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_dsd.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_dsd.c ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_dsd.c ****  *
   9:../Libraries/XMCLib/src/xmc_dsd.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_dsd.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_dsd.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_dsd.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_dsd.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_dsd.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_dsd.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_dsd.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_dsd.c ****  * 
  18:../Libraries/XMCLib/src/xmc_dsd.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_dsd.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_dsd.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_dsd.c ****  * 
  22:../Libraries/XMCLib/src/xmc_dsd.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_dsd.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_dsd.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_dsd.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_dsd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_dsd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_dsd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_dsd.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_dsd.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_dsd.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_dsd.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_dsd.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_dsd.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_dsd.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_dsd.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_dsd.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_dsd.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_dsd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_dsd.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_dsd.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_dsd.c ****  *
  43:../Libraries/XMCLib/src/xmc_dsd.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_dsd.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_dsd.c ****  *
  46:../Libraries/XMCLib/src/xmc_dsd.c ****  * 2015-03-30:
  47:../Libraries/XMCLib/src/xmc_dsd.c ****  *     - Initial version
  48:../Libraries/XMCLib/src/xmc_dsd.c ****  *      
  49:../Libraries/XMCLib/src/xmc_dsd.c ****  * 2015-06-19:
  50:../Libraries/XMCLib/src/xmc_dsd.c ****  *     - Removed GetDriverVersion API <BR>
  51:../Libraries/XMCLib/src/xmc_dsd.c ****  * 
  52:../Libraries/XMCLib/src/xmc_dsd.c ****  * 2015-09-18:
  53:../Libraries/XMCLib/src/xmc_dsd.c ****  *     - Support added for XMC4800 microcontroller family <BR>
  54:../Libraries/XMCLib/src/xmc_dsd.c ****  *
  55:../Libraries/XMCLib/src/xmc_dsd.c ****  * 2019-05-07:
  56:../Libraries/XMCLib/src/xmc_dsd.c ****  *     - Fixed compilation warnings
  57:../Libraries/XMCLib/src/xmc_dsd.c ****  *
  58:../Libraries/XMCLib/src/xmc_dsd.c ****  * @endcond 
  59:../Libraries/XMCLib/src/xmc_dsd.c ****  *
  60:../Libraries/XMCLib/src/xmc_dsd.c ****  */
  61:../Libraries/XMCLib/src/xmc_dsd.c **** 
  62:../Libraries/XMCLib/src/xmc_dsd.c **** /**************************************************************************************************
  63:../Libraries/XMCLib/src/xmc_dsd.c ****  * HEADER FILES
  64:../Libraries/XMCLib/src/xmc_dsd.c ****  **************************************************************************************************
  65:../Libraries/XMCLib/src/xmc_dsd.c **** #include "xmc_dsd.h"
  66:../Libraries/XMCLib/src/xmc_dsd.c **** 
  67:../Libraries/XMCLib/src/xmc_dsd.c **** #if defined(DSD)
  68:../Libraries/XMCLib/src/xmc_dsd.c **** 
  69:../Libraries/XMCLib/src/xmc_dsd.c **** /**************************************************************************************************
  70:../Libraries/XMCLib/src/xmc_dsd.c ****  * MACROS
  71:../Libraries/XMCLib/src/xmc_dsd.c ****  **************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_dsd.c **** 
  73:../Libraries/XMCLib/src/xmc_dsd.c **** #define XMC_DSD_MIN_FILTER_START  (4U)
  74:../Libraries/XMCLib/src/xmc_dsd.c **** #define XMC_DSD_MIN_DECIMATION_FACTOR (4U)
  75:../Libraries/XMCLib/src/xmc_dsd.c **** #define XMC_DSD_MAX_DECIMATION_FACTOR (256U)
  76:../Libraries/XMCLib/src/xmc_dsd.c **** #define XMC_DSD_MAX_DECIMATION_FACTOR_AUX (32U)
  77:../Libraries/XMCLib/src/xmc_dsd.c **** 
  78:../Libraries/XMCLib/src/xmc_dsd.c **** /**************************************************************************************************
  79:../Libraries/XMCLib/src/xmc_dsd.c ****  * API IMPLEMENTATION
  80:../Libraries/XMCLib/src/xmc_dsd.c ****  **************************************************************************************************
  81:../Libraries/XMCLib/src/xmc_dsd.c **** 
  82:../Libraries/XMCLib/src/xmc_dsd.c **** /*Enable the DSD Module*/
  83:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_Enable(XMC_DSD_t *const dsd)
  84:../Libraries/XMCLib/src/xmc_dsd.c **** {
  28              	 .loc 1 84 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  85:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_Enable:Invalid module pointer", XMC_DSD_CHECK_MODULE_PTR(dsd));
  86:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_UNUSED_ARG(dsd);
  87:../Libraries/XMCLib/src/xmc_dsd.c **** 
  88:../Libraries/XMCLib/src/xmc_dsd.c **** #if defined(CLOCK_GATING_SUPPORTED)
  89:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_DSD);
  90:../Libraries/XMCLib/src/xmc_dsd.c **** #endif
  91:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_DSD);
  34              	 .loc 1 91 0
  35 0000 0220     	 movs r0,#2
  36              	.LVL1:
  37 0002 FFF7FEBF 	 b XMC_SCU_RESET_DeassertPeripheralReset
  38              	.LVL2:
  39              	 .cfi_endproc
  40              	.LFE192:
  42              	 .section .text.XMC_DSD_Disable,"ax",%progbits
  43              	 .align 1
  44              	 .global XMC_DSD_Disable
  45              	 .thumb
  46              	 .thumb_func
  48              	XMC_DSD_Disable:
  49              	.LFB193:
  92:../Libraries/XMCLib/src/xmc_dsd.c **** }
  93:../Libraries/XMCLib/src/xmc_dsd.c **** 
  94:../Libraries/XMCLib/src/xmc_dsd.c **** /*Disable the DSD Module*/
  95:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_Disable(XMC_DSD_t *const dsd)
  96:../Libraries/XMCLib/src/xmc_dsd.c **** {
  50              	 .loc 1 96 0
  51              	 .cfi_startproc
  52              	 
  53              	 
  54              	 
  55              	.LVL3:
  97:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_Disable:Invalid module pointer", XMC_DSD_CHECK_MODULE_PTR(dsd));
  98:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_UNUSED_ARG(dsd);
  99:../Libraries/XMCLib/src/xmc_dsd.c **** 
 100:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_DSD);
  56              	 .loc 1 100 0
  57 0000 0220     	 movs r0,#2
  58              	.LVL4:
  59 0002 FFF7FEBF 	 b XMC_SCU_RESET_AssertPeripheralReset
  60              	.LVL5:
  61              	 .cfi_endproc
  62              	.LFE193:
  64              	 .section .text.XMC_DSD_EnableClock,"ax",%progbits
  65              	 .align 1
  66              	 .global XMC_DSD_EnableClock
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_DSD_EnableClock:
  71              	.LFB194:
 101:../Libraries/XMCLib/src/xmc_dsd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 102:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_DSD);
 103:../Libraries/XMCLib/src/xmc_dsd.c **** #endif
 104:../Libraries/XMCLib/src/xmc_dsd.c **** }
 105:../Libraries/XMCLib/src/xmc_dsd.c **** 
 106:../Libraries/XMCLib/src/xmc_dsd.c **** /* Enable the module clock*/
 107:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_EnableClock(XMC_DSD_t *const dsd)
 108:../Libraries/XMCLib/src/xmc_dsd.c **** {
  72              	 .loc 1 108 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77              	.LVL6:
 109:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_EnableClock:Invalid module pointer", XMC_DSD_CHECK_MODULE_PTR(dsd));
 110:../Libraries/XMCLib/src/xmc_dsd.c ****   /* Enable the module clock */
 111:../Libraries/XMCLib/src/xmc_dsd.c ****   dsd->CLC &= ~(uint32_t)DSD_CLC_DISR_Msk;
  78              	 .loc 1 111 0
  79 0000 0368     	 ldr r3,[r0]
  80 0002 23F00103 	 bic r3,r3,#1
  81 0006 0360     	 str r3,[r0]
 112:../Libraries/XMCLib/src/xmc_dsd.c ****   /* enable internal module clock */
 113:../Libraries/XMCLib/src/xmc_dsd.c ****   dsd ->GLOBCFG |= (uint32_t)0x01;
  82              	 .loc 1 113 0
  83 0008 D0F88030 	 ldr r3,[r0,#128]
  84 000c 43F00103 	 orr r3,r3,#1
  85 0010 C0F88030 	 str r3,[r0,#128]
  86 0014 7047     	 bx lr
  87              	 .cfi_endproc
  88              	.LFE194:
  90              	 .section .text.XMC_DSD_DisableClock,"ax",%progbits
  91              	 .align 1
  92              	 .global XMC_DSD_DisableClock
  93              	 .thumb
  94              	 .thumb_func
  96              	XMC_DSD_DisableClock:
  97              	.LFB195:
 114:../Libraries/XMCLib/src/xmc_dsd.c **** }
 115:../Libraries/XMCLib/src/xmc_dsd.c **** 
 116:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_DisableClock(XMC_DSD_t *const dsd)
 117:../Libraries/XMCLib/src/xmc_dsd.c **** {
  98              	 .loc 1 117 0
  99              	 .cfi_startproc
 100              	 
 101              	 
 102              	 
 103              	.LVL7:
 118:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_DisableClock:Invalid module pointer", XMC_DSD_CHECK_MODULE_PTR(dsd));
 119:../Libraries/XMCLib/src/xmc_dsd.c **** 
 120:../Libraries/XMCLib/src/xmc_dsd.c ****   /* disable internal module clock */
 121:../Libraries/XMCLib/src/xmc_dsd.c ****   dsd->GLOBCFG &= ~(uint32_t)DSD_GLOBCFG_MCSEL_Msk;
 104              	 .loc 1 121 0
 105 0000 D0F88030 	 ldr r3,[r0,#128]
 106 0004 23F00703 	 bic r3,r3,#7
 107 0008 C0F88030 	 str r3,[r0,#128]
 122:../Libraries/XMCLib/src/xmc_dsd.c **** 
 123:../Libraries/XMCLib/src/xmc_dsd.c ****   /* stop the module clock */
 124:../Libraries/XMCLib/src/xmc_dsd.c ****   dsd->CLC |= (uint32_t)DSD_CLC_DISR_Msk;
 108              	 .loc 1 124 0
 109 000c 0368     	 ldr r3,[r0]
 110 000e 43F00103 	 orr r3,r3,#1
 111 0012 0360     	 str r3,[r0]
 112 0014 7047     	 bx lr
 113              	 .cfi_endproc
 114              	.LFE195:
 116              	 .section .text.XMC_DSD_Init,"ax",%progbits
 117              	 .align 1
 118              	 .global XMC_DSD_Init
 119              	 .thumb
 120              	 .thumb_func
 122              	XMC_DSD_Init:
 123              	.LFB196:
 125:../Libraries/XMCLib/src/xmc_dsd.c **** 
 126:../Libraries/XMCLib/src/xmc_dsd.c **** }
 127:../Libraries/XMCLib/src/xmc_dsd.c **** 
 128:../Libraries/XMCLib/src/xmc_dsd.c **** /* Enable the DSD module and clock */
 129:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_Init(XMC_DSD_t *const dsd)
 130:../Libraries/XMCLib/src/xmc_dsd.c **** {
 124              	 .loc 1 130 0
 125              	 .cfi_startproc
 126              	 
 127              	 
 128              	.LVL8:
 129 0000 10B5     	 push {r4,lr}
 130              	.LCFI0:
 131              	 .cfi_def_cfa_offset 8
 132              	 .cfi_offset 4,-8
 133              	 .cfi_offset 14,-4
 134              	 .loc 1 130 0
 135 0002 0446     	 mov r4,r0
 136              	.LVL9:
 137              	.LBB4:
 138              	.LBB5:
  91:../Libraries/XMCLib/src/xmc_dsd.c **** }
 139              	 .loc 1 91 0
 140 0004 0220     	 movs r0,#2
 141              	.LVL10:
 142 0006 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 143              	.LVL11:
 144              	.LBE5:
 145              	.LBE4:
 131:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_Init:Invalid module pointer", XMC_DSD_CHECK_MODULE_PTR(dsd));
 132:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_DSD_Enable(dsd);
 133:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_DSD_EnableClock(dsd);
 146              	 .loc 1 133 0
 147 000a 2046     	 mov r0,r4
 134:../Libraries/XMCLib/src/xmc_dsd.c **** }
 148              	 .loc 1 134 0
 149 000c BDE81040 	 pop {r4,lr}
 150              	.LCFI1:
 151              	 .cfi_restore 14
 152              	 .cfi_restore 4
 153              	 .cfi_def_cfa_offset 0
 154              	.LVL12:
 133:../Libraries/XMCLib/src/xmc_dsd.c **** }
 155              	 .loc 1 133 0
 156 0010 FFF7FEBF 	 b XMC_DSD_EnableClock
 157              	.LVL13:
 158              	 .cfi_endproc
 159              	.LFE196:
 161              	 .section .text.XMC_DSD_IsEnabled,"ax",%progbits
 162              	 .align 1
 163              	 .global XMC_DSD_IsEnabled
 164              	 .thumb
 165              	 .thumb_func
 167              	XMC_DSD_IsEnabled:
 168              	.LFB197:
 135:../Libraries/XMCLib/src/xmc_dsd.c **** 
 136:../Libraries/XMCLib/src/xmc_dsd.c **** bool XMC_DSD_IsEnabled(XMC_DSD_t *const dsd)
 137:../Libraries/XMCLib/src/xmc_dsd.c **** {
 169              	 .loc 1 137 0
 170              	 .cfi_startproc
 171              	 
 172              	 
 173              	.LVL14:
 174 0000 08B5     	 push {r3,lr}
 175              	.LCFI2:
 176              	 .cfi_def_cfa_offset 8
 177              	 .cfi_offset 3,-8
 178              	 .cfi_offset 14,-4
 138:../Libraries/XMCLib/src/xmc_dsd.c ****   bool status;
 139:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_Disable:Invalid module pointer", XMC_DSD_CHECK_MODULE_PTR(dsd));
 140:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_UNUSED_ARG(dsd);
 141:../Libraries/XMCLib/src/xmc_dsd.c ****   
 142:../Libraries/XMCLib/src/xmc_dsd.c ****   #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC48)||(UC_SERIES == XMC47))
 143:../Libraries/XMCLib/src/xmc_dsd.c ****   if(XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_DSD) == false) 
 144:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 145:../Libraries/XMCLib/src/xmc_dsd.c ****     if(XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_DSD) == false)
 146:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 147:../Libraries/XMCLib/src/xmc_dsd.c ****       status = true;
 148:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 149:../Libraries/XMCLib/src/xmc_dsd.c **** 	else
 150:../Libraries/XMCLib/src/xmc_dsd.c **** 	{
 151:../Libraries/XMCLib/src/xmc_dsd.c ****       status = false;
 152:../Libraries/XMCLib/src/xmc_dsd.c **** 	}
 153:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 154:../Libraries/XMCLib/src/xmc_dsd.c ****   else
 155:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 156:../Libraries/XMCLib/src/xmc_dsd.c ****     status = false;
 157:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 158:../Libraries/XMCLib/src/xmc_dsd.c ****   #else
 159:../Libraries/XMCLib/src/xmc_dsd.c ****   if(XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_DSD) == false)
 179              	 .loc 1 159 0
 180 0002 0220     	 movs r0,#2
 181              	.LVL15:
 182 0004 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 183              	.LVL16:
 184 0008 80F00100 	 eor r0,r0,#1
 185              	.LVL17:
 160:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 161:../Libraries/XMCLib/src/xmc_dsd.c ****     status = true;
 162:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 163:../Libraries/XMCLib/src/xmc_dsd.c ****   else
 164:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 165:../Libraries/XMCLib/src/xmc_dsd.c ****     status = false;
 166:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 167:../Libraries/XMCLib/src/xmc_dsd.c ****   #endif
 168:../Libraries/XMCLib/src/xmc_dsd.c ****   
 169:../Libraries/XMCLib/src/xmc_dsd.c ****   return (status);
 170:../Libraries/XMCLib/src/xmc_dsd.c **** }
 186              	 .loc 1 170 0
 187 000c C0B2     	 uxtb r0,r0
 188 000e 08BD     	 pop {r3,pc}
 189              	 .cfi_endproc
 190              	.LFE197:
 192              	 .section .text.XMC_DSD_Generator_Init,"ax",%progbits
 193              	 .align 1
 194              	 .global XMC_DSD_Generator_Init
 195              	 .thumb
 196              	 .thumb_func
 198              	XMC_DSD_Generator_Init:
 199              	.LFB198:
 171:../Libraries/XMCLib/src/xmc_dsd.c **** 
 172:../Libraries/XMCLib/src/xmc_dsd.c **** /*Initializes the Waveform Generator*/
 173:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_Generator_Init(XMC_DSD_t *const dsd, const XMC_DSD_GENERATOR_CONFIG_t *const config)
 174:../Libraries/XMCLib/src/xmc_dsd.c **** {
 200              	 .loc 1 174 0
 201              	 .cfi_startproc
 202              	 
 203              	 
 204              	 
 205              	.LVL18:
 175:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_GENERATOR_Init:Invalid module pointer", XMC_DSD_CHECK_MODULE_PTR(dsd));
 176:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_GENERATOR_Init:NULL Pointer", (config != (XMC_DSD_GENERATOR_CONFIG_t *)NULL) 
 177:../Libraries/XMCLib/src/xmc_dsd.c ****   /* Reset Generator */
 178:../Libraries/XMCLib/src/xmc_dsd.c ****   dsd ->CGCFG &= ~((uint32_t)DSD_CGCFG_CGMOD_Msk | (uint32_t)DSD_CGCFG_BREV_Msk | (uint32_t)DSD_CGC
 206              	 .loc 1 178 0
 207 0000 D0F8A030 	 ldr r3,[r0,#160]
 208 0004 23F0FF03 	 bic r3,r3,#255
 209 0008 C0F8A030 	 str r3,[r0,#160]
 179:../Libraries/XMCLib/src/xmc_dsd.c **** 
 180:../Libraries/XMCLib/src/xmc_dsd.c ****   /* Generator configuration */
 181:../Libraries/XMCLib/src/xmc_dsd.c ****   dsd ->CGCFG = config->generator_conf;
 210              	 .loc 1 181 0
 211 000c 0B68     	 ldr r3,[r1]
 212 000e C0F8A030 	 str r3,[r0,#160]
 213 0012 7047     	 bx lr
 214              	 .cfi_endproc
 215              	.LFE198:
 217              	 .section .text.XMC_DSD_CH_MainFilter_Init,"ax",%progbits
 218              	 .align 1
 219              	 .global XMC_DSD_CH_MainFilter_Init
 220              	 .thumb
 221              	 .thumb_func
 223              	XMC_DSD_CH_MainFilter_Init:
 224              	.LFB200:
 182:../Libraries/XMCLib/src/xmc_dsd.c **** }
 183:../Libraries/XMCLib/src/xmc_dsd.c **** 
 184:../Libraries/XMCLib/src/xmc_dsd.c **** /* Initialize main filter,auxiliary filter,integrator, rectifier and timestamp of DSD*/
 185:../Libraries/XMCLib/src/xmc_dsd.c **** XMC_DSD_STATUS_t XMC_DSD_CH_Init( XMC_DSD_CH_t *const channel, const XMC_DSD_CH_CONFIG_t *const con
 186:../Libraries/XMCLib/src/xmc_dsd.c **** {
 187:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_DSD_STATUS_t status;
 188:../Libraries/XMCLib/src/xmc_dsd.c **** 
 189:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_CH_Init:Invalid module pointer", XMC_DSD_CHECK_CHANNEL_PTR(channel));
 190:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_CH_Init:NULL Pointer", (config != (XMC_DSD_CH_CONFIG_t *)NULL) );
 191:../Libraries/XMCLib/src/xmc_dsd.c **** 
 192:../Libraries/XMCLib/src/xmc_dsd.c ****   if (config->filter != (XMC_DSD_CH_FILTER_CONFIG_t*)NULL)
 193:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 194:../Libraries/XMCLib/src/xmc_dsd.c ****     XMC_DSD_CH_MainFilter_Init(channel, config->filter);
 195:../Libraries/XMCLib/src/xmc_dsd.c **** 
 196:../Libraries/XMCLib/src/xmc_dsd.c ****     if (config->aux != (XMC_DSD_CH_AUX_FILTER_CONFIG_t*)NULL)
 197:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 198:../Libraries/XMCLib/src/xmc_dsd.c ****       XMC_DSD_CH_AuxFilter_Init(channel, config->aux);
 199:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 200:../Libraries/XMCLib/src/xmc_dsd.c ****     if (config->integrator != (XMC_DSD_CH_INTEGRATOR_CONFIG_t*)NULL)
 201:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 202:../Libraries/XMCLib/src/xmc_dsd.c ****       XMC_DSD_CH_Integrator_Init(channel, config->integrator);
 203:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 204:../Libraries/XMCLib/src/xmc_dsd.c ****     if (config->rectify != (XMC_DSD_CH_RECTIFY_CONFIG_t*)NULL)
 205:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 206:../Libraries/XMCLib/src/xmc_dsd.c ****       XMC_DSD_CH_Rectify_Init(channel, config->rectify);
 207:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 208:../Libraries/XMCLib/src/xmc_dsd.c ****     if (config->timestamp != (XMC_DSD_CH_TIMESTAMP_CONFIG_t*)NULL)
 209:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 210:../Libraries/XMCLib/src/xmc_dsd.c ****       XMC_DSD_CH_Timestamp_Init(channel, config->timestamp);
 211:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 212:../Libraries/XMCLib/src/xmc_dsd.c ****     status =  XMC_DSD_STATUS_OK;
 213:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 214:../Libraries/XMCLib/src/xmc_dsd.c ****   else
 215:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 216:../Libraries/XMCLib/src/xmc_dsd.c ****     status =  XMC_DSD_STATUS_ERROR;
 217:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 218:../Libraries/XMCLib/src/xmc_dsd.c ****   return (status);
 219:../Libraries/XMCLib/src/xmc_dsd.c **** 
 220:../Libraries/XMCLib/src/xmc_dsd.c **** }
 221:../Libraries/XMCLib/src/xmc_dsd.c **** 
 222:../Libraries/XMCLib/src/xmc_dsd.c **** /* Initialize main filter of DSD */
 223:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_CH_MainFilter_Init(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_FILTER_CONFIG_t *cons
 224:../Libraries/XMCLib/src/xmc_dsd.c **** {
 225              	 .loc 1 224 0
 226              	 .cfi_startproc
 227              	 
 228              	 
 229              	 
 230              	.LVL19:
 225:../Libraries/XMCLib/src/xmc_dsd.c ****   uint32_t decimation_factor_temp;
 226:../Libraries/XMCLib/src/xmc_dsd.c ****   uint32_t filter_start_value_temp;
 227:../Libraries/XMCLib/src/xmc_dsd.c **** 
 228:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_MAIN_FILTER_Init:Invalid module pointer", XMC_DSD_CHECK_CHANNEL_PTR(channel))
 229:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_MAIN_FILTER_Init:NULL Pointer", (config != (XMC_DSD_CH_FILTER_CONFIG_t *)NULL
 230:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_MAIN_FILTER_Init:Invalid Filter Start Value", (config->filter_start_value >= 
 231:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_MAIN_FILTER_Init:Invalid Filter Start Value", (config->filter_start_value <= 
 232:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_MAIN_FILTER_Init:Invalid Decimation Factor",
 233:../Libraries/XMCLib/src/xmc_dsd.c ****       ((config->decimation_factor >= XMC_DSD_MIN_DECIMATION_FACTOR) && (config->decimation_factor <
 234:../Libraries/XMCLib/src/xmc_dsd.c **** 
 235:../Libraries/XMCLib/src/xmc_dsd.c ****   /*Set Channel frequency*/
 236:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->MODCFG = ((uint32_t)config->clock_divider << DSD_CH_MODCFG_DIVM_Pos) | (uint32_t)DSD_CH_
 231              	 .loc 1 236 0
 232 0000 0B78     	 ldrb r3,[r1]
 233 0002 03F00F03 	 and r3,r3,#15
 234 0006 1B04     	 lsls r3,r3,#16
 235 0008 43F40003 	 orr r3,r3,#8388608
 236 000c 0360     	 str r3,[r0]
 237:../Libraries/XMCLib/src/xmc_dsd.c **** 
 238:../Libraries/XMCLib/src/xmc_dsd.c ****   /* Input Data/Clk */
 239:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->DICFG = config->demodulator_conf | (uint32_t)DSD_CH_DICFG_DSWC_Msk | (uint32_t)DSD_CH_DI
 237              	 .loc 1 239 0
 238 000e 4B68     	 ldr r3,[r1,#4]
 239 0010 43F00043 	 orr r3,r3,#-2147483648
 240 0014 43F08003 	 orr r3,r3,#128
 241 0018 8360     	 str r3,[r0,#8]
 242              	.LVL20:
 243 001a 8B68     	 ldr r3,[r1,#8]
 244 001c 43F48062 	 orr r2,r3,#1024
 240:../Libraries/XMCLib/src/xmc_dsd.c **** 
 241:../Libraries/XMCLib/src/xmc_dsd.c ****   /*The decimation factor of the Main CIC filter is CFMDF + 1.*/
 242:../Libraries/XMCLib/src/xmc_dsd.c ****   decimation_factor_temp = config->decimation_factor-1U;
 245              	 .loc 1 242 0
 246 0020 CB68     	 ldr r3,[r1,#12]
 247 0022 013B     	 subs r3,r3,#1
 248              	.LVL21:
 249 0024 1A43     	 orrs r2,r2,r3
 243:../Libraries/XMCLib/src/xmc_dsd.c ****   filter_start_value_temp = config->filter_start_value-1U;
 250              	 .loc 1 243 0
 251 0026 0B69     	 ldr r3,[r1,#16]
 252              	.LVL22:
 253 0028 013B     	 subs r3,r3,#1
 254              	.LVL23:
 244:../Libraries/XMCLib/src/xmc_dsd.c **** 
 245:../Libraries/XMCLib/src/xmc_dsd.c ****   /* Filter setup*/
 246:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->FCFGC = (decimation_factor_temp |
 247:../Libraries/XMCLib/src/xmc_dsd.c **** 		  (filter_start_value_temp << (uint32_t)DSD_CH_FCFGC_CFMSV_Pos)|
 248:../Libraries/XMCLib/src/xmc_dsd.c **** 		  config->main_filter_conf|
 255              	 .loc 1 248 0
 256 002a 42EA0343 	 orr r3,r2,r3,lsl#16
 257              	.LVL24:
 246:../Libraries/XMCLib/src/xmc_dsd.c **** 		  (filter_start_value_temp << (uint32_t)DSD_CH_FCFGC_CFMSV_Pos)|
 258              	 .loc 1 246 0
 259 002e 4361     	 str r3,[r0,#20]
 260              	.LVL25:
 249:../Libraries/XMCLib/src/xmc_dsd.c **** 		  (uint32_t)DSD_CH_FCFGC_CFEN_Msk);
 250:../Libraries/XMCLib/src/xmc_dsd.c **** 
 251:../Libraries/XMCLib/src/xmc_dsd.c ****   /* Offset */
 252:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->OFFM = (uint16_t)config->offset;
 261              	 .loc 1 252 0
 262 0030 4B88     	 ldrh r3,[r1,#2]
 263 0032 8363     	 str r3,[r0,#56]
 264 0034 7047     	 bx lr
 265              	 .cfi_endproc
 266              	.LFE200:
 268              	 .section .text.XMC_DSD_CH_Timestamp_Init,"ax",%progbits
 269              	 .align 1
 270              	 .global XMC_DSD_CH_Timestamp_Init
 271              	 .thumb
 272              	 .thumb_func
 274              	XMC_DSD_CH_Timestamp_Init:
 275              	.LFB201:
 253:../Libraries/XMCLib/src/xmc_dsd.c **** }
 254:../Libraries/XMCLib/src/xmc_dsd.c **** 
 255:../Libraries/XMCLib/src/xmc_dsd.c **** /* Initialize timestamp mode of DSD */
 256:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_CH_Timestamp_Init(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_TIMESTAMP_CONFIG_t *co
 257:../Libraries/XMCLib/src/xmc_dsd.c **** {
 276              	 .loc 1 257 0
 277              	 .cfi_startproc
 278              	 
 279              	 
 280              	 
 281              	.LVL26:
 258:../Libraries/XMCLib/src/xmc_dsd.c ****   uint32_t temp;
 259:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_MAIN_FILTER_Init:Invalid module pointer", XMC_DSD_CHECK_CHANNEL_PTR(channel))
 260:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_MAIN_FILTER_Init:NULL Pointer", (config != (XMC_DSD_CH_TIMESTAMP_CONFIG_t *)N
 261:../Libraries/XMCLib/src/xmc_dsd.c **** 
 262:../Libraries/XMCLib/src/xmc_dsd.c ****   temp = (channel->DICFG | (uint32_t)DSD_CH_DICFG_TRWC_Msk);
 282              	 .loc 1 262 0
 283 0000 8368     	 ldr r3,[r0,#8]
 284              	.LVL27:
 285 0002 0A68     	 ldr r2,[r1]
 263:../Libraries/XMCLib/src/xmc_dsd.c ****   temp &= ~((uint32_t)DSD_CH_DICFG_TSTRMODE_Msk|(uint32_t)DSD_CH_DICFG_TRSEL_Msk);
 286              	 .loc 1 263 0
 287 0004 23F4F843 	 bic r3,r3,#31744
 288              	.LVL28:
 289 0008 42F40042 	 orr r2,r2,#32768
 264:../Libraries/XMCLib/src/xmc_dsd.c ****   temp |= config->timestamp_conf;
 290              	 .loc 1 264 0
 291 000c 1343     	 orrs r3,r3,r2
 292              	.LVL29:
 265:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->DICFG = temp;
 293              	 .loc 1 265 0
 294 000e 8360     	 str r3,[r0,#8]
 295 0010 7047     	 bx lr
 296              	 .cfi_endproc
 297              	.LFE201:
 299              	 .section .text.XMC_DSD_CH_AuxFilter_Init,"ax",%progbits
 300              	 .align 1
 301              	 .global XMC_DSD_CH_AuxFilter_Init
 302              	 .thumb
 303              	 .thumb_func
 305              	XMC_DSD_CH_AuxFilter_Init:
 306              	.LFB202:
 266:../Libraries/XMCLib/src/xmc_dsd.c **** }
 267:../Libraries/XMCLib/src/xmc_dsd.c **** 
 268:../Libraries/XMCLib/src/xmc_dsd.c **** /* Initialize auxiliary filter of DSD */
 269:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_CH_AuxFilter_Init(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_AUX_FILTER_CONFIG_t *c
 270:../Libraries/XMCLib/src/xmc_dsd.c **** {
 307              	 .loc 1 270 0
 308              	 .cfi_startproc
 309              	 
 310              	 
 311              	 
 312              	.LVL30:
 271:../Libraries/XMCLib/src/xmc_dsd.c ****   uint32_t decimation_factor_temp;
 272:../Libraries/XMCLib/src/xmc_dsd.c **** 
 273:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_AUX_FILTER_Init:Invalid module pointer", XMC_DSD_CHECK_CHANNEL_PTR(channel));
 274:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_AUX_FILTER_Init:NULL Pointer", (config != (XMC_DSD_CH_AUX_FILTER_CONFIG_t *)N
 275:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_AUX_FILTER_Init:Invalid Decimation Factor",
 276:../Libraries/XMCLib/src/xmc_dsd.c ****       ((config->decimation_factor >= XMC_DSD_MIN_DECIMATION_FACTOR) && (config->decimation_factor <
 277:../Libraries/XMCLib/src/xmc_dsd.c **** 
 278:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->BOUNDSEL = config->boundary_conf;
 313              	 .loc 1 278 0
 314 0000 4B68     	 ldr r3,[r1,#4]
 315 0002 8362     	 str r3,[r0,#40]
 316              	.LVL31:
 279:../Libraries/XMCLib/src/xmc_dsd.c ****   /*The decimation factor of the Aux CIC filter is CFMDF + 1.*/
 280:../Libraries/XMCLib/src/xmc_dsd.c ****   decimation_factor_temp = config->decimation_factor-1U;
 317              	 .loc 1 280 0
 318 0004 8B68     	 ldr r3,[r1,#8]
 319 0006 5A1E     	 subs r2,r3,#1
 320              	.LVL32:
 281:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->FCFGA = (decimation_factor_temp | config->aux_filter_conf);
 321              	 .loc 1 281 0
 322 0008 0B68     	 ldr r3,[r1]
 323 000a 1343     	 orrs r3,r3,r2
 324 000c 8361     	 str r3,[r0,#24]
 325 000e 7047     	 bx lr
 326              	 .cfi_endproc
 327              	.LFE202:
 329              	 .section .text.XMC_DSD_CH_Integrator_Init,"ax",%progbits
 330              	 .align 1
 331              	 .global XMC_DSD_CH_Integrator_Init
 332              	 .thumb
 333              	 .thumb_func
 335              	XMC_DSD_CH_Integrator_Init:
 336              	.LFB203:
 282:../Libraries/XMCLib/src/xmc_dsd.c **** }
 283:../Libraries/XMCLib/src/xmc_dsd.c **** 
 284:../Libraries/XMCLib/src/xmc_dsd.c **** /* Integrator initialization of DSD */
 285:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_CH_Integrator_Init(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_INTEGRATOR_CONFIG_t *
 286:../Libraries/XMCLib/src/xmc_dsd.c **** {
 337              	 .loc 1 286 0
 338              	 .cfi_startproc
 339              	 
 340              	 
 341              	.LVL33:
 287:../Libraries/XMCLib/src/xmc_dsd.c ****   uint32_t temp;
 288:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_INTEGRATOR_Init:Invalid module pointer", XMC_DSD_CHECK_CHANNEL_PTR(channel));
 289:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_INTEGRATOR_Init:NULL Pointer", (config != (XMC_DSD_CH_INTEGRATOR_CONFIG_t *)N
 290:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_INTEGRATOR_Init:Invalid integration_loop", (config->integration_loop > 0U ));
 291:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_INTEGRATOR_Init:Invalid counted_values", (config->counted_values > 0U ));
 292:../Libraries/XMCLib/src/xmc_dsd.c **** 
 293:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->IWCTR = ((config->integration_loop - 1U) << DSD_CH_IWCTR_REPVAL_Pos)
 294:../Libraries/XMCLib/src/xmc_dsd.c ****                    | (config->discarded_values << DSD_CH_IWCTR_NVALDIS_Pos)
 342              	 .loc 1 294 0
 343 0000 8B68     	 ldr r3,[r1,#8]
 295:../Libraries/XMCLib/src/xmc_dsd.c ****                    | (config->stop_condition << DSD_CH_IWCTR_IWS_Pos)
 344              	 .loc 1 295 0
 345 0002 CA68     	 ldr r2,[r1,#12]
 294:../Libraries/XMCLib/src/xmc_dsd.c ****                    | (config->stop_condition << DSD_CH_IWCTR_IWS_Pos)
 346              	 .loc 1 294 0
 347 0004 1B04     	 lsls r3,r3,#16
 286:../Libraries/XMCLib/src/xmc_dsd.c ****   uint32_t temp;
 348              	 .loc 1 286 0
 349 0006 10B5     	 push {r4,lr}
 350              	.LCFI3:
 351              	 .cfi_def_cfa_offset 8
 352              	 .cfi_offset 4,-8
 353              	 .cfi_offset 14,-4
 354 0008 43EAC254 	 orr r4,r3,r2,lsl#23
 293:../Libraries/XMCLib/src/xmc_dsd.c ****                    | (config->discarded_values << DSD_CH_IWCTR_NVALDIS_Pos)
 355              	 .loc 1 293 0
 356 000c 4B68     	 ldr r3,[r1,#4]
 357 000e 013B     	 subs r3,r3,#1
 358              	 .loc 1 295 0
 359 0010 44EA0332 	 orr r2,r4,r3,lsl#12
 296:../Libraries/XMCLib/src/xmc_dsd.c ****                    | ((config->counted_values - 1U) << DSD_CH_IWCTR_NVALINT_Pos);
 360              	 .loc 1 296 0
 361 0014 0B69     	 ldr r3,[r1,#16]
 362 0016 013B     	 subs r3,r3,#1
 363 0018 42EA0363 	 orr r3,r2,r3,lsl#24
 293:../Libraries/XMCLib/src/xmc_dsd.c ****                    | (config->discarded_values << DSD_CH_IWCTR_NVALDIS_Pos)
 364              	 .loc 1 293 0
 365 001c 0362     	 str r3,[r0,#32]
 297:../Libraries/XMCLib/src/xmc_dsd.c **** 
 298:../Libraries/XMCLib/src/xmc_dsd.c ****   /*To ensure proper operation, ensure that bit field ITRMODE is zero before selecting any other tr
 299:../Libraries/XMCLib/src/xmc_dsd.c ****   temp = (channel->DICFG & ~((uint32_t)DSD_CH_DICFG_ITRMODE_Msk|(uint32_t)DSD_CH_DICFG_TRSEL_Msk)) 
 366              	 .loc 1 299 0
 367 001e 8368     	 ldr r3,[r0,#8]
 368 0020 23F47343 	 bic r3,r3,#62208
 369 0024 43F40043 	 orr r3,r3,#32768
 370              	.LVL34:
 300:../Libraries/XMCLib/src/xmc_dsd.c **** 
 301:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->DICFG = temp;
 371              	 .loc 1 301 0
 372 0028 8360     	 str r3,[r0,#8]
 302:../Libraries/XMCLib/src/xmc_dsd.c **** 
 303:../Libraries/XMCLib/src/xmc_dsd.c ****   temp |=  config->integrator_trigger;
 373              	 .loc 1 303 0
 374 002a 0A68     	 ldr r2,[r1]
 375 002c 1343     	 orrs r3,r3,r2
 376              	.LVL35:
 304:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->DICFG = temp;
 377              	 .loc 1 304 0
 378 002e 8360     	 str r3,[r0,#8]
 379 0030 10BD     	 pop {r4,pc}
 380              	 .cfi_endproc
 381              	.LFE203:
 383              	 .section .text.XMC_DSD_CH_Rectify_Init,"ax",%progbits
 384              	 .align 1
 385              	 .global XMC_DSD_CH_Rectify_Init
 386              	 .thumb
 387              	 .thumb_func
 389              	XMC_DSD_CH_Rectify_Init:
 390              	.LFB204:
 305:../Libraries/XMCLib/src/xmc_dsd.c **** }
 306:../Libraries/XMCLib/src/xmc_dsd.c **** 
 307:../Libraries/XMCLib/src/xmc_dsd.c **** /* Rectifier initialization of DSD */
 308:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_CH_Rectify_Init(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_RECTIFY_CONFIG_t *const 
 309:../Libraries/XMCLib/src/xmc_dsd.c **** {
 391              	 .loc 1 309 0
 392              	 .cfi_startproc
 393              	 
 394              	 
 395              	 
 396              	.LVL36:
 310:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_RECTIFY_Init:Invalid module pointer", XMC_DSD_CHECK_CHANNEL_PTR(channel));
 311:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_RECTIFY_Init:NULL Pointer", (config != (XMC_DSD_CH_RECTIFY_CONFIG_t *)NULL));
 312:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_ASSERT("XMC_DSD_RECTIFY_Init:NULL Pointer", (((uint16_t)config->delay + (uint16_t)config->hal
 313:../Libraries/XMCLib/src/xmc_dsd.c **** 
 314:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->RECTCFG = config->rectify_config | (uint32_t)DSD_CH_RECTCFG_RFEN_Msk;
 397              	 .loc 1 314 0
 398 0000 0B68     	 ldr r3,[r1]
 399 0002 43F00103 	 orr r3,r3,#1
 400 0006 C0F8A830 	 str r3,[r0,#168]
 315:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->CGSYNC = (((uint32_t) config->delay << (uint32_t)DSD_CH_CGSYNC_SDPOS_Pos)
 401              	 .loc 1 315 0
 402 000a 0B79     	 ldrb r3,[r1,#4]
 316:../Libraries/XMCLib/src/xmc_dsd.c ****                       | (((uint32_t)config->delay + (uint32_t)config->half_cycle) << (uint32_t)DSD_
 403              	 .loc 1 316 0
 404 000c 4A79     	 ldrb r2,[r1,#5]
 405 000e 1A44     	 add r2,r2,r3
 315:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->CGSYNC = (((uint32_t) config->delay << (uint32_t)DSD_CH_CGSYNC_SDPOS_Pos)
 406              	 .loc 1 315 0
 407 0010 1B04     	 lsls r3,r3,#16
 408              	 .loc 1 316 0
 409 0012 43EA0263 	 orr r3,r3,r2,lsl#24
 315:../Libraries/XMCLib/src/xmc_dsd.c ****   channel->CGSYNC = (((uint32_t) config->delay << (uint32_t)DSD_CH_CGSYNC_SDPOS_Pos)
 410              	 .loc 1 315 0
 411 0016 C0F8A030 	 str r3,[r0,#160]
 412 001a 7047     	 bx lr
 413              	 .cfi_endproc
 414              	.LFE204:
 416              	 .section .text.XMC_DSD_CH_Init,"ax",%progbits
 417              	 .align 1
 418              	 .global XMC_DSD_CH_Init
 419              	 .thumb
 420              	 .thumb_func
 422              	XMC_DSD_CH_Init:
 423              	.LFB199:
 186:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_DSD_STATUS_t status;
 424              	 .loc 1 186 0
 425              	 .cfi_startproc
 426              	 
 427              	 
 428              	.LVL37:
 429 0000 38B5     	 push {r3,r4,r5,lr}
 430              	.LCFI4:
 431              	 .cfi_def_cfa_offset 16
 432              	 .cfi_offset 3,-16
 433              	 .cfi_offset 4,-12
 434              	 .cfi_offset 5,-8
 435              	 .cfi_offset 14,-4
 186:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_DSD_STATUS_t status;
 436              	 .loc 1 186 0
 437 0002 0C46     	 mov r4,r1
 192:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 438              	 .loc 1 192 0
 439 0004 0968     	 ldr r1,[r1]
 440              	.LVL38:
 186:../Libraries/XMCLib/src/xmc_dsd.c ****   XMC_DSD_STATUS_t status;
 441              	 .loc 1 186 0
 442 0006 0546     	 mov r5,r0
 192:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 443              	 .loc 1 192 0
 444 0008 B9B1     	 cbz r1,.L18
 194:../Libraries/XMCLib/src/xmc_dsd.c **** 
 445              	 .loc 1 194 0
 446 000a FFF7FEFF 	 bl XMC_DSD_CH_MainFilter_Init
 447              	.LVL39:
 196:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 448              	 .loc 1 196 0
 449 000e E168     	 ldr r1,[r4,#12]
 450 0010 11B1     	 cbz r1,.L15
 198:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 451              	 .loc 1 198 0
 452 0012 2846     	 mov r0,r5
 453 0014 FFF7FEFF 	 bl XMC_DSD_CH_AuxFilter_Init
 454              	.LVL40:
 455              	.L15:
 200:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 456              	 .loc 1 200 0
 457 0018 6168     	 ldr r1,[r4,#4]
 458 001a 11B1     	 cbz r1,.L16
 202:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 459              	 .loc 1 202 0
 460 001c 2846     	 mov r0,r5
 461 001e FFF7FEFF 	 bl XMC_DSD_CH_Integrator_Init
 462              	.LVL41:
 463              	.L16:
 204:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 464              	 .loc 1 204 0
 465 0022 2169     	 ldr r1,[r4,#16]
 466 0024 11B1     	 cbz r1,.L17
 206:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 467              	 .loc 1 206 0
 468 0026 2846     	 mov r0,r5
 469 0028 FFF7FEFF 	 bl XMC_DSD_CH_Rectify_Init
 470              	.LVL42:
 471              	.L17:
 208:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 472              	 .loc 1 208 0
 473 002c A168     	 ldr r1,[r4,#8]
 474 002e 11B1     	 cbz r1,.L29
 210:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 475              	 .loc 1 210 0
 476 0030 2846     	 mov r0,r5
 477 0032 FFF7FEFF 	 bl XMC_DSD_CH_Timestamp_Init
 478              	.LVL43:
 479              	.L29:
 212:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 480              	 .loc 1 212 0
 481 0036 0020     	 movs r0,#0
 482 0038 38BD     	 pop {r3,r4,r5,pc}
 483              	.LVL44:
 484              	.L18:
 216:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 485              	 .loc 1 216 0
 486 003a 0120     	 movs r0,#1
 487              	.LVL45:
 488 003c 38BD     	 pop {r3,r4,r5,pc}
 489              	 .cfi_endproc
 490              	.LFE199:
 492              	 .section .text.XMC_DSD_CH_GetResult_TS,"ax",%progbits
 493              	 .align 1
 494              	 .global XMC_DSD_CH_GetResult_TS
 495              	 .thumb
 496              	 .thumb_func
 498              	XMC_DSD_CH_GetResult_TS:
 499              	.LFB205:
 317:../Libraries/XMCLib/src/xmc_dsd.c **** }
 318:../Libraries/XMCLib/src/xmc_dsd.c **** 
 319:../Libraries/XMCLib/src/xmc_dsd.c **** /* API to get the result of the last conversion */
 320:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_CH_GetResult_TS(XMC_DSD_CH_t* const channel,
 321:../Libraries/XMCLib/src/xmc_dsd.c ****                              int16_t* dsd_result,
 322:../Libraries/XMCLib/src/xmc_dsd.c ****                              uint8_t* dsd_filter_count,
 323:../Libraries/XMCLib/src/xmc_dsd.c ****                              uint8_t* dsd_integration_count)
 324:../Libraries/XMCLib/src/xmc_dsd.c **** {
 500              	 .loc 1 324 0
 501              	 .cfi_startproc
 502              	 
 503              	 
 504              	 
 505              	.LVL46:
 325:../Libraries/XMCLib/src/xmc_dsd.c ****   uint32_t timestamp;
 326:../Libraries/XMCLib/src/xmc_dsd.c ****   uint16_t result;
 327:../Libraries/XMCLib/src/xmc_dsd.c **** 
 328:../Libraries/XMCLib/src/xmc_dsd.c ****   timestamp = channel->TSTMP;
 506              	 .loc 1 328 0
 507 0000 006D     	 ldr r0,[r0,#80]
 508              	.LVL47:
 329:../Libraries/XMCLib/src/xmc_dsd.c ****   result = (uint16_t)((uint32_t)timestamp & DSD_CH_TSTMP_RESULT_Msk);
 330:../Libraries/XMCLib/src/xmc_dsd.c ****   *dsd_result = (int16_t)(result);
 509              	 .loc 1 330 0
 510 0002 0880     	 strh r0,[r1]
 331:../Libraries/XMCLib/src/xmc_dsd.c ****   *dsd_filter_count = (uint8_t) ((timestamp & (uint32_t)DSD_CH_TSTMP_CFMDCNT_Msk)>>(uint32_t)DSD_CH
 511              	 .loc 1 331 0
 512 0004 C0F30741 	 ubfx r1,r0,#16,#8
 513              	.LVL48:
 332:../Libraries/XMCLib/src/xmc_dsd.c ****   *dsd_integration_count = (uint8_t) ((timestamp & (uint32_t)DSD_CH_TSTMP_NVALCNT_Msk)>>(uint32_t)D
 514              	 .loc 1 332 0
 515 0008 C0F30560 	 ubfx r0,r0,#24,#6
 516              	.LVL49:
 331:../Libraries/XMCLib/src/xmc_dsd.c ****   *dsd_filter_count = (uint8_t) ((timestamp & (uint32_t)DSD_CH_TSTMP_CFMDCNT_Msk)>>(uint32_t)DSD_CH
 517              	 .loc 1 331 0
 518 000c 1170     	 strb r1,[r2]
 519              	.LVL50:
 520              	 .loc 1 332 0
 521 000e 1870     	 strb r0,[r3]
 522 0010 7047     	 bx lr
 523              	 .cfi_endproc
 524              	.LFE205:
 526              	 .section .text.XMC_DSD_CH_GetResult_TS_Time,"ax",%progbits
 527              	 .align 1
 528              	 .global XMC_DSD_CH_GetResult_TS_Time
 529              	 .thumb
 530              	 .thumb_func
 532              	XMC_DSD_CH_GetResult_TS_Time:
 533              	.LFB206:
 333:../Libraries/XMCLib/src/xmc_dsd.c **** }
 334:../Libraries/XMCLib/src/xmc_dsd.c **** 
 335:../Libraries/XMCLib/src/xmc_dsd.c **** /* API to get the result of the last conversion with the time */
 336:../Libraries/XMCLib/src/xmc_dsd.c **** void XMC_DSD_CH_GetResult_TS_Time(XMC_DSD_CH_t* const channel, int16_t* dsd_Result, uint32_t* time)
 337:../Libraries/XMCLib/src/xmc_dsd.c **** {
 534              	 .loc 1 337 0
 535              	 .cfi_startproc
 536              	 
 537              	 
 538              	.LVL51:
 539 0000 70B5     	 push {r4,r5,r6,lr}
 540              	.LCFI5:
 541              	 .cfi_def_cfa_offset 16
 542              	 .cfi_offset 4,-16
 543              	 .cfi_offset 5,-12
 544              	 .cfi_offset 6,-8
 545              	 .cfi_offset 14,-4
 338:../Libraries/XMCLib/src/xmc_dsd.c ****   uint32_t timestamp;
 339:../Libraries/XMCLib/src/xmc_dsd.c ****   uint16_t filter_count;
 340:../Libraries/XMCLib/src/xmc_dsd.c ****   uint16_t integrator_count;
 341:../Libraries/XMCLib/src/xmc_dsd.c ****   uint16_t decimation;
 342:../Libraries/XMCLib/src/xmc_dsd.c ****   uint16_t result;
 343:../Libraries/XMCLib/src/xmc_dsd.c **** 
 344:../Libraries/XMCLib/src/xmc_dsd.c ****   timestamp = channel->TSTMP;
 546              	 .loc 1 344 0
 547 0002 056D     	 ldr r5,[r0,#80]
 548              	.LVL52:
 345:../Libraries/XMCLib/src/xmc_dsd.c ****   decimation = (uint16_t)(channel->FCFGC & DSD_CH_FCFGC_CFMDF_Msk);
 549              	 .loc 1 345 0
 550 0004 4369     	 ldr r3,[r0,#20]
 551 0006 DCB2     	 uxtb r4,r3
 552              	.LVL53:
 346:../Libraries/XMCLib/src/xmc_dsd.c ****   filter_count = (uint16_t)((timestamp & DSD_CH_TSTMP_CFMDCNT_Msk)>>DSD_CH_TSTMP_CFMDCNT_Pos);
 347:../Libraries/XMCLib/src/xmc_dsd.c **** 
 348:../Libraries/XMCLib/src/xmc_dsd.c ****   /* Integration enabled? */
 349:../Libraries/XMCLib/src/xmc_dsd.c ****   if ((channel->IWCTR & DSD_CH_IWCTR_INTEN_Msk))
 553              	 .loc 1 349 0
 554 0008 036A     	 ldr r3,[r0,#32]
 346:../Libraries/XMCLib/src/xmc_dsd.c ****   filter_count = (uint16_t)((timestamp & DSD_CH_TSTMP_CFMDCNT_Msk)>>DSD_CH_TSTMP_CFMDCNT_Pos);
 555              	 .loc 1 346 0
 556 000a C5F30746 	 ubfx r6,r5,#16,#8
 557              	.LVL54:
 558              	 .loc 1 349 0
 559 000e 13F0800F 	 tst r3,#128
 560 0012 A4EB0600 	 sub r0,r4,r6
 561              	.LVL55:
 562 0016 09D0     	 beq .L33
 350:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 351:../Libraries/XMCLib/src/xmc_dsd.c ****     integrator_count = (uint16_t) ((timestamp & DSD_CH_TSTMP_NVALCNT_Msk)>>DSD_CH_TSTMP_NVALCNT_Pos
 563              	 .loc 1 351 0
 564 0018 C5F30563 	 ubfx r3,r5,#24,#6
 565              	.LVL56:
 352:../Libraries/XMCLib/src/xmc_dsd.c **** 
 353:../Libraries/XMCLib/src/xmc_dsd.c ****     /*See Errata number: xxyy */
 354:../Libraries/XMCLib/src/xmc_dsd.c ****     if (filter_count == decimation)
 566              	 .loc 1 354 0
 567 001c A642     	 cmp r6,r4
 355:../Libraries/XMCLib/src/xmc_dsd.c ****     {
 356:../Libraries/XMCLib/src/xmc_dsd.c ****       integrator_count++;
 568              	 .loc 1 356 0
 569 001e 08BF     	 it eq
 570 0020 0133     	 addeq r3,r3,#1
 571              	.LVL57:
 357:../Libraries/XMCLib/src/xmc_dsd.c ****     }
 358:../Libraries/XMCLib/src/xmc_dsd.c ****     *time = (uint32_t)(((uint32_t) integrator_count * ((uint32_t) decimation + 1U)) + (uint32_t) ((
 572              	 .loc 1 358 0
 573 0022 04FB0333 	 mla r3,r4,r3,r3
 574              	.LVL58:
 575 0026 0344     	 add r3,r3,r0
 576 0028 1360     	 str r3,[r2]
 577 002a 00E0     	 b .L35
 578              	.LVL59:
 579              	.L33:
 359:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 360:../Libraries/XMCLib/src/xmc_dsd.c ****   else
 361:../Libraries/XMCLib/src/xmc_dsd.c ****   {
 362:../Libraries/XMCLib/src/xmc_dsd.c ****     *time = (uint32_t) ((uint32_t)decimation - filter_count);
 580              	 .loc 1 362 0
 581 002c 1060     	 str r0,[r2]
 582              	.L35:
 583              	.LVL60:
 363:../Libraries/XMCLib/src/xmc_dsd.c ****   }
 364:../Libraries/XMCLib/src/xmc_dsd.c ****   result = (uint16_t)((uint32_t)timestamp & DSD_CH_TSTMP_RESULT_Msk);
 365:../Libraries/XMCLib/src/xmc_dsd.c ****   *dsd_Result = (int16_t)(result);
 584              	 .loc 1 365 0
 585 002e 0D80     	 strh r5,[r1]
 586 0030 70BD     	 pop {r4,r5,r6,pc}
 587              	 .cfi_endproc
 588              	.LFE206:
 590              	 .text
 591              	.Letext0:
 592              	 .file 2 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 593              	 .file 3 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 594              	 .file 4 "G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 595              	 .file 5 "G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc4_scu.h"
 596              	 .file 6 "G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_dsd.h"
 597              	 .file 7 "G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include/core_cm4.h"
 598              	 .file 8 "G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dsd.c
    {standard input}:20     .text.XMC_DSD_Enable:00000000 $t
    {standard input}:25     .text.XMC_DSD_Enable:00000000 XMC_DSD_Enable
    {standard input}:43     .text.XMC_DSD_Disable:00000000 $t
    {standard input}:48     .text.XMC_DSD_Disable:00000000 XMC_DSD_Disable
    {standard input}:65     .text.XMC_DSD_EnableClock:00000000 $t
    {standard input}:70     .text.XMC_DSD_EnableClock:00000000 XMC_DSD_EnableClock
    {standard input}:91     .text.XMC_DSD_DisableClock:00000000 $t
    {standard input}:96     .text.XMC_DSD_DisableClock:00000000 XMC_DSD_DisableClock
    {standard input}:117    .text.XMC_DSD_Init:00000000 $t
    {standard input}:122    .text.XMC_DSD_Init:00000000 XMC_DSD_Init
    {standard input}:162    .text.XMC_DSD_IsEnabled:00000000 $t
    {standard input}:167    .text.XMC_DSD_IsEnabled:00000000 XMC_DSD_IsEnabled
    {standard input}:193    .text.XMC_DSD_Generator_Init:00000000 $t
    {standard input}:198    .text.XMC_DSD_Generator_Init:00000000 XMC_DSD_Generator_Init
    {standard input}:218    .text.XMC_DSD_CH_MainFilter_Init:00000000 $t
    {standard input}:223    .text.XMC_DSD_CH_MainFilter_Init:00000000 XMC_DSD_CH_MainFilter_Init
    {standard input}:269    .text.XMC_DSD_CH_Timestamp_Init:00000000 $t
    {standard input}:274    .text.XMC_DSD_CH_Timestamp_Init:00000000 XMC_DSD_CH_Timestamp_Init
    {standard input}:300    .text.XMC_DSD_CH_AuxFilter_Init:00000000 $t
    {standard input}:305    .text.XMC_DSD_CH_AuxFilter_Init:00000000 XMC_DSD_CH_AuxFilter_Init
    {standard input}:330    .text.XMC_DSD_CH_Integrator_Init:00000000 $t
    {standard input}:335    .text.XMC_DSD_CH_Integrator_Init:00000000 XMC_DSD_CH_Integrator_Init
    {standard input}:384    .text.XMC_DSD_CH_Rectify_Init:00000000 $t
    {standard input}:389    .text.XMC_DSD_CH_Rectify_Init:00000000 XMC_DSD_CH_Rectify_Init
    {standard input}:417    .text.XMC_DSD_CH_Init:00000000 $t
    {standard input}:422    .text.XMC_DSD_CH_Init:00000000 XMC_DSD_CH_Init
    {standard input}:493    .text.XMC_DSD_CH_GetResult_TS:00000000 $t
    {standard input}:498    .text.XMC_DSD_CH_GetResult_TS:00000000 XMC_DSD_CH_GetResult_TS
    {standard input}:527    .text.XMC_DSD_CH_GetResult_TS_Time:00000000 $t
    {standard input}:532    .text.XMC_DSD_CH_GetResult_TS_Time:00000000 XMC_DSD_CH_GetResult_TS_Time
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.ca5ae67a873a4952d630d8e4120b9e3e
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fe7d912fc917043c98742c35eddd8cff
                           .group:00000000 wm4.config.h.216.aad1ef7bee4fb69981cb38ce62f84d9c
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.4e89a3f145accdcb1100c37260c088e6
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.xmc_device.h.65.5c0d35eb1a6853ff8300ab2ec1b944b0
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.57f124f9262f3dbf77da6a6506ffb430
                           .group:00000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:00000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1500.3eca65ed9ba7f90e09c1ffcb0b3f5724
                           .group:00000000 wm4.xmc_common.h.98.806f17e888fd51d0e4be2ad115163551
                           .group:00000000 wm4.xmc4_scu.h.113.70a903f8782696023ba1d8628d8ac2d6
                           .group:00000000 wm4.xmc_dsd.h.106.3a5e861e5291229d9d1b433b8b378dc4

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
