   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_common.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_LIST_Init,"ax",%progbits
  20              	 .align 1
  21              	 .global XMC_LIST_Init
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_LIST_Init:
  26              	.LFB136:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_common.c"
   1:../Libraries/XMCLib/src/xmc_common.c **** /**
   2:../Libraries/XMCLib/src/xmc_common.c ****  * @file xmc_common.c
   3:../Libraries/XMCLib/src/xmc_common.c ****  * @date 2017-02-25
   4:../Libraries/XMCLib/src/xmc_common.c ****  *
   5:../Libraries/XMCLib/src/xmc_common.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_common.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_common.c ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_common.c ****  *
   9:../Libraries/XMCLib/src/xmc_common.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_common.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_common.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_common.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_common.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_common.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_common.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_common.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_common.c ****  * 
  18:../Libraries/XMCLib/src/xmc_common.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_common.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_common.c ****  * 
  21:../Libraries/XMCLib/src/xmc_common.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_common.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_common.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_common.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_common.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_common.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_common.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_common.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_common.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_common.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_common.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_common.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_common.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_common.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_common.c ****  *
  36:../Libraries/XMCLib/src/xmc_common.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_common.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_common.c ****  *
  39:../Libraries/XMCLib/src/xmc_common.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_common.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_common.c ****  *      
  42:../Libraries/XMCLib/src/xmc_common.c ****  * 2017-02-25:
  43:../Libraries/XMCLib/src/xmc_common.c ****  *     - Remove the need to define XMC_USER_ASSERT_FUNCTION
  44:../Libraries/XMCLib/src/xmc_common.c ****  *     - XMC_AssertHandler fixed compilation warnings
  45:../Libraries/XMCLib/src/xmc_common.c ****  *
  46:../Libraries/XMCLib/src/xmc_common.c ****  * @endcond 
  47:../Libraries/XMCLib/src/xmc_common.c ****  *
  48:../Libraries/XMCLib/src/xmc_common.c ****  */
  49:../Libraries/XMCLib/src/xmc_common.c **** 
  50:../Libraries/XMCLib/src/xmc_common.c **** #include "xmc_common.h"
  51:../Libraries/XMCLib/src/xmc_common.c **** 
  52:../Libraries/XMCLib/src/xmc_common.c **** /*******************************************************************************
  53:../Libraries/XMCLib/src/xmc_common.c ****  * DATA STRUCTURES
  54:../Libraries/XMCLib/src/xmc_common.c ****  *******************************************************************************/
  55:../Libraries/XMCLib/src/xmc_common.c **** struct list
  56:../Libraries/XMCLib/src/xmc_common.c **** {
  57:../Libraries/XMCLib/src/xmc_common.c ****   struct list *next;
  58:../Libraries/XMCLib/src/xmc_common.c **** };
  59:../Libraries/XMCLib/src/xmc_common.c **** 
  60:../Libraries/XMCLib/src/xmc_common.c **** /*******************************************************************************
  61:../Libraries/XMCLib/src/xmc_common.c ****  * API IMPLEMENTATION
  62:../Libraries/XMCLib/src/xmc_common.c ****  *******************************************************************************/
  63:../Libraries/XMCLib/src/xmc_common.c **** #if defined(XMC_ASSERT_ENABLE)
  64:../Libraries/XMCLib/src/xmc_common.c **** __WEAK void XMC_AssertHandler(const char *const msg, const char *const file, uint32_t line)
  65:../Libraries/XMCLib/src/xmc_common.c **** {
  66:../Libraries/XMCLib/src/xmc_common.c ****   XMC_UNUSED_ARG(msg);
  67:../Libraries/XMCLib/src/xmc_common.c ****   XMC_UNUSED_ARG(file);
  68:../Libraries/XMCLib/src/xmc_common.c ****   XMC_UNUSED_ARG(line);
  69:../Libraries/XMCLib/src/xmc_common.c **** 
  70:../Libraries/XMCLib/src/xmc_common.c ****   while(1)
  71:../Libraries/XMCLib/src/xmc_common.c ****   {
  72:../Libraries/XMCLib/src/xmc_common.c ****     /* Endless loop */
  73:../Libraries/XMCLib/src/xmc_common.c ****   }
  74:../Libraries/XMCLib/src/xmc_common.c **** }
  75:../Libraries/XMCLib/src/xmc_common.c **** #endif
  76:../Libraries/XMCLib/src/xmc_common.c **** 
  77:../Libraries/XMCLib/src/xmc_common.c **** void XMC_LIST_Init(XMC_LIST_t *list)
  78:../Libraries/XMCLib/src/xmc_common.c **** {
  28              	 .loc 1 78 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  79:../Libraries/XMCLib/src/xmc_common.c ****   *list = NULL;
  34              	 .loc 1 79 0
  35 0000 0023     	 movs r3,#0
  36 0002 0360     	 str r3,[r0]
  37 0004 7047     	 bx lr
  38              	 .cfi_endproc
  39              	.LFE136:
  41              	 .section .text.XMC_LIST_GetHead,"ax",%progbits
  42              	 .align 1
  43              	 .global XMC_LIST_GetHead
  44              	 .thumb
  45              	 .thumb_func
  47              	XMC_LIST_GetHead:
  48              	.LFB137:
  80:../Libraries/XMCLib/src/xmc_common.c **** }
  81:../Libraries/XMCLib/src/xmc_common.c **** 
  82:../Libraries/XMCLib/src/xmc_common.c **** void *XMC_LIST_GetHead(XMC_LIST_t *list)
  83:../Libraries/XMCLib/src/xmc_common.c **** {
  49              	 .loc 1 83 0
  50              	 .cfi_startproc
  51              	 
  52              	 
  53              	 
  54              	.LVL1:
  84:../Libraries/XMCLib/src/xmc_common.c ****   return *list;
  85:../Libraries/XMCLib/src/xmc_common.c **** }
  55              	 .loc 1 85 0
  56 0000 0068     	 ldr r0,[r0]
  57              	.LVL2:
  58 0002 7047     	 bx lr
  59              	 .cfi_endproc
  60              	.LFE137:
  62              	 .section .text.XMC_LIST_GetTail,"ax",%progbits
  63              	 .align 1
  64              	 .global XMC_LIST_GetTail
  65              	 .thumb
  66              	 .thumb_func
  68              	XMC_LIST_GetTail:
  69              	.LFB138:
  86:../Libraries/XMCLib/src/xmc_common.c **** 
  87:../Libraries/XMCLib/src/xmc_common.c **** void *XMC_LIST_GetTail(XMC_LIST_t *list)
  88:../Libraries/XMCLib/src/xmc_common.c **** {
  70              	 .loc 1 88 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74              	 
  75              	.LVL3:
  89:../Libraries/XMCLib/src/xmc_common.c ****   struct list *tail;
  90:../Libraries/XMCLib/src/xmc_common.c ****   
  91:../Libraries/XMCLib/src/xmc_common.c ****   if (*list == NULL) 
  76              	 .loc 1 91 0
  77 0000 0068     	 ldr r0,[r0]
  78              	.LVL4:
  79 0002 00B9     	 cbnz r0,.L5
  80 0004 7047     	 bx lr
  81              	.L5:
  82              	.LVL5:
  92:../Libraries/XMCLib/src/xmc_common.c ****   {
  93:../Libraries/XMCLib/src/xmc_common.c ****     tail = NULL;
  94:../Libraries/XMCLib/src/xmc_common.c ****   }
  95:../Libraries/XMCLib/src/xmc_common.c ****   else
  96:../Libraries/XMCLib/src/xmc_common.c ****   {
  97:../Libraries/XMCLib/src/xmc_common.c ****     for (tail = (struct list *)*list; tail->next != NULL; tail = tail->next)
  83              	 .loc 1 97 0 discriminator 1
  84 0006 0368     	 ldr r3,[r0]
  85 0008 0BB1     	 cbz r3,.L11
  86 000a 1846     	 mov r0,r3
  87              	.LVL6:
  88 000c FBE7     	 b .L5
  89              	.LVL7:
  90              	.L11:
  98:../Libraries/XMCLib/src/xmc_common.c ****     {
  99:../Libraries/XMCLib/src/xmc_common.c ****       /* Loop through the list */
 100:../Libraries/XMCLib/src/xmc_common.c ****     }  
 101:../Libraries/XMCLib/src/xmc_common.c ****   }
 102:../Libraries/XMCLib/src/xmc_common.c ****   
 103:../Libraries/XMCLib/src/xmc_common.c ****   return tail;    
 104:../Libraries/XMCLib/src/xmc_common.c **** }
  91              	 .loc 1 104 0
  92 000e 7047     	 bx lr
  93              	 .cfi_endproc
  94              	.LFE138:
  96              	 .section .text.XMC_LIST_Add,"ax",%progbits
  97              	 .align 1
  98              	 .global XMC_LIST_Add
  99              	 .thumb
 100              	 .thumb_func
 102              	XMC_LIST_Add:
 103              	.LFB139:
 105:../Libraries/XMCLib/src/xmc_common.c **** 
 106:../Libraries/XMCLib/src/xmc_common.c **** void XMC_LIST_Add(XMC_LIST_t *list, void *item)
 107:../Libraries/XMCLib/src/xmc_common.c **** {
 104              	 .loc 1 107 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108              	.LVL8:
 109 0000 38B5     	 push {r3,r4,r5,lr}
 110              	.LCFI0:
 111              	 .cfi_def_cfa_offset 16
 112              	 .cfi_offset 3,-16
 113              	 .cfi_offset 4,-12
 114              	 .cfi_offset 5,-8
 115              	 .cfi_offset 14,-4
 108:../Libraries/XMCLib/src/xmc_common.c ****   struct list *tail;
 109:../Libraries/XMCLib/src/xmc_common.c ****   
 110:../Libraries/XMCLib/src/xmc_common.c ****   ((struct list *)item)->next = NULL;
 116              	 .loc 1 110 0
 117 0002 0023     	 movs r3,#0
 118 0004 0B60     	 str r3,[r1]
 107:../Libraries/XMCLib/src/xmc_common.c ****   struct list *tail;
 119              	 .loc 1 107 0
 120 0006 0546     	 mov r5,r0
 121 0008 0C46     	 mov r4,r1
 111:../Libraries/XMCLib/src/xmc_common.c ****   tail = (struct list *)XMC_LIST_GetTail(list);
 122              	 .loc 1 111 0
 123 000a FFF7FEFF 	 bl XMC_LIST_GetTail
 124              	.LVL9:
 112:../Libraries/XMCLib/src/xmc_common.c ****   
 113:../Libraries/XMCLib/src/xmc_common.c ****   if (tail == NULL) 
 125              	 .loc 1 113 0
 126 000e 08B9     	 cbnz r0,.L13
 114:../Libraries/XMCLib/src/xmc_common.c ****   {
 115:../Libraries/XMCLib/src/xmc_common.c ****     *list = item;
 127              	 .loc 1 115 0
 128 0010 2C60     	 str r4,[r5]
 129 0012 38BD     	 pop {r3,r4,r5,pc}
 130              	.LVL10:
 131              	.L13:
 116:../Libraries/XMCLib/src/xmc_common.c ****   } 
 117:../Libraries/XMCLib/src/xmc_common.c ****   else 
 118:../Libraries/XMCLib/src/xmc_common.c ****   {
 119:../Libraries/XMCLib/src/xmc_common.c ****     tail->next = (struct list *)item;
 132              	 .loc 1 119 0
 133 0014 0460     	 str r4,[r0]
 134 0016 38BD     	 pop {r3,r4,r5,pc}
 135              	 .cfi_endproc
 136              	.LFE139:
 138              	 .section .text.XMC_LIST_Remove,"ax",%progbits
 139              	 .align 1
 140              	 .global XMC_LIST_Remove
 141              	 .thumb
 142              	 .thumb_func
 144              	XMC_LIST_Remove:
 145              	.LFB140:
 120:../Libraries/XMCLib/src/xmc_common.c ****   }
 121:../Libraries/XMCLib/src/xmc_common.c **** }
 122:../Libraries/XMCLib/src/xmc_common.c **** 
 123:../Libraries/XMCLib/src/xmc_common.c **** void XMC_LIST_Remove(XMC_LIST_t *list, void *item)
 124:../Libraries/XMCLib/src/xmc_common.c **** {
 146              	 .loc 1 124 0
 147              	 .cfi_startproc
 148              	 
 149              	 
 150              	.LVL11:
 125:../Libraries/XMCLib/src/xmc_common.c ****   struct list *right, *left;
 126:../Libraries/XMCLib/src/xmc_common.c ****   
 127:../Libraries/XMCLib/src/xmc_common.c ****   if (*list != NULL) 
 151              	 .loc 1 127 0
 152 0000 0368     	 ldr r3,[r0]
 124:../Libraries/XMCLib/src/xmc_common.c ****   struct list *right, *left;
 153              	 .loc 1 124 0
 154 0002 10B5     	 push {r4,lr}
 155              	.LCFI1:
 156              	 .cfi_def_cfa_offset 8
 157              	 .cfi_offset 4,-8
 158              	 .cfi_offset 14,-4
 159              	 .loc 1 127 0
 160 0004 7BB1     	 cbz r3,.L15
 161 0006 0022     	 movs r2,#0
 162              	.L20:
 163              	.LVL12:
 128:../Libraries/XMCLib/src/xmc_common.c ****   {
 129:../Libraries/XMCLib/src/xmc_common.c ****     left = NULL;
 130:../Libraries/XMCLib/src/xmc_common.c ****     for(right = (struct list *)*list; right != NULL; right = right->next)
 131:../Libraries/XMCLib/src/xmc_common.c ****     {
 132:../Libraries/XMCLib/src/xmc_common.c ****       if(right == item) 
 164              	 .loc 1 132 0
 165 0008 8B42     	 cmp r3,r1
 166 000a 07D1     	 bne .L17
 167 000c 0B68     	 ldr r3,[r1]
 168              	.LVL13:
 133:../Libraries/XMCLib/src/xmc_common.c ****       {
 134:../Libraries/XMCLib/src/xmc_common.c ****         if(left == NULL) 
 169              	 .loc 1 134 0
 170 000e 0AB9     	 cbnz r2,.L18
 135:../Libraries/XMCLib/src/xmc_common.c ****         {
 136:../Libraries/XMCLib/src/xmc_common.c ****           /* First on list */
 137:../Libraries/XMCLib/src/xmc_common.c ****           *list = right->next;
 171              	 .loc 1 137 0
 172 0010 0360     	 str r3,[r0]
 173 0012 00E0     	 b .L19
 174              	.L18:
 138:../Libraries/XMCLib/src/xmc_common.c ****         } 
 139:../Libraries/XMCLib/src/xmc_common.c ****         else 
 140:../Libraries/XMCLib/src/xmc_common.c ****         {
 141:../Libraries/XMCLib/src/xmc_common.c ****           /* Not first on list */
 142:../Libraries/XMCLib/src/xmc_common.c ****           left->next = right->next;
 175              	 .loc 1 142 0
 176 0014 1360     	 str r3,[r2]
 177              	.L19:
 143:../Libraries/XMCLib/src/xmc_common.c ****         }
 144:../Libraries/XMCLib/src/xmc_common.c ****         right->next = NULL;
 178              	 .loc 1 144 0
 179 0016 0023     	 movs r3,#0
 180 0018 0B60     	 str r3,[r1]
 145:../Libraries/XMCLib/src/xmc_common.c ****         break;
 181              	 .loc 1 145 0
 182 001a 10BD     	 pop {r4,pc}
 183              	.LVL14:
 184              	.L17:
 130:../Libraries/XMCLib/src/xmc_common.c ****     {
 185              	 .loc 1 130 0 discriminator 2
 186 001c 1C68     	 ldr r4,[r3]
 187              	.LVL15:
 188 001e 1A46     	 mov r2,r3
 189 0020 0CB1     	 cbz r4,.L15
 190              	.LVL16:
 191 0022 2346     	 mov r3,r4
 192 0024 F0E7     	 b .L20
 193              	.LVL17:
 194              	.L15:
 195 0026 10BD     	 pop {r4,pc}
 196              	 .cfi_endproc
 197              	.LFE140:
 199              	 .section .text.XMC_LIST_Insert,"ax",%progbits
 200              	 .align 1
 201              	 .global XMC_LIST_Insert
 202              	 .thumb
 203              	 .thumb_func
 205              	XMC_LIST_Insert:
 206              	.LFB141:
 146:../Libraries/XMCLib/src/xmc_common.c ****       }
 147:../Libraries/XMCLib/src/xmc_common.c ****       left = right;
 148:../Libraries/XMCLib/src/xmc_common.c ****     }
 149:../Libraries/XMCLib/src/xmc_common.c ****   }
 150:../Libraries/XMCLib/src/xmc_common.c **** }
 151:../Libraries/XMCLib/src/xmc_common.c **** 
 152:../Libraries/XMCLib/src/xmc_common.c **** void XMC_LIST_Insert(XMC_LIST_t *list, void *prev_item, void *new_item)
 153:../Libraries/XMCLib/src/xmc_common.c **** {
 207              	 .loc 1 153 0
 208              	 .cfi_startproc
 209              	 
 210              	 
 211              	 
 212              	.LVL18:
 154:../Libraries/XMCLib/src/xmc_common.c ****   if (prev_item == NULL) 
 213              	 .loc 1 154 0
 214 0000 19B9     	 cbnz r1,.L26
 155:../Libraries/XMCLib/src/xmc_common.c ****   {
 156:../Libraries/XMCLib/src/xmc_common.c **** 	((struct list *)new_item)->next = (struct list *)*list;
 215              	 .loc 1 156 0
 216 0002 0368     	 ldr r3,[r0]
 217 0004 1360     	 str r3,[r2]
 157:../Libraries/XMCLib/src/xmc_common.c **** 	*list = new_item;
 218              	 .loc 1 157 0
 219 0006 0260     	 str r2,[r0]
 220 0008 7047     	 bx lr
 221              	.L26:
 158:../Libraries/XMCLib/src/xmc_common.c ****   } 
 159:../Libraries/XMCLib/src/xmc_common.c ****   else 
 160:../Libraries/XMCLib/src/xmc_common.c ****   {
 161:../Libraries/XMCLib/src/xmc_common.c ****     ((struct list *)new_item)->next = ((struct list *)prev_item)->next;
 222              	 .loc 1 161 0
 223 000a 0B68     	 ldr r3,[r1]
 224 000c 1360     	 str r3,[r2]
 162:../Libraries/XMCLib/src/xmc_common.c ****     ((struct list *)prev_item)->next = (struct list *)new_item;
 225              	 .loc 1 162 0
 226 000e 0A60     	 str r2,[r1]
 227 0010 7047     	 bx lr
 228              	 .cfi_endproc
 229              	.LFE141:
 231              	 .section .text.XMC_PRIOARRAY_Init,"ax",%progbits
 232              	 .align 1
 233              	 .global XMC_PRIOARRAY_Init
 234              	 .thumb
 235              	 .thumb_func
 237              	XMC_PRIOARRAY_Init:
 238              	.LFB142:
 163:../Libraries/XMCLib/src/xmc_common.c ****   }
 164:../Libraries/XMCLib/src/xmc_common.c **** }
 165:../Libraries/XMCLib/src/xmc_common.c **** 
 166:../Libraries/XMCLib/src/xmc_common.c **** void XMC_PRIOARRAY_Init(XMC_PRIOARRAY_t *prioarray)
 167:../Libraries/XMCLib/src/xmc_common.c **** {
 239              	 .loc 1 167 0
 240              	 .cfi_startproc
 241              	 
 242              	 
 243              	.LVL19:
 168:../Libraries/XMCLib/src/xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 169:../Libraries/XMCLib/src/xmc_common.c **** 
 170:../Libraries/XMCLib/src/xmc_common.c ****   /* Initialize head, next points to tail, previous to NULL and the priority is MININT */
 171:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size].next = prioarray->size + 1;
 244              	 .loc 1 171 0
 245 0000 90E80600 	 ldmia r0,{r1,r2}
 246 0004 0C23     	 movs r3,#12
 247 0006 4B43     	 muls r3,r1,r3
 248 0008 D018     	 adds r0,r2,r3
 249              	.LVL20:
 167:../Libraries/XMCLib/src/xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 250              	 .loc 1 167 0
 251 000a 10B5     	 push {r4,lr}
 252              	.LCFI2:
 253              	 .cfi_def_cfa_offset 8
 254              	 .cfi_offset 4,-8
 255              	 .cfi_offset 14,-4
 256              	 .loc 1 171 0
 257 000c 4C1C     	 adds r4,r1,#1
 258 000e 8460     	 str r4,[r0,#8]
 172:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size].previous = -1;
 259              	 .loc 1 172 0
 260 0010 4FF0FF34 	 mov r4,#-1
 261 0014 4460     	 str r4,[r0,#4]
 173:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size].priority = INT32_MAX;
 262              	 .loc 1 173 0
 263 0016 6FF00040 	 mvn r0,#-2147483648
 264 001a D050     	 str r0,[r2,r3]
 174:../Libraries/XMCLib/src/xmc_common.c **** 
 175:../Libraries/XMCLib/src/xmc_common.c ****   /* Initialize tail, next points to NULL, previous is the head and the priority is MAXINT */
 176:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size + 1].next = -1;
 265              	 .loc 1 176 0
 266 001c 0C33     	 adds r3,r3,#12
 267 001e D018     	 adds r0,r2,r3
 177:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size + 1].previous = prioarray->size;
 268              	 .loc 1 177 0
 269 0020 4160     	 str r1,[r0,#4]
 178:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size + 1].priority = INT32_MIN;
 270              	 .loc 1 178 0
 271 0022 4FF00041 	 mov r1,#-2147483648
 176:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size + 1].previous = prioarray->size;
 272              	 .loc 1 176 0
 273 0026 8460     	 str r4,[r0,#8]
 274              	 .loc 1 178 0
 275 0028 D150     	 str r1,[r2,r3]
 276 002a 10BD     	 pop {r4,pc}
 277              	 .cfi_endproc
 278              	.LFE142:
 280              	 .section .text.XMC_PRIOARRAY_Add,"ax",%progbits
 281              	 .align 1
 282              	 .global XMC_PRIOARRAY_Add
 283              	 .thumb
 284              	 .thumb_func
 286              	XMC_PRIOARRAY_Add:
 287              	.LFB143:
 179:../Libraries/XMCLib/src/xmc_common.c **** 
 180:../Libraries/XMCLib/src/xmc_common.c **** }
 181:../Libraries/XMCLib/src/xmc_common.c **** 
 182:../Libraries/XMCLib/src/xmc_common.c **** void XMC_PRIOARRAY_Add(XMC_PRIOARRAY_t *prioarray, int32_t item, int32_t priority)
 183:../Libraries/XMCLib/src/xmc_common.c **** {
 288              	 .loc 1 183 0
 289              	 .cfi_startproc
 290              	 
 291              	 
 292              	.LVL21:
 293              	.LBB12:
 294              	.LBB13:
 295              	 .file 2 "G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_common.h"
   1:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /**
   2:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @file xmc_common.h
   3:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @date 2019-05-29
   4:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
   5:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @cond
   6:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   *************************************************************************************************
   7:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * XMClib v2.1.22 - XMC Peripheral Driver Library 
   8:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
   9:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * All rights reserved.                        
  11:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *                                             
  12:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * following conditions are met:   
  14:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *                                                                              
  15:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * disclaimer.                        
  17:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 
  18:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 
  21:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * products derived from this software without specific prior written permission.                  
  23:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *                                                                              
  24:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *                                                                              
  32:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  **************************************************************************************************
  35:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  36:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * Change History
  37:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * --------------
  38:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  39:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2015-06-20:
  40:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Initial
  41:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Brief section updated
  42:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Added XMC_LIB_VERSION macro
  43:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  44:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2016-02-26:
  45:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.6
  46:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *      
  47:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2016-05-30:
  48:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.8
  49:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  50:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2016-11-18:
  51:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.10
  52:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Changed type of size in XMC_PRIOARRAY_t to fix compilation warnings
  53:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  54:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2017-04-04:
  55:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.12
  56:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  57:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2017-06-24:
  58:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.14
  59:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  60:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2017-08-03:
  61:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.16
  62:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Added __RAM_FUNC macro
  63:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  64:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2018-06-29:
  65:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.20
  66:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  67:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * 2019-05-29:
  68:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.22
  69:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  70:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @endcond 
  71:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
  72:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
  73:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
  74:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #ifndef XMC_COMMON_H
  75:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_COMMON_H
  76:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
  77:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #include <stddef.h>
  78:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #include <stdint.h>
  79:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #include <stdbool.h>
  80:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #include <string.h>
  81:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
  82:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #include "xmc_device.h"
  83:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
  84:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /**
  85:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @addtogroup XMClib XMC Peripheral Library
  86:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @{
  87:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
  88:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
  89:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /**
  90:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @addtogroup COMMON
  91:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @brief Common APIs to all peripherals for XMC microcontroller family 
  92:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * @{
  93:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
  94:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
  95:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /**************************************************************************************************
  96:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * MACROS
  97:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  **************************************************************************************************
  98:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_LIB_MAJOR_VERSION	(2U)
  99:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_LIB_MINOR_VERSION	(1U)
 100:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_LIB_PATCH_VERSION	(22U)
 101:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  
 102:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_LIB_VERSION         ((XMC_LIB_MAJOR_VERSION << 16U) + (XMC_LIB_MINOR_VERSION << 8U) + X
 103:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 104:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /* Define WEAK attribute */
 105:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #if !defined(__WEAK)
 106:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #if defined ( __CC_ARM )
 107:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
 108:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 109:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
 110:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #elif defined ( __ICCARM__ )
 111:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __WEAK __weak
 112:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #elif defined ( __GNUC__ )
 113:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
 114:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #elif defined ( __TASKING__ )
 115:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
 116:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #endif
 117:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #endif
 118:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 119:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #if !defined(__RAM_FUNC)
 120:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #if defined ( __CC_ARM )
 121:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** // http://www.keil.com/support/docs/3723.htm
 122:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __attribute__((section("RAMCODESECTION")))
 123:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 124:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __attribute__((section("RAMCODESECTION")))
 125:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #elif defined ( __ICCARM__ )
 126:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** // https://www.iar.com/support/tech-notes/linker/controlling-placement-of-the-section-where-__ramfu
 127:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __ramfunc
 128:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #elif defined ( __GNUC__ )
 129:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __attribute__((section(".ram_code"), long_call))
 130:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #elif defined ( __TASKING__ )
 131:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define __RAM_FUNC __attribute__((section(".ram_code")))
 132:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #endif
 133:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #endif
 134:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 135:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #ifdef XMC_ASSERT_ENABLE
 136:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  #define XMC_ASSERT(msg, exp) { if(!(exp)) {XMC_AssertHandler(msg, __FILE__, __LINE__);} }
 137:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #else
 138:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  #define XMC_ASSERT(msg, exp) { ; }
 139:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #endif
 140:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 141:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #ifdef XMC_DEBUG_ENABLE
 142:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  #include <stdio.h>
 143:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  #define XMC_DEBUG(...) { printf(__VA_ARGS__); }
 144:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #else
 145:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  #define XMC_DEBUG(...) { ; }
 146:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #endif
 147:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 148:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_UNUSED_ARG(x) (void)x
 149:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 150:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_STRUCT_INIT(m) memset(&m, 0, sizeof(m))
 151:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 152:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_PRIOARRAY_DEF(name, size) \
 153:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** XMC_PRIOARRAY_ITEM_t prioarray_m_##name[size + 2]; \
 154:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** XMC_PRIOARRAY_t prioarray_def_##name = {(size), (prioarray_m_##name)};
 155:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 156:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #define XMC_PRIOARRAY(name) \
 157:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** &prioarray_def_##name
 158:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 159:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /**************************************************************************************************
 160:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * DATA STRUCTURES
 161:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  **************************************************************************************************
 162:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 163:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 164:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 165:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** typedef struct XMC_DRIVER_VERSION 
 166:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** {
 167:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   uint8_t major;
 168:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   uint8_t minor;
 169:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   uint8_t patch;
 170:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** } XMC_DRIVER_VERSION_t;
 171:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 172:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 173:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 174:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 175:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** typedef void *XMC_LIST_t;
 176:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 177:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 178:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 179:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 180:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** typedef struct XMC_PRIOARRAY_ITEM
 181:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** {
 182:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   int32_t priority;
 183:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   int32_t previous;
 184:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   int32_t next;
 185:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** } XMC_PRIOARRAY_ITEM_t;
 186:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 187:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 188:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 189:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 190:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** typedef struct XMC_PRIOARRAY
 191:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** {
 192:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   int32_t size;
 193:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   XMC_PRIOARRAY_ITEM_t *items;
 194:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** } XMC_PRIOARRAY_t;
 195:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 196:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /**************************************************************************************************
 197:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  * API PROTOTYPES
 198:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  **************************************************************************************************
 199:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 200:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #ifdef __cplusplus
 201:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** extern "C" {
 202:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** #endif
 203:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 204:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 205:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 206:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 207:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void XMC_AssertHandler(const char *const msg, const char *const file, uint32_t line);
 208:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 209:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 210:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 211:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 212:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void XMC_LIST_Init(XMC_LIST_t *list);
 213:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 214:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 215:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 216:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 217:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void XMC_LIST_Add(XMC_LIST_t *list, void *const item);
 218:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 219:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 220:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 221:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 222:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void XMC_LIST_Remove(XMC_LIST_t *list, void *const item);
 223:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 224:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 225:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 226:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 227:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** uint32_t XMC_LIST_GetLength(XMC_LIST_t *list);
 228:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 229:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 230:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 231:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 232:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void *XMC_LIST_GetHead(XMC_LIST_t *list);
 233:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 234:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 235:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 236:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 237:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void *XMC_LIST_GetTail(XMC_LIST_t *list);
 238:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 239:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 240:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 241:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 242:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void XMC_LIST_Insert(XMC_LIST_t *list, void *prev_item, void *new_item);
 243:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 244:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 245:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 246:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 247:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void XMC_PRIOARRAY_Init(XMC_PRIOARRAY_t *prioarray);
 248:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 249:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 250:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 251:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 252:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void XMC_PRIOARRAY_Add(XMC_PRIOARRAY_t *prioarray, int32_t item, int32_t priority);
 253:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 254:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 255:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 256:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 257:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** void XMC_PRIOARRAY_Remove(XMC_PRIOARRAY_t *prioarray, int32_t item);
 258:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 259:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 260:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 261:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 262:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetHead(XMC_PRIOARRAY_t *prioarray)
 263:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** {
 264:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 265:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   return prioarray->items[prioarray->size].next;
 296              	 .loc 2 265 0
 297 0000 09C8     	 ldmia r0,{r0,r3}
 298              	.LVL22:
 299              	.LBE13:
 300              	.LBE12:
 301              	 .loc 1 183 0
 302 0002 F0B5     	 push {r4,r5,r6,r7,lr}
 303              	.LCFI3:
 304              	 .cfi_def_cfa_offset 20
 305              	 .cfi_offset 4,-20
 306              	 .cfi_offset 5,-16
 307              	 .cfi_offset 6,-12
 308              	 .cfi_offset 7,-8
 309              	 .cfi_offset 14,-4
 310              	.LBB15:
 311              	.LBB14:
 312              	 .loc 2 265 0
 313 0004 0C24     	 movs r4,#12
 314 0006 04FB0030 	 mla r0,r4,r0,r3
 315 000a 8668     	 ldr r6,[r0,#8]
 316              	.L30:
 317              	.LVL23:
 318              	.LBE14:
 319              	.LBE15:
 320              	.LBB16:
 321              	.LBB17:
 266:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** }
 267:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 268:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 269:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 270:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 271:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetTail(XMC_PRIOARRAY_t *prioarray)
 272:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** {
 273:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 274:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   return prioarray->items[prioarray->size + 1].previous;
 275:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** }
 276:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 277:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 278:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 279:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 280:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetItemPriority(XMC_PRIOARRAY_t *prioarray, int32_t item)
 281:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** {
 282:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_GetItemPriority: item out of range", (item >= 0) && (item < prioarray->
 283:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   return prioarray->items[item].priority;
 322              	 .loc 2 283 0
 323 000c 0C25     	 movs r5,#12
 324 000e 05FB06F0 	 mul r0,r5,r6
 325 0012 1C18     	 adds r4,r3,r0
 326              	.LBE17:
 327              	.LBE16:
 184:../Libraries/XMCLib/src/xmc_common.c ****   int32_t next;
 185:../Libraries/XMCLib/src/xmc_common.c ****   int32_t previous;
 186:../Libraries/XMCLib/src/xmc_common.c **** 
 187:../Libraries/XMCLib/src/xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Add: item out of range", (item >= 0) && (item < prioarray->size));
 188:../Libraries/XMCLib/src/xmc_common.c ****   
 189:../Libraries/XMCLib/src/xmc_common.c ****   next = XMC_PRIOARRAY_GetHead(prioarray);
 190:../Libraries/XMCLib/src/xmc_common.c ****   while (XMC_PRIOARRAY_GetItemPriority(prioarray, next) > priority)
 328              	 .loc 1 190 0
 329 0014 1858     	 ldr r0,[r3,r0]
 330 0016 9042     	 cmp r0,r2
 331 0018 01DD     	 ble .L32
 332              	.LVL24:
 333              	.LBB18:
 334              	.LBB19:
 284:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** }
 285:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** 
 286:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** /*
 287:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  *
 288:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****  */
 289:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetItemNext(XMC_PRIOARRAY_t *prioarray, int32_t item)
 290:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h **** {
 291:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_GetItemNext: item out of range", (item >= 0) && (item < prioarray->size
 292:G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc\xmc_common.h ****   return prioarray->items[item].next;
 335              	 .loc 2 292 0
 336 001a A668     	 ldr r6,[r4,#8]
 337 001c F6E7     	 b .L30
 338              	.LVL25:
 339              	.L32:
 340              	.LBE19:
 341              	.LBE18:
 191:../Libraries/XMCLib/src/xmc_common.c ****   {
 192:../Libraries/XMCLib/src/xmc_common.c ****     next = XMC_PRIOARRAY_GetItemNext(prioarray, next);
 193:../Libraries/XMCLib/src/xmc_common.c ****   }
 194:../Libraries/XMCLib/src/xmc_common.c **** 
 195:../Libraries/XMCLib/src/xmc_common.c ****   previous = prioarray->items[next].previous;
 196:../Libraries/XMCLib/src/xmc_common.c **** 
 197:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[item].next = next;
 342              	 .loc 1 197 0
 343 001e 05FB01F7 	 mul r7,r5,r1
 195:../Libraries/XMCLib/src/xmc_common.c **** 
 344              	 .loc 1 195 0
 345 0022 6068     	 ldr r0,[r4,#4]
 346              	.LVL26:
 347              	 .loc 1 197 0
 348 0024 03EB070E 	 add lr,r3,r7
 349 0028 CEF80860 	 str r6,[lr,#8]
 198:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[item].previous = previous;
 350              	 .loc 1 198 0
 351 002c CEF80400 	 str r0,[lr,#4]
 199:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[item].priority = priority;
 352              	 .loc 1 199 0
 353 0030 DA51     	 str r2,[r3,r7]
 200:../Libraries/XMCLib/src/xmc_common.c **** 
 201:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[previous].next = item;
 354              	 .loc 1 201 0
 355 0032 05FB0033 	 mla r3,r5,r0,r3
 356 0036 9960     	 str r1,[r3,#8]
 202:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[next].previous = item;
 357              	 .loc 1 202 0
 358 0038 6160     	 str r1,[r4,#4]
 359 003a F0BD     	 pop {r4,r5,r6,r7,pc}
 360              	 .cfi_endproc
 361              	.LFE143:
 363              	 .section .text.XMC_PRIOARRAY_Remove,"ax",%progbits
 364              	 .align 1
 365              	 .global XMC_PRIOARRAY_Remove
 366              	 .thumb
 367              	 .thumb_func
 369              	XMC_PRIOARRAY_Remove:
 370              	.LFB144:
 203:../Libraries/XMCLib/src/xmc_common.c **** }
 204:../Libraries/XMCLib/src/xmc_common.c **** 
 205:../Libraries/XMCLib/src/xmc_common.c **** void XMC_PRIOARRAY_Remove(XMC_PRIOARRAY_t *prioarray, int32_t item)
 206:../Libraries/XMCLib/src/xmc_common.c **** {
 371              	 .loc 1 206 0
 372              	 .cfi_startproc
 373              	 
 374              	 
 375              	.LVL27:
 207:../Libraries/XMCLib/src/xmc_common.c ****   int32_t next;
 208:../Libraries/XMCLib/src/xmc_common.c ****   int32_t previous;
 209:../Libraries/XMCLib/src/xmc_common.c **** 
 210:../Libraries/XMCLib/src/xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Add: item out of range", (item >= 0) && (item < prioarray->size));
 211:../Libraries/XMCLib/src/xmc_common.c ****   
 212:../Libraries/XMCLib/src/xmc_common.c ****   next = prioarray->items[item].next;
 376              	 .loc 1 212 0
 377 0000 4268     	 ldr r2,[r0,#4]
 378 0002 0C20     	 movs r0,#12
 379              	.LVL28:
 380 0004 00FB0121 	 mla r1,r0,r1,r2
 381              	.LVL29:
 206:../Libraries/XMCLib/src/xmc_common.c ****   int32_t next;
 382              	 .loc 1 206 0
 383 0008 10B5     	 push {r4,lr}
 384              	.LCFI4:
 385              	 .cfi_def_cfa_offset 8
 386              	 .cfi_offset 4,-8
 387              	 .cfi_offset 14,-4
 388              	 .loc 1 212 0
 389 000a 8B68     	 ldr r3,[r1,#8]
 390              	.LVL30:
 213:../Libraries/XMCLib/src/xmc_common.c ****   previous = prioarray->items[item].previous;
 391              	 .loc 1 213 0
 392 000c 4968     	 ldr r1,[r1,#4]
 393              	.LVL31:
 214:../Libraries/XMCLib/src/xmc_common.c **** 
 215:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[previous].next = next;
 394              	 .loc 1 215 0
 395 000e 00FB0124 	 mla r4,r0,r1,r2
 396 0012 A360     	 str r3,[r4,#8]
 216:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[next].previous = previous;
 397              	 .loc 1 216 0
 398 0014 00FB0323 	 mla r3,r0,r3,r2
 399              	.LVL32:
 400 0018 5960     	 str r1,[r3,#4]
 401 001a 10BD     	 pop {r4,pc}
 402              	 .cfi_endproc
 403              	.LFE144:
 405              	 .text
 406              	.Letext0:
 407              	 .file 3 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 408              	 .file 4 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 409              	 .file 5 "G:/DT/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_common.c
    {standard input}:20     .text.XMC_LIST_Init:00000000 $t
    {standard input}:25     .text.XMC_LIST_Init:00000000 XMC_LIST_Init
    {standard input}:42     .text.XMC_LIST_GetHead:00000000 $t
    {standard input}:47     .text.XMC_LIST_GetHead:00000000 XMC_LIST_GetHead
    {standard input}:63     .text.XMC_LIST_GetTail:00000000 $t
    {standard input}:68     .text.XMC_LIST_GetTail:00000000 XMC_LIST_GetTail
    {standard input}:97     .text.XMC_LIST_Add:00000000 $t
    {standard input}:102    .text.XMC_LIST_Add:00000000 XMC_LIST_Add
    {standard input}:139    .text.XMC_LIST_Remove:00000000 $t
    {standard input}:144    .text.XMC_LIST_Remove:00000000 XMC_LIST_Remove
    {standard input}:200    .text.XMC_LIST_Insert:00000000 $t
    {standard input}:205    .text.XMC_LIST_Insert:00000000 XMC_LIST_Insert
    {standard input}:232    .text.XMC_PRIOARRAY_Init:00000000 $t
    {standard input}:237    .text.XMC_PRIOARRAY_Init:00000000 XMC_PRIOARRAY_Init
    {standard input}:281    .text.XMC_PRIOARRAY_Add:00000000 $t
    {standard input}:286    .text.XMC_PRIOARRAY_Add:00000000 XMC_PRIOARRAY_Add
    {standard input}:364    .text.XMC_PRIOARRAY_Remove:00000000 $t
    {standard input}:369    .text.XMC_PRIOARRAY_Remove:00000000 XMC_PRIOARRAY_Remove
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.ca5ae67a873a4952d630d8e4120b9e3e
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fe7d912fc917043c98742c35eddd8cff
                           .group:00000000 wm4.config.h.216.aad1ef7bee4fb69981cb38ce62f84d9c
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.4e89a3f145accdcb1100c37260c088e6
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.xmc_device.h.65.5c0d35eb1a6853ff8300ab2ec1b944b0
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.57f124f9262f3dbf77da6a6506ffb430
                           .group:00000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:00000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1500.3eca65ed9ba7f90e09c1ffcb0b3f5724
                           .group:00000000 wm4.xmc_common.h.98.806f17e888fd51d0e4be2ad115163551

NO UNDEFINED SYMBOLS
