   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbh.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USBH_GetVersion,"ax",%progbits
  20              	 .align 1
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USBH_GetVersion:
  25              	.LFB187:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_usbh.c"
   1:../Libraries/XMCLib/src/xmc_usbh.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbh.c ****  * @file xmc_usbh.c
   3:../Libraries/XMCLib/src/xmc_usbh.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_usbh.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbh.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbh.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMClib v2.1.22 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usbh.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbh.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbh.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usbh.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usbh.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbh.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbh.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usbh.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usbh.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usbh.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usbh.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usbh.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usbh.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usbh.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usbh.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usbh.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usbh.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usbh.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usbh.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usbh.c ****  * (To improve the quality of the software, users are encouraged to share modifications, enhancemen
  33:../Libraries/XMCLib/src/xmc_usbh.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  35:../Libraries/XMCLib/src/xmc_usbh.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  37:../Libraries/XMCLib/src/xmc_usbh.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_usbh.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  40:../Libraries/XMCLib/src/xmc_usbh.c ****  * 2016-06-30:
  41:../Libraries/XMCLib/src/xmc_usbh.c ****  *     - Initial <br>
  42:../Libraries/XMCLib/src/xmc_usbh.c ****  * 2016-09-01:
  43:../Libraries/XMCLib/src/xmc_usbh.c ****  *     - Removed Keil specific exclusion<br>
  44:../Libraries/XMCLib/src/xmc_usbh.c ****  * 2018-06-21:
  45:../Libraries/XMCLib/src/xmc_usbh.c ****  *     - Fixed compilation issues for XMC42
  46:../Libraries/XMCLib/src/xmc_usbh.c ****  * 2019-05-07:
  47:../Libraries/XMCLib/src/xmc_usbh.c ****  *     - Fixed compilation warnings     
  48:../Libraries/XMCLib/src/xmc_usbh.c ****  * @endcond 
  49:../Libraries/XMCLib/src/xmc_usbh.c ****  *
  50:../Libraries/XMCLib/src/xmc_usbh.c ****  */
  51:../Libraries/XMCLib/src/xmc_usbh.c **** 
  52:../Libraries/XMCLib/src/xmc_usbh.c **** #include "xmc_usbh.h"
  53:../Libraries/XMCLib/src/xmc_usbh.c **** 
  54:../Libraries/XMCLib/src/xmc_usbh.c **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC43) || (UC_SERIES == XMC47) |
  55:../Libraries/XMCLib/src/xmc_usbh.c **** 
  56:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function provides transfer result*/
  57:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t XMC_USBH_PipeTransferGetResult (XMC_USBH_PIPE_HANDLE pipe_hndl);
  58:../Libraries/XMCLib/src/xmc_usbh.c **** /*Updates the power state of the driver*/
  59:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PowerControl (XMC_USBH_POWER_STATE_t state);
  60:../Libraries/XMCLib/src/xmc_usbh.c **** 
  61:../Libraries/XMCLib/src/xmc_usbh.c **** /*********************************************************** USBH Driver **************************
  62:../Libraries/XMCLib/src/xmc_usbh.c **** 
  63:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro to represent USB host driver version*/
  64:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_DRV_VERSION ((uint16_t)((uint16_t)XMC_LIB_MINOR_VERSION << 8U)|XMC_LIB_PATCH_VERSI
  65:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro used to gate PHY clock and AHB clock*/
  66:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_PHY_CLK_STOP  (0x03U)
  67:../Libraries/XMCLib/src/xmc_usbh.c **** /*Macro used to ungate PHY clock and AHB clock*/
  68:../Libraries/XMCLib/src/xmc_usbh.c **** #define XMC_USBH_PHY_CLK_UNGATE  (0x100U)
  69:../Libraries/XMCLib/src/xmc_usbh.c **** 
  70:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver Version */
  71:../Libraries/XMCLib/src/xmc_usbh.c **** static const XMC_USBH_DRIVER_VERSION_t xmc_usbh_driver_version = { XMC_USBH_API_VERSION, XMC_USBH_D
  72:../Libraries/XMCLib/src/xmc_usbh.c **** 
  73:../Libraries/XMCLib/src/xmc_usbh.c **** /*Variables to hold selected VBUS port pin*/
  74:../Libraries/XMCLib/src/xmc_usbh.c **** XMC_GPIO_PORT_t * VBUS_port = XMC_GPIO_PORT3;
  75:../Libraries/XMCLib/src/xmc_usbh.c **** uint32_t VBUS_pin = 2U;
  76:../Libraries/XMCLib/src/xmc_usbh.c **** 
  77:../Libraries/XMCLib/src/xmc_usbh.c **** /*Array to track nack events on each pipe*/
  78:../Libraries/XMCLib/src/xmc_usbh.c **** bool is_nack[USBH0_MAX_PIPE_NUM];
  79:../Libraries/XMCLib/src/xmc_usbh.c **** 
  80:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver Capabilities */
  81:../Libraries/XMCLib/src/xmc_usbh.c **** static const XMC_USBH_CAPABILITIES_t xmc_usbh_driver_capabilities = {
  82:../Libraries/XMCLib/src/xmc_usbh.c ****   0x0001U,      /* Root HUB available Ports Mask */
  83:../Libraries/XMCLib/src/xmc_usbh.c ****   0U,           /* Automatic SPLIT packet handling */
  84:../Libraries/XMCLib/src/xmc_usbh.c ****   1U,           /* Signal Connect event */
  85:../Libraries/XMCLib/src/xmc_usbh.c ****   1U,           /* Signal Disconnect event */
  86:../Libraries/XMCLib/src/xmc_usbh.c ****   0U            /* Signal Overcurrent event */
  87:../Libraries/XMCLib/src/xmc_usbh.c **** };
  88:../Libraries/XMCLib/src/xmc_usbh.c **** /* Driver state and registers */
  89:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH0_DEVICE_t XMC_USBH0_device/* __attribute__((section ("RW_IRAM1")))*/ = {
  90:../Libraries/XMCLib/src/xmc_usbh.c ****    (USB0_GLOBAL_TypeDef *)(USB0_BASE),    /** Global register interface            */
  91:../Libraries/XMCLib/src/xmc_usbh.c ****    ((USB0_CH_TypeDef *)(USB0_CH0_BASE)),  /** Host channel interface               */
  92:../Libraries/XMCLib/src/xmc_usbh.c ****    0,                                     /** Port event callback; set during init */
  93:../Libraries/XMCLib/src/xmc_usbh.c ****    0,                                     /** Pipe event callback; set during init */
  94:../Libraries/XMCLib/src/xmc_usbh.c ****    false,                                 /** init status */
  95:../Libraries/XMCLib/src/xmc_usbh.c ****    XMC_USBH_POWER_OFF,                    /** USB Power status */
  96:../Libraries/XMCLib/src/xmc_usbh.c ****    false                                  /** Port reset state */
  97:../Libraries/XMCLib/src/xmc_usbh.c **** };
  98:../Libraries/XMCLib/src/xmc_usbh.c **** 
  99:../Libraries/XMCLib/src/xmc_usbh.c **** /*USB host pipe information. The array stores information related to packet id, data toggle,
 100:../Libraries/XMCLib/src/xmc_usbh.c ****  * pending data transfer information, periodic transfer interval, received data size etc for each
 101:../Libraries/XMCLib/src/xmc_usbh.c ****  * pipe.*/
 102:../Libraries/XMCLib/src/xmc_usbh.c **** volatile XMC_USBH0_pipe_t pipe[USBH0_MAX_PIPE_NUM];
 103:../Libraries/XMCLib/src/xmc_usbh.c **** 
 104:../Libraries/XMCLib/src/xmc_usbh.c **** /* FIFO sizes in bytes (total available memory for FIFOs is 1.25 kB) */
 105:../Libraries/XMCLib/src/xmc_usbh.c **** #define RX_FIFO_SIZE           (1128U)   /* RxFIFO size */
 106:../Libraries/XMCLib/src/xmc_usbh.c **** #define TX_FIFO_SIZE_NON_PERI  (64U)     /* Non-periodic Tx FIFO size */
 107:../Libraries/XMCLib/src/xmc_usbh.c **** #define TX_FIFO_SIZE_PERI      (1024U)   /* Periodic Tx FIFO size */
 108:../Libraries/XMCLib/src/xmc_usbh.c **** 
 109:../Libraries/XMCLib/src/xmc_usbh.c **** /*Stores data FIFO pointer for each pipe*/
 110:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t *XMC_USBH0_dfifo_ptr[USBH0_MAX_PIPE_NUM];
 111:../Libraries/XMCLib/src/xmc_usbh.c **** 
 112:../Libraries/XMCLib/src/xmc_usbh.c **** /* Local functions */
 113:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 114:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   enable Enable (XMC_USBH_CLOCK_GATING_ENABLE) or disable(XMC_USBH_CLOCK_GATING_DISABLE) 
 115:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  None
 116:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 117:../Libraries/XMCLib/src/xmc_usbh.c ****  * Enable/disable clock gating depending if feature is supported.
 118:../Libraries/XMCLib/src/xmc_usbh.c **** */
 119:../Libraries/XMCLib/src/xmc_usbh.c **** __INLINE static void XMC_lClockGating(uint8_t enable)
 120:../Libraries/XMCLib/src/xmc_usbh.c **** {
 121:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined(CLOCK_GATING_SUPPORTED)
 122:../Libraries/XMCLib/src/xmc_usbh.c ****    if (enable == XMC_USBH_CLOCK_GATING_ENABLE)
 123:../Libraries/XMCLib/src/xmc_usbh.c ****    {
 124:../Libraries/XMCLib/src/xmc_usbh.c ****      XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 125:../Libraries/XMCLib/src/xmc_usbh.c ****    }
 126:../Libraries/XMCLib/src/xmc_usbh.c ****    if (enable == XMC_USBH_CLOCK_GATING_DISABLE)
 127:../Libraries/XMCLib/src/xmc_usbh.c ****    {
 128:../Libraries/XMCLib/src/xmc_usbh.c ****      XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 129:../Libraries/XMCLib/src/xmc_usbh.c ****    }
 130:../Libraries/XMCLib/src/xmc_usbh.c **** #else
 131:../Libraries/XMCLib/src/xmc_usbh.c ****    XMC_UNUSED_ARG(enable);
 132:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 133:../Libraries/XMCLib/src/xmc_usbh.c **** 
 134:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 135:../Libraries/XMCLib/src/xmc_usbh.c **** }
 136:../Libraries/XMCLib/src/xmc_usbh.c **** 
 137:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 138:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_ch Pointer to Channel
 139:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  None
 140:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 141:../Libraries/XMCLib/src/xmc_usbh.c ****  * Triggers halt of a channel.
 142:../Libraries/XMCLib/src/xmc_usbh.c **** */
 143:../Libraries/XMCLib/src/xmc_usbh.c **** __INLINE static void XMC_lTriggerHaltChannel(USB0_CH_TypeDef *ptr_ch)
 144:../Libraries/XMCLib/src/xmc_usbh.c **** {
 145:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCINTMSK = USB_CH_HCINT_ChHltd_Msk; /* Enable halt interrupt */
 146:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 147:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 148:../Libraries/XMCLib/src/xmc_usbh.c **** }
 149:../Libraries/XMCLib/src/xmc_usbh.c **** 
 150:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 151:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_pipe Pointer to Pipe
 152:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   ptr_ch   Pointer to Channel
 153:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  bool \n
 154:../Libraries/XMCLib/src/xmc_usbh.c ****  *          true = success,\n
 155:../Libraries/XMCLib/src/xmc_usbh.c ****  *          false = fail
 156:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 157:../Libraries/XMCLib/src/xmc_usbh.c ****  * Start transfer on Pipe. The function uses transfer complete interrupts to transfer data more tha
 158:../Libraries/XMCLib/src/xmc_usbh.c ****  * packet size. It takes care of updating data toggle information in subsequent packets related to 
 159:../Libraries/XMCLib/src/xmc_usbh.c **** */
 160:../Libraries/XMCLib/src/xmc_usbh.c **** static bool XMC_lStartTransfer (XMC_USBH0_pipe_t *ptr_pipe, USB0_CH_TypeDef *ptr_ch) {
 161:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hcchar;
 162:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hctsiz;
 163:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hcintmsk;
 164:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_transfer;
 165:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_fifo;
 166:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  num_remaining_queue;
 167:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  txsts = 0U;
 168:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  pckt_num;
 169:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  max_pckt_size;
 170:../Libraries/XMCLib/src/xmc_usbh.c ****   uint8_t   *ptr_src = ptr_pipe->data;
 171:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  *ptr_dest = NULL;
 172:../Libraries/XMCLib/src/xmc_usbh.c ****   uint16_t  cnt;
 173:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_index;
 174:../Libraries/XMCLib/src/xmc_usbh.c ****   bool status;
 175:../Libraries/XMCLib/src/xmc_usbh.c **** 
 176:../Libraries/XMCLib/src/xmc_usbh.c ****   if (!(XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtConnSts_Msk))
 177:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 178:../Libraries/XMCLib/src/xmc_usbh.c ****     status = false;
 179:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 180:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 181:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 182:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Save channel characteristic register to local variable */
 183:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar   = ptr_ch->HCCHAR;
 184:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Save transfer size register to local variable */
 185:../Libraries/XMCLib/src/xmc_usbh.c ****     hctsiz   = ptr_ch->HCTSIZ_BUFFERMODE;
 186:../Libraries/XMCLib/src/xmc_usbh.c ****     hcintmsk = 0U;
 187:../Libraries/XMCLib/src/xmc_usbh.c ****     cnt      = 0U;
 188:../Libraries/XMCLib/src/xmc_usbh.c **** 
 189:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare transfer */
 190:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Reset EPDir (transfer direction = output) and enable channel */
 191:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar &= (uint32_t)(~(uint32_t)(USB_CH_HCCHAR_EPDir_Msk | USB_CH_HCCHAR_ChDis_Msk));
 192:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;
 193:../Libraries/XMCLib/src/xmc_usbh.c **** 
 194:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Enable default interrupts needed for all transfers */
 195:../Libraries/XMCLib/src/xmc_usbh.c ****     hcintmsk  = (USB_CH_HCINTMSK_XactErrMsk_Msk  |
 196:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
 197:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_NakMsk_Msk    |
 198:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_StallMsk_Msk)  ;
 199:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Keep PID */
 200:../Libraries/XMCLib/src/xmc_usbh.c ****     hctsiz &=  (uint32_t)USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 201:../Libraries/XMCLib/src/xmc_usbh.c **** 
 202:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Packet specific setup */
 203:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->packet & XMC_USBH_PACKET_TOKEN_Msk) {
 204:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_IN:
 205:../Libraries/XMCLib/src/xmc_usbh.c ****         /* set transfer direction to input */
 206:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar   |=  (uint32_t)USB_CH_HCCHAR_EPDir_Msk;
 207:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Enable IN transfer specific interrupts */
 208:../Libraries/XMCLib/src/xmc_usbh.c ****         hcintmsk  |= (uint32_t)( USB_CH_HCINTMSK_DataTglErrMsk_Msk  |
 209:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_BblErrMsk_Msk |
 210:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_AckMsk_Msk    |
 211:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_NakMsk_Msk )  ;
 212:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 213:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_OUT:
 214:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 215:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_SETUP:
 216:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk  ;
 217:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_MDATA;
 218:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 219:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 220:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 221:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 222:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare PID */
 223:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->packet & XMC_USBH_PACKET_DATA_Msk) {
 224:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_DATA0:
 225:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 226:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA0;
 227:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 228:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_DATA1:
 229:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   &= (uint32_t)~USB_CH_HCTSIZ_BUFFERMODE_Pid_Msk;
 230:../Libraries/XMCLib/src/xmc_usbh.c ****         hctsiz   |= (uint32_t)USB_CH_HCTSIZx_DPID_DATA1;
 231:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 232:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 233:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 234:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 235:../Libraries/XMCLib/src/xmc_usbh.c **** 
 236:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Prepare odd/even frame */
 237:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((XMC_USBH0_device.global_register->HFNUM & 1U) != 0U) {
 238:../Libraries/XMCLib/src/xmc_usbh.c ****       hcchar &= (uint32_t)~USB_CH_HCCHAR_OddFrm_Msk;
 239:../Libraries/XMCLib/src/xmc_usbh.c ****     } else {
 240:../Libraries/XMCLib/src/xmc_usbh.c ****       hcchar |= (uint32_t)USB_CH_HCCHAR_OddFrm_Msk;
 241:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 242:../Libraries/XMCLib/src/xmc_usbh.c ****   
 243:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Get transfer type specific status */
 244:../Libraries/XMCLib/src/xmc_usbh.c ****     switch (ptr_pipe->ep_type) {
 245:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_CONTROL:
 246:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_BULK:
 247:../Libraries/XMCLib/src/xmc_usbh.c ****         if (!(hcchar & USB_CH_HCCHAR_EPDir_Msk)) {
 248:../Libraries/XMCLib/src/xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->GNPTXSTS;
 249:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 250:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 251:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_ISOCHRONOUS:
 252:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_INTERRUPT:
 253:../Libraries/XMCLib/src/xmc_usbh.c ****         if (!(hcchar & USB_CH_HCCHAR_EPDir_Msk)) {
 254:../Libraries/XMCLib/src/xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->HPTXSTS;
 255:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 256:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 257:../Libraries/XMCLib/src/xmc_usbh.c ****       default:
 258:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 259:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 260:../Libraries/XMCLib/src/xmc_usbh.c ****   
 261:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Calculate remaining transfer size */
 262:../Libraries/XMCLib/src/xmc_usbh.c ****     num_remaining_transfer = ptr_pipe->num - ptr_pipe->num_transferred_total;
 263:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Limit transfer to available space inside fifo/queue if OUT transaction */
 264:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((uint32_t)(hcchar & USB_CH_HCCHAR_EPDir_Msk) == 0U) {
 265:../Libraries/XMCLib/src/xmc_usbh.c ****       max_pckt_size =  ptr_pipe->ep_max_packet_size;
 266:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_fifo = (uint32_t)((uint32_t)(txsts & 0x0000FFFFU) <<  2);
 267:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_queue  = (uint32_t)((uint32_t)(txsts & 0x00FF0000U) >> 16);
 268:../Libraries/XMCLib/src/xmc_usbh.c ****       if (num_remaining_transfer > num_remaining_fifo) {
 269:../Libraries/XMCLib/src/xmc_usbh.c ****         num_remaining_transfer = num_remaining_fifo;
 270:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 271:../Libraries/XMCLib/src/xmc_usbh.c ****       pckt_num = (uint32_t)((num_remaining_transfer + (max_pckt_size - 1U)) / max_pckt_size);
 272:../Libraries/XMCLib/src/xmc_usbh.c ****       if (pckt_num > num_remaining_queue) {
 273:../Libraries/XMCLib/src/xmc_usbh.c ****         pckt_num = num_remaining_queue;
 274:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 275:../Libraries/XMCLib/src/xmc_usbh.c ****       if (num_remaining_transfer > (pckt_num * max_pckt_size)) {
 276:../Libraries/XMCLib/src/xmc_usbh.c ****         num_remaining_transfer = pckt_num * max_pckt_size;
 277:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 278:../Libraries/XMCLib/src/xmc_usbh.c ****       cnt = (uint16_t)((num_remaining_transfer + 3U) / 4U);
 279:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_src  = ptr_pipe->data + ptr_pipe->num_transferred_total;
 280:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_index = ((USB0_CH_TypeDef *)ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_re
 281:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_dest = (uint32_t *)XMC_USBH0_dfifo_ptr[loc_index];
 282:../Libraries/XMCLib/src/xmc_usbh.c ****       /* For OUT/SETUP transfer num_transferring represents num of bytes to be sent */
 283:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->num_transferring = num_remaining_transfer;
 284:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 285:../Libraries/XMCLib/src/xmc_usbh.c ****     else {
 286:../Libraries/XMCLib/src/xmc_usbh.c ****       /* For IN transfer num_transferring is zero */
 287:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->num_transferring = 0U;
 288:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 289:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Set packet count and transfer size */
 290:../Libraries/XMCLib/src/xmc_usbh.c ****     if (num_remaining_transfer != 0U) {
 291:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= (((num_remaining_transfer + ptr_pipe->ep_max_packet_size) - 1U) / ptr_pipe->ep_max_
 292:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |=   num_remaining_transfer;
 293:../Libraries/XMCLib/src/xmc_usbh.c ****     } else {                                                 /* Zero length packet */
 294:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= ((uint32_t)1U << USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos); /* Packet count = 1 */
 295:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= 0U;                                        /* Transfer size = 0 */
 296:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 297:../Libraries/XMCLib/src/xmc_usbh.c ****     NVIC_DisableIRQ (USB0_0_IRQn);
 298:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCINTMSK = hcintmsk;                  /* Enable channel interrupts */
 299:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCTSIZ_BUFFERMODE = hctsiz;           /* Write ch transfer size */
 300:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCCHAR = hcchar;                      /* Write ch characteristics */
 301:../Libraries/XMCLib/src/xmc_usbh.c ****     while (cnt != 0U) {                           /* Load data */
 302:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 303:../Libraries/XMCLib/src/xmc_usbh.c ****       *ptr_dest = *((__unaligned uint32_t *)ptr_src);
 304:../Libraries/XMCLib/src/xmc_usbh.c **** #else/* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
 305:../Libraries/XMCLib/src/xmc_usbh.c ****       *ptr_dest = *((__packed uint32_t *)ptr_src);
 306:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 307:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_src  += 4U;
 308:../Libraries/XMCLib/src/xmc_usbh.c ****       cnt--;
 309:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 310:../Libraries/XMCLib/src/xmc_usbh.c ****     NVIC_EnableIRQ  (USB0_0_IRQn);                /* Enable OTG interrupt */
 311:../Libraries/XMCLib/src/xmc_usbh.c ****     status = true;
 312:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 313:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 314:../Libraries/XMCLib/src/xmc_usbh.c **** }
 315:../Libraries/XMCLib/src/xmc_usbh.c **** 
 316:../Libraries/XMCLib/src/xmc_usbh.c **** /* USB driver API functions */
 317:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 318:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return      \ref XMC_USBH_DRIVER_VERSION_t
 319:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 320:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get driver version.
 321:../Libraries/XMCLib/src/xmc_usbh.c **** */
 322:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_DRIVER_VERSION_t XMC_USBH_GetVersion (void) { return xmc_usbh_driver_version; }
  27              	 .loc 1 322 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 074B     	 ldr r3,.L2
  33 0002 82B0     	 sub sp,sp,#8
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .loc 1 322 0
  37 0004 1868     	 ldr r0,[r3]
  38 0006 0190     	 str r0,[sp,#4]
  39 0008 BDF80430 	 ldrh r3,[sp,#4]
  40 000c 0020     	 movs r0,#0
  41 000e 63F30F00 	 bfi r0,r3,#0,#16
  42 0012 BDF80630 	 ldrh r3,[sp,#6]
  43 0016 63F31F40 	 bfi r0,r3,#16,#16
  44 001a 02B0     	 add sp,sp,#8
  45              	.LCFI1:
  46              	 .cfi_def_cfa_offset 0
  47              	 
  48 001c 7047     	 bx lr
  49              	.L3:
  50 001e 00BF     	 .align 2
  51              	.L2:
  52 0020 00000000 	 .word .LANCHOR0
  53              	 .cfi_endproc
  54              	.LFE187:
  56              	 .section .text.XMC_USBH_GetCapabilities,"ax",%progbits
  57              	 .align 1
  58              	 .thumb
  59              	 .thumb_func
  61              	XMC_USBH_GetCapabilities:
  62              	.LFB188:
 323:../Libraries/XMCLib/src/xmc_usbh.c **** 
 324:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 325:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  \ref XMC_USBH_CAPABILITIES_t
 326:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 327:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get driver capabilities.
 328:../Libraries/XMCLib/src/xmc_usbh.c **** */
 329:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_CAPABILITIES_t XMC_USBH_GetCapabilities (void) { return xmc_usbh_driver_capabilitie
  63              	 .loc 1 329 0
  64              	 .cfi_startproc
  65              	 
  66              	 
  67              	 
  68              	 .loc 1 329 0
  69 0000 0123     	 movs r3,#1
  70 0002 0020     	 movs r0,#0
  71 0004 63F30E00 	 bfi r0,r3,#0,#15
  72 0008 6FF3CF30 	 bfc r0,#15,#1
  73 000c 40F44030 	 orr r0,r0,#196608
  74 0010 20F48020 	 bic r0,r0,#262144
  75 0014 7047     	 bx lr
  76              	 .cfi_endproc
  77              	.LFE188:
  79              	 .section .text.XMC_USBH_PortSuspend,"ax",%progbits
  80              	 .align 1
  81              	 .thumb
  82              	 .thumb_func
  84              	XMC_USBH_PortSuspend:
  85              	.LFB194:
 330:../Libraries/XMCLib/src/xmc_usbh.c **** 
 331:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 332:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   cb_port_event  Pointer to port event callback function \ref ARM_USBH_SignalPortEvent
 333:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param   cb_pipe_event  Pointer to pipe event callback function \ref ARM_USBH_SignalPipeEvent
 334:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return  int32_t \ref Execution_status. 0 if execution is successful.
 335:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 336:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 337:../Libraries/XMCLib/src/xmc_usbh.c ****  * Initialize USB Host Interface. Registers callback functions to be executed on port event and pip
 338:../Libraries/XMCLib/src/xmc_usbh.c ****  * Initializes FIFO address for each pipe. Configures P3.2 as the VBUS charge pump enable pin.\n
 339:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 340:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Related APIs:</b><BR>
 341:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Uninitialize() \n
 342:../Libraries/XMCLib/src/xmc_usbh.c **** */
 343:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_Initialize (XMC_USBH_SignalPortEvent_t cb_port_event,
 344:../Libraries/XMCLib/src/xmc_usbh.c ****                                 XMC_USBH_SignalPipeEvent_t cb_pipe_event) {
 345:../Libraries/XMCLib/src/xmc_usbh.c **** 
 346:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t channel;
 347:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 348:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.init_done == true)
 349:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 350:../Libraries/XMCLib/src/xmc_usbh.c ****     /*return ok since initialized*/
 351:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 352:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 353:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 354:../Libraries/XMCLib/src/xmc_usbh.c ****     /* assign callbacks */
 355:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPortEvent_cb = cb_port_event;
 356:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPipeEvent_cb = cb_pipe_event;
 357:../Libraries/XMCLib/src/xmc_usbh.c **** 
 358:../Libraries/XMCLib/src/xmc_usbh.c ****     /* assign fifo start addresses */
 359:../Libraries/XMCLib/src/xmc_usbh.c ****     for (channel = 0U; channel < USBH0_MAX_PIPE_NUM; channel++) {
 360:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 361:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 362:../Libraries/XMCLib/src/xmc_usbh.c **** 
 363:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 364:../Libraries/XMCLib/src/xmc_usbh.c ****   
 365:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.init_done = true;
 366:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 367:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 368:../Libraries/XMCLib/src/xmc_usbh.c **** }
 369:../Libraries/XMCLib/src/xmc_usbh.c **** 
 370:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 371:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 to indicate success.
 372:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 373:../Libraries/XMCLib/src/xmc_usbh.c ****  * De-initialize USB Host Interface. Sets the driver power state as powered off. Disables VBUS.\n
 374:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 375:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 376:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Initialize(), XMC_USBH_PortVbusOnOff() \n
 377:../Libraries/XMCLib/src/xmc_usbh.c **** */
 378:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_Uninitialize (void) {
 379:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_device.init_done = false;
 380:../Libraries/XMCLib/src/xmc_usbh.c ****   (void)XMC_USBH_PowerControl(XMC_USBH_POWER_OFF);
 381:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH_DRIVER_OK;
 382:../Libraries/XMCLib/src/xmc_usbh.c **** }
 383:../Libraries/XMCLib/src/xmc_usbh.c **** 
 384:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 385:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param  state  Power state. \ref XMC_USBH_POWER_STATE_t
 386:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 if successful.
 387:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 388:../Libraries/XMCLib/src/xmc_usbh.c ****  * Control USB Host Interface Power. If power state is set to \ref XMC_USBH_POWER_FULL,
 389:../Libraries/XMCLib/src/xmc_usbh.c ****  * it initializes the peripheral and enables VBUS. If power state is set to \ref XMC_USBH_POWER_OFF
 390:../Libraries/XMCLib/src/xmc_usbh.c ****  * disables the peripheral and the VBUS.\n
 391:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 392:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 393:../Libraries/XMCLib/src/xmc_usbh.c ****  *  XMC_USBH_Select_VBUS(), XMC_USBH_Initialize(), XMC_USBH_PortVbusOnOff(), XMC_USBH_Uninitialize(
 394:../Libraries/XMCLib/src/xmc_usbh.c **** */
 395:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PowerControl (XMC_USBH_POWER_STATE_t state) {
 396:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 397:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_value;
 398:../Libraries/XMCLib/src/xmc_usbh.c ****   switch (state) {
 399:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_LOW:
 400:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_UNSUPPORTED;
 401:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 402:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_OFF:
 403:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_DisableIRQ  (USB0_0_IRQn);
 404:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_ClearPendingIRQ (USB0_0_IRQn); /* Clear pending interrupt */
 405:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.power_state =  state; /* Clear powered flag */
 406:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  &= (uint32_t)(~USB_GAHBCFG_GlblIntrMsk_Msk); /* Di
 407:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_ENABLE); /* Enable Clock Gating */
 408:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL  |=  (uint32_t)USB_PCGCCTL_StopPclk_Msk; /* Stop PH
 409:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_DisableUsb(); /* Disable Power USB */
 410:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* reset USB */
 411:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 412:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 413:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 414:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_FULL:
 415:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.init_done == false)
 416:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 417:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR;
 418:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 419:../Libraries/XMCLib/src/xmc_usbh.c ****       } /* not initialized */
 420:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.power_state == XMC_USBH_POWER_FULL)
 421:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 422:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_OK;
 423:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 424:../Libraries/XMCLib/src/xmc_usbh.c ****       } /* already powered */
 425:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_DISABLE); /* disable clock gating */
 426:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 427:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* deassert reset USB *
 428:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 429:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 430:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_EnableUsb(); /* Enable Power USB */
 431:../Libraries/XMCLib/src/xmc_usbh.c **** 
 432:../Libraries/XMCLib/src/xmc_usbh.c ****       /* On-chip Full-speed PHY */
 433:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL  &=  (uint32_t)~USB_PCGCCTL_StopPclk_Msk;  /* Start
 434:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GUSBCFG  |=  (uint32_t)USB_GUSBCFG_PHYSel_Msk;    /* Full-s
 435:../Libraries/XMCLib/src/xmc_usbh.c **** 
 436:../Libraries/XMCLib/src/xmc_usbh.c ****       while ((XMC_USBH0_device.global_register->GRSTCTL & USB_GRSTCTL_AHBIdle_Msk) == 0U) /* wait u
 437:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 438:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Wait*/
 439:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 440:../Libraries/XMCLib/src/xmc_usbh.c **** 
 441:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GRSTCTL |=  (uint32_t)USB_GRSTCTL_CSftRst_Msk; /* Core soft
 442:../Libraries/XMCLib/src/xmc_usbh.c **** 
 443:../Libraries/XMCLib/src/xmc_usbh.c ****       while ((XMC_USBH0_device.global_register->GRSTCTL & USB_GRSTCTL_CSftRst_Msk)  != 0U) /* wait 
 444:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 445:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Wait*/
 446:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 447:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 448:../Libraries/XMCLib/src/xmc_usbh.c **** 
 449:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 450:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 451:../Libraries/XMCLib/src/xmc_usbh.c **** 
 452:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Created local copy of GUSBCFG to avoid side effects*/
 453:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_value = XMC_USBH0_device.global_register->GUSBCFG;
 454:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((loc_value & USB_GUSBCFG_ForceHstMode_Msk) == 0U) || \
 455:../Libraries/XMCLib/src/xmc_usbh.c ****           ((loc_value & USB_GUSBCFG_ForceDevMode_Msk) != 0U))
 456:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 457:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG &= (uint32_t)~USB_GUSBCFG_ForceDevMode_Msk;      
 458:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG |=  (uint32_t)USB_GUSBCFG_ForceHstMode_Msk;      
 459:../Libraries/XMCLib/src/xmc_usbh.c ****         (void)XMC_USBH_osDelay(100U);
 460:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 461:../Libraries/XMCLib/src/xmc_usbh.c **** 
 462:../Libraries/XMCLib/src/xmc_usbh.c ****       /* FS only, even if HS is supported */
 463:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG     |=  (uint32_t)(0x200U | USB_CH_HCFG_FSLSSUP(1));
 464:../Libraries/XMCLib/src/xmc_usbh.c **** 
 465:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Rx FIFO setting */
 466:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GRXFSIZ   = (RX_FIFO_SIZE/4U);
 467:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Non-periodic Tx FIFO setting */
 468:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GNPTXFSIZ_HOSTMODE = (((uint32_t)(TX_FIFO_SIZE_NON_PERI/4U)
 469:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Periodic Tx FIFO setting */
 470:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPTXFSIZ  = ((uint32_t)(TX_FIFO_SIZE_PERI / 4U) << 16U) | (
 471:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable channel interrupts */
 472:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HAINTMSK  = ((uint32_t)1U << USBH0_MAX_PIPE_NUM) - 1U;
 473:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Unmask interrupts */
 474:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GINTMSK_HOSTMODE   = (
 475:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTSTS_HOSTMODE_DisconnInt_Msk |
 476:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_HChIntMsk_Msk    |
 477:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_PrtIntMsk_Msk   |
 478:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_RxFLvlMsk_Msk |
 479:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_SofMsk_Msk  |
 480:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTMSK_HOSTMODE_WkUpIntMsk_Msk
 481:../Libraries/XMCLib/src/xmc_usbh.c ****                        )   ;
 482:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Set powered state */
 483:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.power_state = state;
 484:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable interrupts */
 485:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  |=  (uint32_t)USB_GAHBCFG_GlblIntrMsk_Msk;
 486:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Set highest interrupt priority */
 487:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_SetPriority (USB0_0_IRQn, 0U);
 488:../Libraries/XMCLib/src/xmc_usbh.c ****       NVIC_EnableIRQ   (USB0_0_IRQn);
 489:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 490:../Libraries/XMCLib/src/xmc_usbh.c ****     default:
 491:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_UNSUPPORTED;
 492:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 493:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 494:../Libraries/XMCLib/src/xmc_usbh.c **** }
 495:../Libraries/XMCLib/src/xmc_usbh.c **** 
 496:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 497:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port Root HUB Port Number. Only one port(0) is supported.
 498:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param vbus VBUS state - \n
 499:../Libraries/XMCLib/src/xmc_usbh.c ****  *                 - \b false VBUS off
 500:../Libraries/XMCLib/src/xmc_usbh.c ****  *                 - \b true  VBUS on
 501:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t \ref Execution_status. Returns 0 if successful.
 502:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 503:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 504:../Libraries/XMCLib/src/xmc_usbh.c ****  * Set USB port VBUS on/off.
 505:../Libraries/XMCLib/src/xmc_usbh.c **** */
 506:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortVbusOnOff (uint8_t port, bool vbus) {
 507:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 508:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 509:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 510:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 511:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 512:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 513:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 514:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 515:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 516:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 517:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 518:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 519:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 520:../Libraries/XMCLib/src/xmc_usbh.c ****       if (vbus != 0U) {
 521:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Port power on */
 522:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->HPRT |=  (uint32_t)USB_HPRT_PrtPwr_Msk;
 523:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 524:../Libraries/XMCLib/src/xmc_usbh.c ****       } else {
 525:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Port power off */
 526:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->HPRT &= (uint32_t)~USB_HPRT_PrtPwr_Msk;
 527:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_INPUT_TRISTATE);
 528:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 529:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 530:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 531:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 532:../Libraries/XMCLib/src/xmc_usbh.c **** }
 533:../Libraries/XMCLib/src/xmc_usbh.c **** 
 534:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 535:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port Root HUB Port Number. Only one port(0) is supported.
 536:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return int32_t Execution status. \ref Execution_status
 537:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 538:../Libraries/XMCLib/src/xmc_usbh.c ****  * Do USB port reset. Port reset should honor the requirement of 50ms delay before enabling.
 539:../Libraries/XMCLib/src/xmc_usbh.c ****  * The function depends on implementation of XMC_USBH_osDelay() for 1ms delay to achieve required d
 540:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 541:../Libraries/XMCLib/src/xmc_usbh.c **** */
 542:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortReset (uint8_t port) {
 543:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 544:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 545:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 546:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 547:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 548:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 549:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 550:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 551:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 552:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 553:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 554:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 555:../Libraries/XMCLib/src/xmc_usbh.c **** 
 556:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.port_reset_active = true;
 557:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt  =  XMC_USBH0_device.global_register->HPRT;
 558:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtEna_Msk;                            /* Disable port */
 559:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt |= (uint32_t)USB_HPRT_PrtRst_Msk;                            /* Port reset */
 560:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 561:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait at least 50ms *
 562:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtRst_Msk;                            /* Clear port reset */
 563:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 564:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait for ISR */
 565:../Libraries/XMCLib/src/xmc_usbh.c **** 
 566:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Wait for the port to be enabled*/
 567:../Libraries/XMCLib/src/xmc_usbh.c ****     while ((XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtEna_Msk) == 0U)
 568:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 569:../Libraries/XMCLib/src/xmc_usbh.c ****       /*wait*/
 570:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 571:../Libraries/XMCLib/src/xmc_usbh.c **** 
 572:../Libraries/XMCLib/src/xmc_usbh.c ****     if (XMC_USBH0_device.port_reset_active == true)
 573:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 574:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active = false;
 575:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR;                               /* reset not confirmed inside I
 576:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 577:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 578:../Libraries/XMCLib/src/xmc_usbh.c **** 
 579:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 580:../Libraries/XMCLib/src/xmc_usbh.c **** }
 581:../Libraries/XMCLib/src/xmc_usbh.c **** 
 582:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 583:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 584:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return      \ref Execution_status
 585:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 586:../Libraries/XMCLib/src/xmc_usbh.c ****  * Suspend USB Port (stop generating SOFs).\n
 587:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 588:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 589:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PortResume() \n
 590:../Libraries/XMCLib/src/xmc_usbh.c **** */
 591:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortSuspend (uint8_t port)
 592:../Libraries/XMCLib/src/xmc_usbh.c **** {
  86              	 .loc 1 592 0
  87              	 .cfi_startproc
  88              	 
  89              	 
  90              	 
  91              	.LVL0:
 593:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 594:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 595:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
  92              	 .loc 1 595 0
  93 0000 0C4B     	 ldr r3,.L10
  94 0002 5A7C     	 ldrb r2,[r3,#17]
  95 0004 82B1     	 cbz r2,.L7
 596:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 597:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 598:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 599:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 600:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 601:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
  96              	 .loc 1 601 0
  97 0006 90B9     	 cbnz r0,.L8
 602:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 603:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 604:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 605:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 606:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 607:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
  98              	 .loc 1 607 0
  99 0008 1A68     	 ldr r2,[r3]
 100 000a D2F84034 	 ldr r3,[r2,#1088]
 101              	.LVL1:
 608:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 102              	 .loc 1 608 0
 103 000e 23F00403 	 bic r3,r3,#4
 104              	.LVL2:
 609:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtSusp_Msk;
 105              	 .loc 1 609 0
 106 0012 43F08003 	 orr r3,r3,#128
 107              	.LVL3:
 610:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 108              	 .loc 1 610 0
 109 0016 C2F84034 	 str r3,[r2,#1088]
 611:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Stop PHY clock after suspending the bus*/
 612:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL |= XMC_USBH_PHY_CLK_STOP;
 110              	 .loc 1 612 0
 111 001a D2F8003E 	 ldr r3,[r2,#3584]
 112              	.LVL4:
 113 001e 43F00303 	 orr r3,r3,#3
 114 0022 C2F8003E 	 str r3,[r2,#3584]
 115              	.LVL5:
 116 0026 7047     	 bx lr
 117              	.L7:
 597:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 118              	 .loc 1 597 0
 119 0028 4FF0FF30 	 mov r0,#-1
 120              	.LVL6:
 121 002c 7047     	 bx lr
 122              	.LVL7:
 123              	.L8:
 603:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 124              	 .loc 1 603 0
 125 002e 6FF00400 	 mvn r0,#4
 126              	.LVL8:
 613:../Libraries/XMCLib/src/xmc_usbh.c **** 
 614:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 615:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 616:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 617:../Libraries/XMCLib/src/xmc_usbh.c **** }
 127              	 .loc 1 617 0
 128 0032 7047     	 bx lr
 129              	.L11:
 130              	 .align 2
 131              	.L10:
 132 0034 00000000 	 .word .LANCHOR1
 133              	 .cfi_endproc
 134              	.LFE194:
 136              	 .section .text.XMC_USBH_PortGetState,"ax",%progbits
 137              	 .align 1
 138              	 .thumb
 139              	 .thumb_func
 141              	XMC_USBH_PortGetState:
 142              	.LFB196:
 618:../Libraries/XMCLib/src/xmc_usbh.c **** 
 619:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 620:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 621:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return \ref Execution_status
 622:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 623:../Libraries/XMCLib/src/xmc_usbh.c ****  * Resume suspended USB port (start generating SOFs).\n
 624:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 625:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 626:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PortSuspend() \n
 627:../Libraries/XMCLib/src/xmc_usbh.c **** */
 628:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PortResume (uint8_t port)
 629:../Libraries/XMCLib/src/xmc_usbh.c **** {
 630:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 631:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 632:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 633:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 634:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 635:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 636:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 637:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 638:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 639:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 640:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 641:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 642:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 643:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 644:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Ungate PHY clock*/
 645:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->PCGCCTL = XMC_USBH_PHY_CLK_UNGATE;
 646:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Set resume bit*/
 647:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 648:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 649:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtRes_Msk;
 650:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 651:../Libraries/XMCLib/src/xmc_usbh.c **** 
 652:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(20U);
 653:../Libraries/XMCLib/src/xmc_usbh.c **** 
 654:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 655:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 656:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~((uint32_t)USB_HPRT_PrtRes_Msk);
 657:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 658:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 659:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 660:../Libraries/XMCLib/src/xmc_usbh.c ****   
 661:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 662:../Libraries/XMCLib/src/xmc_usbh.c **** }
 663:../Libraries/XMCLib/src/xmc_usbh.c **** 
 664:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 665:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param port USB port number. Only one port(0) is supported.
 666:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return XMC_USBH_PORT_STATE_t Port State
 667:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 668:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 669:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get current USB port state. The state indicates if the port is connected, port speed
 670:../Libraries/XMCLib/src/xmc_usbh.c ****  * and port overcurrent status.
 671:../Libraries/XMCLib/src/xmc_usbh.c **** */
 672:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_PORT_STATE_t XMC_USBH_PortGetState (uint8_t port)
 673:../Libraries/XMCLib/src/xmc_usbh.c **** {
 143              	 .loc 1 673 0
 144              	 .cfi_startproc
 145              	 
 146              	 
 147              	 
 148              	.LVL9:
 674:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PORT_STATE_t port_state = { 0U, 0U, 0U };
 675:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 676:../Libraries/XMCLib/src/xmc_usbh.c ****   
 677:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 149              	 .loc 1 677 0
 150 0000 0C4A     	 ldr r2,.L19
 151 0002 537C     	 ldrb r3,[r2,#17]
 152 0004 63B1     	 cbz r3,.L18
 678:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 679:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Do not update the port state*/
 680:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 681:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 682:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 683:../Libraries/XMCLib/src/xmc_usbh.c ****     if (port != 0U)
 153              	 .loc 1 683 0
 154 0006 50B9     	 cbnz r0,.L16
 684:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 685:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Do not update the port state*/
 686:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 687:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 688:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 689:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt = XMC_USBH0_device.global_register->HPRT;
 155              	 .loc 1 689 0
 156 0008 1368     	 ldr r3,[r2]
 157 000a D3F84034 	 ldr r3,[r3,#1088]
 158              	.LVL10:
 690:../Libraries/XMCLib/src/xmc_usbh.c ****       if(((hprt & USB_HPRT_PrtConnSts_Msk) != 0U))
 159              	 .loc 1 690 0
 160 000e 03F00102 	 and r2,r3,#1
 161              	.LVL11:
 691:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 692:../Libraries/XMCLib/src/xmc_usbh.c ****         port_state.connected   = 1U;
 693:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 694:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 695:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 696:../Libraries/XMCLib/src/xmc_usbh.c ****         port_state.connected   = 0U;
 697:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 698:../Libraries/XMCLib/src/xmc_usbh.c ****       port_state.overcurrent = 0U;
 699:../Libraries/XMCLib/src/xmc_usbh.c **** 
 700:../Libraries/XMCLib/src/xmc_usbh.c ****       switch ((uint32_t)((uint32_t)(hprt & USB_HPRT_PrtSpd_Msk) >> USB_HPRT_PrtSpd_Pos)) {
 162              	 .loc 1 700 0
 163 0012 C3F34143 	 ubfx r3,r3,#17,#2
 164              	.LVL12:
 674:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 165              	 .loc 1 674 0
 166 0016 591E     	 subs r1,r3,#1
 167 0018 4B42     	 rsbs r3,r1,#0
 168 001a 4B41     	 adcs r3,r3,r1
 169 001c 01E0     	 b .L13
 170              	.LVL13:
 171              	.L16:
 172 001e 0023     	 movs r3,#0
 173              	.L18:
 174 0020 1A46     	 mov r2,r3
 175              	.LVL14:
 176              	.L13:
 701:../Libraries/XMCLib/src/xmc_usbh.c ****         case 1U: /* Full speed */
 702:../Libraries/XMCLib/src/xmc_usbh.c ****          port_state.speed = XMC_USBH_SPEED_FULL;
 703:../Libraries/XMCLib/src/xmc_usbh.c ****          break;
 704:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 705:../Libraries/XMCLib/src/xmc_usbh.c ****          break;
 706:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 707:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 708:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 709:../Libraries/XMCLib/src/xmc_usbh.c ****   return port_state;
 177              	 .loc 1 709 0
 178 0022 0020     	 movs r0,#0
 179              	.LVL15:
 180 0024 62F30000 	 bfi r0,r2,#0,#1
 181 0028 6FF34100 	 bfc r0,#1,#1
 182 002c 63F38300 	 bfi r0,r3,#2,#2
 710:../Libraries/XMCLib/src/xmc_usbh.c **** }
 183              	 .loc 1 710 0
 184 0030 7047     	 bx lr
 185              	.L20:
 186 0032 00BF     	 .align 2
 187              	.L19:
 188 0034 00000000 	 .word .LANCHOR1
 189              	 .cfi_endproc
 190              	.LFE196:
 192              	 .section .text.XMC_USBH_PipeModify,"ax",%progbits
 193              	 .align 1
 194              	 .thumb
 195              	 .thumb_func
 197              	XMC_USBH_PipeModify:
 198              	.LFB198:
 711:../Libraries/XMCLib/src/xmc_usbh.c **** 
 712:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 713:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_addr Device address
 714:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_speed  Device speed
 715:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_addr Hub address. This value should be 0 since hub is not supported.
 716:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_port  USB port number. Only one port(0) is supported.
 717:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_addr Device endpoint address \n
 718:../Libraries/XMCLib/src/xmc_usbh.c ****  *                - ep_addr.0..3: Address \n
 719:../Libraries/XMCLib/src/xmc_usbh.c ****  *                - ep_addr.7:    Direction\n
 720:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_type Endpoint type (ARM_USB_ENDPOINT_xxx)
 721:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_max_packet_size Endpoint maximum packet size
 722:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_interval Endpoint polling interval
 723:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return XMC_USBH_PIPE_HANDLE Pipe handle is a pointer to pipe hardware base address.
 724:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 725:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 726:../Libraries/XMCLib/src/xmc_usbh.c ****  * Create/allocate a pipe configured with input parameters. The function looks for an unused pipe a
 727:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 728:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 729:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 730:../Libraries/XMCLib/src/xmc_usbh.c **** */
 731:../Libraries/XMCLib/src/xmc_usbh.c **** static XMC_USBH_PIPE_HANDLE XMC_USBH_PipeCreate (uint8_t dev_addr, uint8_t dev_speed, uint8_t hub_a
 732:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 733:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 734:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t         i;
 735:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t loc_val;
 736:../Libraries/XMCLib/src/xmc_usbh.c ****   
 737:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_UNUSED_ARG(hub_addr);
 738:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_UNUSED_ARG(hub_port);
 739:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_UNUSED_ARG(dev_speed);
 740:../Libraries/XMCLib/src/xmc_usbh.c **** 
 741:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 742:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 743:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch = (USB0_CH_TypeDef *)NULL;
 744:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 745:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 746:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 747:../Libraries/XMCLib/src/xmc_usbh.c ****    /* get first free pipe available */
 748:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch = (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers);
 749:../Libraries/XMCLib/src/xmc_usbh.c **** 
 750:../Libraries/XMCLib/src/xmc_usbh.c ****     for (i = 0U; i < USBH0_MAX_PIPE_NUM; i++) {
 751:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 752:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 753:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 754:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 755:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch++;
 756:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 757:../Libraries/XMCLib/src/xmc_usbh.c ****   
 758:../Libraries/XMCLib/src/xmc_usbh.c ****     /* free pipe found? */
 759:../Libraries/XMCLib/src/xmc_usbh.c ****     if (i == USBH0_MAX_PIPE_NUM)
 760:../Libraries/XMCLib/src/xmc_usbh.c ****     { 
 761:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch = (USB0_CH_TypeDef *)NULL;
 762:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 763:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 764:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 765:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 766:../Libraries/XMCLib/src/xmc_usbh.c **** 
 767:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)ptr_pipe, 0, sizeof(XMC_USBH0_pipe_t));  /* Initialize pipe structure */
 768:../Libraries/XMCLib/src/xmc_usbh.c **** 
 769:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Fill in all fields of Endpoint Descriptor */
 770:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Get the end point direction from the MSB of address*/
 771:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_val = 0U;
 772:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((ep_addr >> 7U) & 0x1U) == 0U)
 773:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 774:../Libraries/XMCLib/src/xmc_usbh.c ****         loc_val = 1U;
 775:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 776:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch->HCCHAR = ((uint32_t)(USB_CH_HCCHARx_MPS(ep_max_packet_size))|
 777:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 778:../Libraries/XMCLib/src/xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 779:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_EPTYPE (ep_type) ) |
 780:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 781:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Store Pipe settings */
 782:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->ep_max_packet_size = ep_max_packet_size;
 783:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->ep_type            = ep_type;
 784:../Libraries/XMCLib/src/xmc_usbh.c ****       switch (ep_type) {
 785:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 786:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_BULK:
 787:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 788:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_ISOCHRONOUS:
 789:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_INTERRUPT:
 790:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ep_interval > 0U) {
 791:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interval_reload = ep_interval;
 792:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 793:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->interval = ptr_pipe->interval_reload;
 794:../Libraries/XMCLib/src/xmc_usbh.c ****           loc_val = ((((uint32_t)ep_max_packet_size >> 11U) + 1U) & 3U);
 795:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHARx_MCEC(loc_val);
 796:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 797:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 798:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 799:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 800:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 801:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 802:../Libraries/XMCLib/src/xmc_usbh.c ****   return ((XMC_USBH_EP_HANDLE)ptr_ch);
 803:../Libraries/XMCLib/src/xmc_usbh.c **** }
 804:../Libraries/XMCLib/src/xmc_usbh.c **** 
 805:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 806:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 807:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_addr Device address to be configured for the pipe.
 808:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param dev_speed  Device speed class.
 809:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_addr Hub address. It should be 0 since hub is not supported.
 810:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param hub_port USB port number. Only one port(0) is supported.
 811:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param ep_max_packet_size Endpoint maximum packet size
 812:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 813:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 814:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 815:../Libraries/XMCLib/src/xmc_usbh.c ****  * Modify an existing pipe with input parameters. It can be used to configure the pipe after receiv
 816:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 817:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 818:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 819:../Libraries/XMCLib/src/xmc_usbh.c **** */
 820:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeModify (XMC_USBH_PIPE_HANDLE pipe_hndl, uint8_t dev_addr, uint8_t dev_s
 199              	 .loc 1 820 0
 200              	 .cfi_startproc
 201              	 
 202              	 
 203              	.LVL16:
 204 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 205              	.LCFI2:
 206              	 .cfi_def_cfa_offset 20
 207              	 .cfi_offset 4,-20
 208              	 .cfi_offset 5,-16
 209              	 .cfi_offset 6,-12
 210              	 .cfi_offset 7,-8
 211              	 .cfi_offset 14,-4
 821:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 822:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 823:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t   hcchar;
 824:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 825:../Libraries/XMCLib/src/xmc_usbh.c **** 
 826:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_UNUSED_ARG(hub_addr);
 827:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_UNUSED_ARG(hub_port);
 828:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_UNUSED_ARG(dev_speed);
 829:../Libraries/XMCLib/src/xmc_usbh.c **** 
 830:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 212              	 .loc 1 830 0
 213 0002 144B     	 ldr r3,.L26
 214              	.LVL17:
 820:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 215              	 .loc 1 820 0
 216 0004 BDF81860 	 ldrh r6,[sp,#24]
 217              	 .loc 1 830 0
 218 0008 5A7C     	 ldrb r2,[r3,#17]
 219              	.LVL18:
 220 000a CAB1     	 cbz r2,.L23
 831:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 832:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 833:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 834:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 835:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 836:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
 221              	 .loc 1 836 0
 222 000c D8B1     	 cbz r0,.L24
 223              	.LVL19:
 837:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 838:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 839:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 840:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 841:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 842:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 843:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
 224              	 .loc 1 843 0
 225 000e 5B68     	 ldr r3,[r3,#4]
 844:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 226              	 .loc 1 844 0
 227 0010 114A     	 ldr r2,.L26+4
 843:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 228              	 .loc 1 843 0
 229 0012 C31A     	 subs r3,r0,r3
 230              	.LVL20:
 231              	 .loc 1 844 0
 232 0014 23F01F03 	 bic r3,r3,#31
 233              	.LVL21:
 234 0018 1344     	 add r3,r3,r2
 235 001a DA7E     	 ldrb r2,[r3,#27]
 236 001c 02F0FF04 	 and r4,r2,#255
 237 0020 A2B9     	 cbnz r2,.L25
 845:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 846:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 847:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 848:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 849:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 850:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Fill in all fields of channel */
 851:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar  =   ptr_ch->HCCHAR;
 238              	 .loc 1 851 0
 239 0022 0268     	 ldr r2,[r0]
 240              	.LVL22:
 852:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Clear fields */
 853:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar &= (uint32_t)~(USB_CH_HCCHAR_MPS_Msk | USB_CH_HCCHAR_DevAddr_Msk)  ;
 241              	 .loc 1 853 0
 242 0024 0D4D     	 ldr r5,.L26+8
 243 0026 1540     	 ands r5,r5,r2
 244              	.LVL23:
 854:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Set fields */
 855:../Libraries/XMCLib/src/xmc_usbh.c ****         hcchar |= (uint32_t)(USB_CH_HCCHARx_MPS(ep_max_packet_size) | (USB_CH_HCCHARx_DEVADDR(dev_a
 245              	 .loc 1 855 0
 246 0028 8A05     	 lsls r2,r1,#22
 247 002a C6F30A07 	 ubfx r7,r6,#0,#11
 248 002e 02F0FE52 	 and r2,r2,#532676608
 249 0032 47EA0201 	 orr r1,r7,r2
 250              	.LVL24:
 251 0036 2943     	 orrs r1,r1,r5
 252              	.LVL25:
 856:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCCHAR = hcchar;
 253              	 .loc 1 856 0
 254 0038 0160     	 str r1,[r0]
 857:../Libraries/XMCLib/src/xmc_usbh.c **** 
 858:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->ep_max_packet_size = ep_max_packet_size;
 255              	 .loc 1 858 0
 256 003a 9E82     	 strh r6,[r3,#20]
 824:../Libraries/XMCLib/src/xmc_usbh.c **** 
 257              	 .loc 1 824 0
 258 003c 2046     	 mov r0,r4
 259              	.LVL26:
 260 003e F0BD     	 pop {r4,r5,r6,r7,pc}
 261              	.LVL27:
 262              	.L23:
 832:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 263              	 .loc 1 832 0
 264 0040 4FF0FF30 	 mov r0,#-1
 265              	.LVL28:
 266 0044 F0BD     	 pop {r4,r5,r6,r7,pc}
 267              	.LVL29:
 268              	.L24:
 838:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 269              	 .loc 1 838 0
 270 0046 6FF00400 	 mvn r0,#4
 271              	.LVL30:
 272 004a F0BD     	 pop {r4,r5,r6,r7,pc}
 273              	.LVL31:
 274              	.L25:
 846:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 275              	 .loc 1 846 0
 276 004c 6FF00100 	 mvn r0,#1
 277              	.LVL32:
 859:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 860:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 861:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 862:../Libraries/XMCLib/src/xmc_usbh.c ****   
 863:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 864:../Libraries/XMCLib/src/xmc_usbh.c **** }
 278              	 .loc 1 864 0
 279 0050 F0BD     	 pop {r4,r5,r6,r7,pc}
 280              	.LVL33:
 281              	.L27:
 282 0052 00BF     	 .align 2
 283              	.L26:
 284 0054 00000000 	 .word .LANCHOR1
 285 0058 00000000 	 .word pipe
 286 005c 00F83FE0 	 .word -532678656
 287              	 .cfi_endproc
 288              	.LFE198:
 290              	 .section .text.XMC_USBH_PipeReset,"ax",%progbits
 291              	 .align 1
 292              	 .thumb
 293              	 .thumb_func
 295              	XMC_USBH_PipeReset:
 296              	.LFB200:
 865:../Libraries/XMCLib/src/xmc_usbh.c **** 
 866:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 867:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 868:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 869:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 870:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 871:../Libraries/XMCLib/src/xmc_usbh.c ****  * Delete pipe from active pipes list. After it is deleted, it can be assigned to new pipe request.
 872:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 873:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 874:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeReset(), XMC_USBH_PipeTransfer() \n
 875:../Libraries/XMCLib/src/xmc_usbh.c **** */
 876:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeDelete (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 877:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 878:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 879:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 880:../Libraries/XMCLib/src/xmc_usbh.c **** 
 881:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 882:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 883:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 884:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 885:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 886:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 887:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl == 0U)
 888:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 889:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 890:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 891:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 892:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 893:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 894:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_
 895:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 896:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 897:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 898:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 899:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 900:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 901:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCCHAR            = 0U;
 902:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINT             = 0U;
 903:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINTMSK          = 0U;
 904:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE = 0U;
 905:../Libraries/XMCLib/src/xmc_usbh.c **** 
 906:../Libraries/XMCLib/src/xmc_usbh.c ****         memset((void *)ptr_pipe, 0, sizeof(XMC_USBH0_pipe_t));
 907:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 908:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 909:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 910:../Libraries/XMCLib/src/xmc_usbh.c **** 
 911:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 912:../Libraries/XMCLib/src/xmc_usbh.c **** }
 913:../Libraries/XMCLib/src/xmc_usbh.c **** 
 914:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 915:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 916:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 917:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><br>
 918:../Libraries/XMCLib/src/xmc_usbh.c ****  * Reset pipe by clearing the interrupt mask and resetting the transfer control register.\n
 919:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 920:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 921:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
 922:../Libraries/XMCLib/src/xmc_usbh.c **** */
 923:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeReset (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 297              	 .loc 1 923 0
 298              	 .cfi_startproc
 299              	 
 300              	 
 301              	 
 302              	.LVL34:
 924:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 925:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
 926:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 927:../Libraries/XMCLib/src/xmc_usbh.c **** 
 928:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 303              	 .loc 1 928 0
 304 0000 0D4B     	 ldr r3,.L33
 305 0002 5A7C     	 ldrb r2,[r3,#17]
 306 0004 7AB1     	 cbz r2,.L30
 929:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 930:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 931:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 932:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 933:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 934:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
 307              	 .loc 1 934 0
 308 0006 88B1     	 cbz r0,.L31
 309              	.LVL35:
 935:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 936:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 937:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 938:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 939:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 940:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(pipe_hndl);
 941:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_
 310              	 .loc 1 941 0
 311 0008 5B68     	 ldr r3,[r3,#4]
 942:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 312              	 .loc 1 942 0
 313 000a 0C4A     	 ldr r2,.L33+4
 941:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 314              	 .loc 1 941 0
 315 000c C31A     	 subs r3,r0,r3
 316              	 .loc 1 942 0
 317 000e 23F01F03 	 bic r3,r3,#31
 318 0012 1344     	 add r3,r3,r2
 319 0014 DA78     	 ldrb r2,[r3,#3]
 320 0016 02F0FF03 	 and r3,r2,#255
 321 001a 52B9     	 cbnz r2,.L32
 943:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 944:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_BUSY;
 945:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 946:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 947:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 948:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINT    = 0U;
 322              	 .loc 1 948 0
 323 001c 8360     	 str r3,[r0,#8]
 949:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINTMSK = 0U;
 324              	 .loc 1 949 0
 325 001e C360     	 str r3,[r0,#12]
 950:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE   = 0U;
 326              	 .loc 1 950 0
 327 0020 0361     	 str r3,[r0,#16]
 926:../Libraries/XMCLib/src/xmc_usbh.c **** 
 328              	 .loc 1 926 0
 329 0022 1846     	 mov r0,r3
 330              	.LVL36:
 331 0024 7047     	 bx lr
 332              	.LVL37:
 333              	.L30:
 930:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 334              	 .loc 1 930 0
 335 0026 4FF0FF30 	 mov r0,#-1
 336              	.LVL38:
 337 002a 7047     	 bx lr
 338              	.LVL39:
 339              	.L31:
 936:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 340              	 .loc 1 936 0
 341 002c 6FF00400 	 mvn r0,#4
 342              	.LVL40:
 343 0030 7047     	 bx lr
 344              	.LVL41:
 345              	.L32:
 944:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 346              	 .loc 1 944 0
 347 0032 6FF00100 	 mvn r0,#1
 348              	.LVL42:
 951:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 952:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 953:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 954:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
 955:../Libraries/XMCLib/src/xmc_usbh.c **** }
 349              	 .loc 1 955 0
 350 0036 7047     	 bx lr
 351              	.L34:
 352              	 .align 2
 353              	.L33:
 354 0038 00000000 	 .word .LANCHOR1
 355 003c 18000000 	 .word pipe+24
 356              	 .cfi_endproc
 357              	.LFE200:
 359              	 .section .text.XMC_USBH_PipeDelete,"ax",%progbits
 360              	 .align 1
 361              	 .thumb
 362              	 .thumb_func
 364              	XMC_USBH_PipeDelete:
 365              	.LFB199:
 876:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 366              	 .loc 1 876 0
 367              	 .cfi_startproc
 368              	 
 369              	 
 370              	.LVL43:
 881:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 371              	 .loc 1 881 0
 372 0000 114A     	 ldr r2,.L40
 373 0002 517C     	 ldrb r1,[r2,#17]
 876:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 374              	 .loc 1 876 0
 375 0004 10B5     	 push {r4,lr}
 376              	.LCFI3:
 377              	 .cfi_def_cfa_offset 8
 378              	 .cfi_offset 4,-8
 379              	 .cfi_offset 14,-4
 876:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 380              	 .loc 1 876 0
 381 0006 0346     	 mov r3,r0
 881:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 382              	 .loc 1 881 0
 383 0008 A1B1     	 cbz r1,.L37
 887:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 384              	 .loc 1 887 0
 385 000a B0B1     	 cbz r0,.L38
 386              	.LVL44:
 894:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U)
 387              	 .loc 1 894 0
 388 000c 5268     	 ldr r2,[r2,#4]
 389 000e 821A     	 subs r2,r0,r2
 390 0010 0E48     	 ldr r0,.L40+4
 391              	.LVL45:
 392 0012 22F01F02 	 bic r2,r2,#31
 393 0016 1044     	 add r0,r0,r2
 394              	.LVL46:
 895:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 395              	 .loc 1 895 0
 396 0018 C27E     	 ldrb r2,[r0,#27]
 397 001a 02F0FF04 	 and r4,r2,#255
 398 001e 7AB9     	 cbnz r2,.L39
 901:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINT             = 0U;
 399              	 .loc 1 901 0
 400 0020 1C60     	 str r4,[r3]
 906:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 401              	 .loc 1 906 0
 402 0022 2146     	 mov r1,r4
 902:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCINTMSK          = 0U;
 403              	 .loc 1 902 0
 404 0024 9C60     	 str r4,[r3,#8]
 906:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 405              	 .loc 1 906 0
 406 0026 2022     	 movs r2,#32
 903:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch->HCTSIZ_BUFFERMODE = 0U;
 407              	 .loc 1 903 0
 408 0028 DC60     	 str r4,[r3,#12]
 904:../Libraries/XMCLib/src/xmc_usbh.c **** 
 409              	 .loc 1 904 0
 410 002a 1C61     	 str r4,[r3,#16]
 906:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 411              	 .loc 1 906 0
 412 002c FFF7FEFF 	 bl memset
 413              	.LVL47:
 879:../Libraries/XMCLib/src/xmc_usbh.c **** 
 414              	 .loc 1 879 0
 415 0030 2046     	 mov r0,r4
 416 0032 10BD     	 pop {r4,pc}
 417              	.LVL48:
 418              	.L37:
 883:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 419              	 .loc 1 883 0
 420 0034 4FF0FF30 	 mov r0,#-1
 421              	.LVL49:
 422 0038 10BD     	 pop {r4,pc}
 423              	.LVL50:
 424              	.L38:
 889:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 425              	 .loc 1 889 0
 426 003a 6FF00400 	 mvn r0,#4
 427              	.LVL51:
 428 003e 10BD     	 pop {r4,pc}
 429              	.LVL52:
 430              	.L39:
 897:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 431              	 .loc 1 897 0
 432 0040 6FF00100 	 mvn r0,#1
 433              	.LVL53:
 912:../Libraries/XMCLib/src/xmc_usbh.c **** 
 434              	 .loc 1 912 0
 435 0044 10BD     	 pop {r4,pc}
 436              	.L41:
 437 0046 00BF     	 .align 2
 438              	.L40:
 439 0048 00000000 	 .word .LANCHOR1
 440 004c 00000000 	 .word pipe
 441              	 .cfi_endproc
 442              	.LFE199:
 444              	 .section .text.XMC_USBH_PipeCreate,"ax",%progbits
 445              	 .align 1
 446              	 .thumb
 447              	 .thumb_func
 449              	XMC_USBH_PipeCreate:
 450              	.LFB197:
 731:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 451              	 .loc 1 731 0
 452              	 .cfi_startproc
 453              	 
 454              	 
 455              	.LVL54:
 456 0000 2DE9F74F 	 push {r0,r1,r2,r4,r5,r6,r7,r8,r9,r10,fp,lr}
 457              	.LCFI4:
 458              	 .cfi_def_cfa_offset 48
 459              	 .cfi_offset 4,-36
 460              	 .cfi_offset 5,-32
 461              	 .cfi_offset 6,-28
 462              	 .cfi_offset 7,-24
 463              	 .cfi_offset 8,-20
 464              	 .cfi_offset 9,-16
 465              	 .cfi_offset 10,-12
 466              	 .cfi_offset 11,-8
 467              	 .cfi_offset 14,-4
 741:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 468              	 .loc 1 741 0
 469 0004 3149     	 ldr r1,.L62
 470              	.LVL55:
 731:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 471              	 .loc 1 731 0
 472 0006 9DF830C0 	 ldrb ip,[sp,#48]
 741:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 473              	 .loc 1 741 0
 474 000a 4A7C     	 ldrb r2,[r1,#17]
 475              	.LVL56:
 731:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t    *ptr_pipe;
 476              	 .loc 1 731 0
 477 000c 9DF834B0 	 ldrb fp,[sp,#52]
 478 0010 BDF83850 	 ldrh r5,[sp,#56]
 479 0014 9DF83C30 	 ldrb r3,[sp,#60]
 480              	.LVL57:
 481 0018 8046     	 mov r8,r0
 741:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 482              	 .loc 1 741 0
 483 001a 52B1     	 cbz r2,.L60
 748:../Libraries/XMCLib/src/xmc_usbh.c **** 
 484              	 .loc 1 748 0
 485 001c 4E68     	 ldr r6,[r1,#4]
 486              	.LVL58:
 487 001e 06F5E072 	 add r2,r6,#448
 488 0022 3446     	 mov r4,r6
 489              	.LVL59:
 490              	.L45:
 751:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 491              	 .loc 1 751 0
 492 0024 2168     	 ldr r1,[r4]
 493 0026 31F04041 	 bics r1,r1,#-1073741824
 494 002a 05D0     	 beq .L44
 755:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 495              	 .loc 1 755 0 discriminator 2
 496 002c 2034     	 adds r4,r4,#32
 497              	.LVL60:
 750:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_ch->HCCHAR & 0x3FFFFFFFU) == 0U)
 498              	 .loc 1 750 0 discriminator 2
 499 002e 9442     	 cmp r4,r2
 500 0030 F8D1     	 bne .L45
 501              	.LVL61:
 502              	.L60:
 743:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 503              	 .loc 1 743 0
 504 0032 4FF00009 	 mov r9,#0
 505 0036 45E0     	 b .L59
 506              	.LVL62:
 507              	.L44:
 765:../Libraries/XMCLib/src/xmc_usbh.c **** 
 508              	 .loc 1 765 0
 509 0038 A61B     	 subs r6,r4,r6
 510              	.LVL63:
 767:../Libraries/XMCLib/src/xmc_usbh.c **** 
 511              	 .loc 1 767 0
 512 003a 254F     	 ldr r7,.L62+4
 513 003c 0193     	 str r3,[sp,#4]
 514 003e 26F01F06 	 bic r6,r6,#31
 515              	.LVL64:
 516 0042 06EB070A 	 add r10,r6,r7
 517 0046 2022     	 movs r2,#32
 518 0048 5046     	 mov r0,r10
 519              	.LVL65:
 520 004a CDF800C0 	 str ip,[sp]
 521 004e FFF7FEFF 	 bl memset
 522              	.LVL66:
 779:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 523              	 .loc 1 779 0
 524 0052 4FEA8B41 	 lsl r1,fp,#18
 777:../Libraries/XMCLib/src/xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 525              	 .loc 1 777 0
 526 0056 DDF800C0 	 ldr ip,[sp]
 776:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 527              	 .loc 1 776 0
 528 005a C5F30A02 	 ubfx r2,r5,#0,#11
 779:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 529              	 .loc 1 779 0
 530 005e 01F44021 	 and r1,r1,#786432
 780:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Store Pipe settings */
 531              	 .loc 1 780 0
 532 0062 4FEA8858 	 lsl r8,r8,#22
 533 0066 0A43     	 orrs r2,r2,r1
 534 0068 08F0FE58 	 and r8,r8,#532676608
 535 006c 42EA0808 	 orr r8,r2,r8
 777:../Libraries/XMCLib/src/xmc_usbh.c ****                        (uint32_t)(USB_CH_HCCHAR_EPDir_Msk * loc_val) |
 536              	 .loc 1 777 0
 537 0070 4FEACC22 	 lsl r2,ip,#11
 538 0074 02F4F042 	 and r2,r2,#30720
 772:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 539              	 .loc 1 772 0
 540 0078 5FEADC13 	 lsrs r3,ip,#7
 541 007c 48EA0208 	 orr r8,r8,r2
 778:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_EPTYPE (ep_type) ) |
 542              	 .loc 1 778 0
 543 0080 0CBF     	 ite eq
 544 0082 4FF40042 	 moveq r2,#32768
 545 0086 0022     	 movne r2,#0
 779:../Libraries/XMCLib/src/xmc_usbh.c ****                        (USB_CH_HCCHARx_DEVADDR (dev_addr) ) ;
 546              	 .loc 1 779 0
 547 0088 48EA0202 	 orr r2,r8,r2
 784:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 548              	 .loc 1 784 0
 549 008c BBF1010F 	 cmp fp,#1
 776:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCCHARx_EPNUM(ep_addr)) |
 550              	 .loc 1 776 0
 551 0090 2260     	 str r2,[r4]
 552 0092 A146     	 mov r9,r4
 782:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe->ep_type            = ep_type;
 553              	 .loc 1 782 0
 554 0094 AAF81450 	 strh r5,[r10,#20]
 784:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 555              	 .loc 1 784 0
 556 0098 019B     	 ldr r3,[sp,#4]
 783:../Libraries/XMCLib/src/xmc_usbh.c ****       switch (ep_type) {
 557              	 .loc 1 783 0
 558 009a 8AF81AB0 	 strb fp,[r10,#26]
 784:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 559              	 .loc 1 784 0
 560 009e 0ED1     	 bne .L61
 561              	.L46:
 790:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interval_reload = ep_interval;
 562              	 .loc 1 790 0
 563 00a0 0BB1     	 cbz r3,.L47
 791:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 564              	 .loc 1 791 0
 565 00a2 BA19     	 adds r2,r7,r6
 566 00a4 D382     	 strh r3,[r2,#22]
 567              	.L47:
 793:../Libraries/XMCLib/src/xmc_usbh.c ****           loc_val = ((((uint32_t)ep_max_packet_size >> 11U) + 1U) & 3U);
 568              	 .loc 1 793 0
 569 00a6 3744     	 add r7,r7,r6
 794:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHARx_MCEC(loc_val);
 570              	 .loc 1 794 0
 571 00a8 ED0A     	 lsrs r5,r5,#11
 793:../Libraries/XMCLib/src/xmc_usbh.c ****           loc_val = ((((uint32_t)ep_max_packet_size >> 11U) + 1U) & 3U);
 572              	 .loc 1 793 0
 573 00aa FB8A     	 ldrh r3,[r7,#22]
 574 00ac 3B83     	 strh r3,[r7,#24]
 575              	.LVL67:
 795:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 576              	 .loc 1 795 0
 577 00ae 2368     	 ldr r3,[r4]
 794:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHARx_MCEC(loc_val);
 578              	 .loc 1 794 0
 579 00b0 0135     	 adds r5,r5,#1
 580 00b2 05F00305 	 and r5,r5,#3
 795:../Libraries/XMCLib/src/xmc_usbh.c ****           break;
 581              	 .loc 1 795 0
 582 00b6 43EA0555 	 orr r5,r3,r5,lsl#20
 583 00ba 2560     	 str r5,[r4]
 796:../Libraries/XMCLib/src/xmc_usbh.c ****         default:
 584              	 .loc 1 796 0
 585 00bc 02E0     	 b .L59
 586              	.LVL68:
 587              	.L61:
 784:../Libraries/XMCLib/src/xmc_usbh.c ****         case XMC_USBH_ENDPOINT_CONTROL:
 588              	 .loc 1 784 0
 589 00be BBF1030F 	 cmp fp,#3
 590 00c2 EDD0     	 beq .L46
 591              	.LVL69:
 592              	.L59:
 803:../Libraries/XMCLib/src/xmc_usbh.c **** 
 593              	 .loc 1 803 0
 594 00c4 4846     	 mov r0,r9
 595 00c6 03B0     	 add sp,sp,#12
 596              	.LCFI5:
 597              	 .cfi_def_cfa_offset 36
 598              	 
 599 00c8 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 600              	.LVL70:
 601              	.L63:
 602              	 .align 2
 603              	.L62:
 604 00cc 00000000 	 .word .LANCHOR1
 605 00d0 00000000 	 .word pipe
 606              	 .cfi_endproc
 607              	.LFE197:
 609              	 .section .text.XMC_USBH_PipeTransferGetResult,"ax",%progbits
 610              	 .align 1
 611              	 .thumb
 612              	 .thumb_func
 614              	XMC_USBH_PipeTransferGetResult:
 615              	.LFB202:
 956:../Libraries/XMCLib/src/xmc_usbh.c **** 
 957:../Libraries/XMCLib/src/xmc_usbh.c **** /**
 958:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
 959:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param packet Packet information with bit masks to represent packet data toggle information and 
 960:../Libraries/XMCLib/src/xmc_usbh.c ****  *               \ref XMC_USBH_PACKET_DATA0 / \ref XMC_USBH_PACKET_DATA1, \ref XMC_USBH_PACKET_SETU
 961:../Libraries/XMCLib/src/xmc_usbh.c ****  *               \ref XMC_USBH_PACKET_OUT / \ref XMC_USBH_PACKET_IN
 962:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param data Pointer to buffer with data to send or for received data to be stored.
 963:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param num Number of data bytes to transfer
 964:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
 965:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 966:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Description:</b><BR>
 967:../Libraries/XMCLib/src/xmc_usbh.c ****  *  Transfer packets through USB Pipe. Handles transfer of multiple packets using the pipe transfer
 968:../Libraries/XMCLib/src/xmc_usbh.c ****  *  The pipe event callback function will be called when the transfer is completed.\n
 969:../Libraries/XMCLib/src/xmc_usbh.c ****  *
 970:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
 971:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeReset() \n
 972:../Libraries/XMCLib/src/xmc_usbh.c **** */
 973:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeTransfer (XMC_USBH_PIPE_HANDLE pipe_hndl, uint32_t packet, uint8_t *dat
 974:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 975:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 976:../Libraries/XMCLib/src/xmc_usbh.c **** 
 977:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 978:../Libraries/XMCLib/src/xmc_usbh.c ****   { 
 979:../Libraries/XMCLib/src/xmc_usbh.c ****     status = XMC_USBH_DRIVER_ERROR;
 980:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 981:../Libraries/XMCLib/src/xmc_usbh.c ****   else
 982:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 983:../Libraries/XMCLib/src/xmc_usbh.c **** 
 984:../Libraries/XMCLib/src/xmc_usbh.c ****     if(!(((((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_OUT) ||
 985:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_IN))) ||
 986:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_SETUP )))
 987:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 988:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 989:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 990:../Libraries/XMCLib/src/xmc_usbh.c ****     else
 991:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 992:../Libraries/XMCLib/src/xmc_usbh.c ****       if (pipe_hndl  == 0U)
 993:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 994:../Libraries/XMCLib/src/xmc_usbh.c ****         status = XMC_USBH_DRIVER_ERROR_PARAMETER;
 995:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 996:../Libraries/XMCLib/src/xmc_usbh.c ****       else
 997:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 998:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((XMC_USBH0_device.global_register->HPRT & USB_HPRT_PrtConnSts_Msk) == 0U)
 999:../Libraries/XMCLib/src/xmc_usbh.c ****         {
1000:../Libraries/XMCLib/src/xmc_usbh.c ****           status = XMC_USBH_DRIVER_ERROR;
1001:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1002:../Libraries/XMCLib/src/xmc_usbh.c ****         else
1003:../Libraries/XMCLib/src/xmc_usbh.c ****         {
1004:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[((USB0_CH_TypeDef *)pipe_hndl - (USB0_CH_TypeDef *)
1005:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->in_use != 0U)
1006:../Libraries/XMCLib/src/xmc_usbh.c ****           {
1007:../Libraries/XMCLib/src/xmc_usbh.c ****             status = XMC_USBH_DRIVER_ERROR_BUSY;
1008:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1009:../Libraries/XMCLib/src/xmc_usbh.c ****           else
1010:../Libraries/XMCLib/src/xmc_usbh.c ****           {
1011:../Libraries/XMCLib/src/xmc_usbh.c ****             /* Prepare transfer information */
1012:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet                = packet;
1013:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->data                  = data;
1014:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num                   = num;
1015:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferred_total = 0U;
1016:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring      = 0U;
1017:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use                = 0U;
1018:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->transfer_active       = 0U;
1019:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered   = 0U;
1020:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event                 = 0U;
1021:../Libraries/XMCLib/src/xmc_usbh.c **** 
1022:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) && (ptr_pipe->interval 
1023:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U; /* transfer will be started inside interrupt (SOF
1024:../Libraries/XMCLib/src/xmc_usbh.c ****             } else {
1025:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->transfer_active     = 1U;
1026:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U;
1027:../Libraries/XMCLib/src/xmc_usbh.c ****               if(XMC_lStartTransfer (ptr_pipe, (USB0_CH_TypeDef *)pipe_hndl) == false)
1028:../Libraries/XMCLib/src/xmc_usbh.c ****               {
1029:../Libraries/XMCLib/src/xmc_usbh.c ****                 status = XMC_USBH_DRIVER_ERROR;
1030:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1031:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1032:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1033:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1034:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1035:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1036:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1037:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
1038:../Libraries/XMCLib/src/xmc_usbh.c **** }
1039:../Libraries/XMCLib/src/xmc_usbh.c **** 
1040:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1041:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
1042:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return uint32_t Number of successfully transferred data bytes
1043:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1044:../Libraries/XMCLib/src/xmc_usbh.c ****  *  \par<b>Description:</b><BR>
1045:../Libraries/XMCLib/src/xmc_usbh.c ****  *  Get result of USB Pipe transfer.
1046:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1047:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
1048:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
1049:../Libraries/XMCLib/src/xmc_usbh.c **** */
1050:../Libraries/XMCLib/src/xmc_usbh.c **** static uint32_t XMC_USBH_PipeTransferGetResult (XMC_USBH_PIPE_HANDLE pipe_hndl) {
 616              	 .loc 1 1050 0
 617              	 .cfi_startproc
 618              	 
 619              	 
 620              	 
 621              	.LVL71:
1051:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t status;
1052:../Libraries/XMCLib/src/xmc_usbh.c ****   if (pipe_hndl == 0U)
 622              	 .loc 1 1052 0
 623 0000 38B1     	 cbz r0,.L65
 624              	.LVL72:
 625              	.LBB16:
 626              	.LBB17:
1053:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1054:../Libraries/XMCLib/src/xmc_usbh.c ****     status = 0U;
1055:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1056:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1057:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1058:../Libraries/XMCLib/src/xmc_usbh.c ****     status = (pipe[((USB0_CH_TypeDef *)pipe_hndl - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channe
 627              	 .loc 1 1058 0
 628 0002 044B     	 ldr r3,.L67
 629 0004 5B68     	 ldr r3,[r3,#4]
 630 0006 C01A     	 subs r0,r0,r3
 631              	.LVL73:
 632 0008 034B     	 ldr r3,.L67+4
 633 000a 20F01F00 	 bic r0,r0,#31
 634 000e 1844     	 add r0,r0,r3
 635 0010 4068     	 ldr r0,[r0,#4]
 636              	.LVL74:
 637              	.L65:
 638              	.LBE17:
 639              	.LBE16:
1059:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1060:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
1061:../Libraries/XMCLib/src/xmc_usbh.c **** }
 640              	 .loc 1 1061 0
 641 0012 7047     	 bx lr
 642              	.L68:
 643              	 .align 2
 644              	.L67:
 645 0014 00000000 	 .word .LANCHOR1
 646 0018 08000000 	 .word pipe+8
 647              	 .cfi_endproc
 648              	.LFE202:
 650              	 .section .text.XMC_USBH_GetFrameNumber,"ax",%progbits
 651              	 .align 1
 652              	 .thumb
 653              	 .thumb_func
 655              	XMC_USBH_GetFrameNumber:
 656              	.LFB204:
1062:../Libraries/XMCLib/src/xmc_usbh.c **** 
1063:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1064:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param pipe_hndl Pointer returned by the pipe create function. It is the hardware based address 
1065:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Execution_status
1066:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1067:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1068:../Libraries/XMCLib/src/xmc_usbh.c ****  * Abort current USB Pipe transfer.\n
1069:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1070:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Related APIs:</b><BR>
1071:../Libraries/XMCLib/src/xmc_usbh.c ****  * XMC_USBH_PipeCreate(), XMC_USBH_PipeModify(), XMC_USBH_PipeDelete(), XMC_USBH_PipeTransfer() \n
1072:../Libraries/XMCLib/src/xmc_usbh.c **** */
1073:../Libraries/XMCLib/src/xmc_usbh.c **** static int32_t XMC_USBH_PipeTransferAbort (XMC_USBH_PIPE_HANDLE pipe_hndl) {
1074:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
1075:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
1076:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t timeout;
1077:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_ERROR;
1078:../Libraries/XMCLib/src/xmc_usbh.c ****   
1079:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch = (USB0_CH_TypeDef *) pipe_hndl;
1080:../Libraries/XMCLib/src/xmc_usbh.c ****   
1081:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
1082:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1083:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Error in power state*/
1084:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1085:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1086:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1087:../Libraries/XMCLib/src/xmc_usbh.c ****     if (pipe_hndl  == 0U)
1088:../Libraries/XMCLib/src/xmc_usbh.c ****     {
1089:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR_PARAMETER;
1090:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1091:../Libraries/XMCLib/src/xmc_usbh.c ****     else
1092:../Libraries/XMCLib/src/xmc_usbh.c ****     {
1093:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t *)(&pipe[(ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_cha
1094:../Libraries/XMCLib/src/xmc_usbh.c **** 
1095:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->in_use != 0U) {
1096:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->in_use = 0U;
1097:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Disable channel if not yet halted */
1098:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) == 0U)
1099:../Libraries/XMCLib/src/xmc_usbh.c ****         {
1100:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_ch->HCCHAR & USB_CH_HCCHAR_ChEna_Msk)
1101:../Libraries/XMCLib/src/xmc_usbh.c ****           {
1102:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;
1103:../Libraries/XMCLib/src/xmc_usbh.c ****             (void)XMC_USBH_osDelay(1U);
1104:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_ch->HCINT & USB_CH_HCINT_NAK_Msk) {
1105:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;    /* Clear all interrupts */
1106:../Libraries/XMCLib/src/xmc_usbh.c ****               status = XMC_USBH_DRIVER_OK;
1107:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1108:../Libraries/XMCLib/src/xmc_usbh.c ****             else
1109:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1110:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;      /* Clear all interrupts */
1111:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCCHAR =  (uint32_t)(ptr_ch->HCCHAR | USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR
1112:../Libraries/XMCLib/src/xmc_usbh.c **** 
1113:../Libraries/XMCLib/src/xmc_usbh.c ****               /* wait until channel is halted */
1114:../Libraries/XMCLib/src/xmc_usbh.c ****               for (timeout = 0U; timeout < 5000U; timeout++) {
1115:../Libraries/XMCLib/src/xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
1116:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_ch->HCINT = USB_CH_HCINTx_ALL;
1117:../Libraries/XMCLib/src/xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
1118:../Libraries/XMCLib/src/xmc_usbh.c ****                 }
1119:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1120:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1121:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1122:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1123:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1124:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1125:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1126:../Libraries/XMCLib/src/xmc_usbh.c **** 
1127:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
1128:../Libraries/XMCLib/src/xmc_usbh.c **** }
1129:../Libraries/XMCLib/src/xmc_usbh.c **** 
1130:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1131:../Libraries/XMCLib/src/xmc_usbh.c ****  * @return Frame number.
1132:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1133:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1134:../Libraries/XMCLib/src/xmc_usbh.c ****  * Get current USB Frame Number.
1135:../Libraries/XMCLib/src/xmc_usbh.c **** */
1136:../Libraries/XMCLib/src/xmc_usbh.c **** static uint16_t XMC_USBH_GetFrameNumber (void)
1137:../Libraries/XMCLib/src/xmc_usbh.c **** {
 657              	 .loc 1 1137 0
 658              	 .cfi_startproc
 659              	 
 660              	 
 661              	 
1138:../Libraries/XMCLib/src/xmc_usbh.c ****   uint16_t status;
1139:../Libraries/XMCLib/src/xmc_usbh.c ****   
1140:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 662              	 .loc 1 1140 0
 663 0000 044B     	 ldr r3,.L72
 664 0002 587C     	 ldrb r0,[r3,#17]
 665 0004 20B1     	 cbz r0,.L70
 666              	.LBB20:
 667              	.LBB21:
1141:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1142:../Libraries/XMCLib/src/xmc_usbh.c ****     status = 0U;
1143:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1144:../Libraries/XMCLib/src/xmc_usbh.c ****   else
1145:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1146:../Libraries/XMCLib/src/xmc_usbh.c ****     status = (uint16_t)((XMC_USBH0_device.global_register->HFNUM) & 0xFFFU);
 668              	 .loc 1 1146 0
 669 0006 1B68     	 ldr r3,[r3]
 670 0008 D3F80804 	 ldr r0,[r3,#1032]
 671 000c C0F30B00 	 ubfx r0,r0,#0,#12
 672              	.LVL75:
 673              	.L70:
 674              	.LBE21:
 675              	.LBE20:
1147:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1148:../Libraries/XMCLib/src/xmc_usbh.c ****   return status;
1149:../Libraries/XMCLib/src/xmc_usbh.c **** }
 676              	 .loc 1 1149 0
 677 0010 7047     	 bx lr
 678              	.L73:
 679 0012 00BF     	 .align 2
 680              	.L72:
 681 0014 00000000 	 .word .LANCHOR1
 682              	 .cfi_endproc
 683              	.LFE204:
 685              	 .section .text.XMC_USBH_PortVbusOnOff,"ax",%progbits
 686              	 .align 1
 687              	 .thumb
 688              	 .thumb_func
 690              	XMC_USBH_PortVbusOnOff:
 691              	.LFB192:
 506:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 692              	 .loc 1 506 0
 693              	 .cfi_startproc
 694              	 
 695              	 
 696              	.LVL76:
 697 0000 38B5     	 push {r3,r4,r5,lr}
 698              	.LCFI6:
 699              	 .cfi_def_cfa_offset 16
 700              	 .cfi_offset 3,-16
 701              	 .cfi_offset 4,-12
 702              	 .cfi_offset 5,-8
 703              	 .cfi_offset 14,-4
 508:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 704              	 .loc 1 508 0
 705 0002 144B     	 ldr r3,.L79
 706 0004 5A7C     	 ldrb r2,[r3,#17]
 506:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 707              	 .loc 1 506 0
 708 0006 0546     	 mov r5,r0
 709 0008 0C46     	 mov r4,r1
 508:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 710              	 .loc 1 508 0
 711 000a E2B1     	 cbz r2,.L77
 514:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 712              	 .loc 1 514 0
 713 000c F0B9     	 cbnz r0,.L78
 714              	.LBB24:
 715              	.LBB25:
 522:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 716              	 .loc 1 522 0
 717 000e 1868     	 ldr r0,[r3]
 718              	.LVL77:
 719 0010 1149     	 ldr r1,.L79+4
 720              	.LVL78:
 721 0012 124A     	 ldr r2,.L79+8
 722 0014 D0F84034 	 ldr r3,[r0,#1088]
 723              	.LBE25:
 724              	.LBE24:
 520:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Port power on */
 725              	 .loc 1 520 0
 726 0018 54B1     	 cbz r4,.L76
 727              	.LVL79:
 728              	.LBB27:
 729              	.LBB26:
 522:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 730              	 .loc 1 522 0
 731 001a 43F48053 	 orr r3,r3,#4096
 732 001e C0F84034 	 str r3,[r0,#1088]
 523:../Libraries/XMCLib/src/xmc_usbh.c ****       } else {
 733              	 .loc 1 523 0
 734 0022 0868     	 ldr r0,[r1]
 735 0024 1178     	 ldrb r1,[r2]
 736 0026 8822     	 movs r2,#136
 737 0028 FFF7FEFF 	 bl XMC_GPIO_SetMode
 738              	.LVL80:
 739 002c 2846     	 mov r0,r5
 740 002e 38BD     	 pop {r3,r4,r5,pc}
 741              	.LVL81:
 742              	.L76:
 743              	.LBE26:
 744              	.LBE27:
 526:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_INPUT_TRISTATE);
 745              	 .loc 1 526 0
 746 0030 23F48053 	 bic r3,r3,#4096
 747 0034 C0F84034 	 str r3,[r0,#1088]
 527:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 748              	 .loc 1 527 0
 749 0038 0868     	 ldr r0,[r1]
 750 003a 1178     	 ldrb r1,[r2]
 751 003c 2246     	 mov r2,r4
 752 003e FFF7FEFF 	 bl XMC_GPIO_SetMode
 753              	.LVL82:
 507:../Libraries/XMCLib/src/xmc_usbh.c ****   if (XMC_USBH0_device.power_state == XMC_USBH_POWER_OFF)
 754              	 .loc 1 507 0
 755 0042 2046     	 mov r0,r4
 756 0044 38BD     	 pop {r3,r4,r5,pc}
 757              	.LVL83:
 758              	.L77:
 510:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 759              	 .loc 1 510 0
 760 0046 4FF0FF30 	 mov r0,#-1
 761              	.LVL84:
 762 004a 38BD     	 pop {r3,r4,r5,pc}
 763              	.LVL85:
 764              	.L78:
 516:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 765              	 .loc 1 516 0
 766 004c 6FF00400 	 mvn r0,#4
 767              	.LVL86:
 532:../Libraries/XMCLib/src/xmc_usbh.c **** 
 768              	 .loc 1 532 0
 769 0050 38BD     	 pop {r3,r4,r5,pc}
 770              	.L80:
 771 0052 00BF     	 .align 2
 772              	.L79:
 773 0054 00000000 	 .word .LANCHOR1
 774 0058 00000000 	 .word .LANCHOR2
 775 005c 00000000 	 .word .LANCHOR3
 776              	 .cfi_endproc
 777              	.LFE192:
 779              	 .section .text.XMC_USBH_Initialize,"ax",%progbits
 780              	 .align 1
 781              	 .thumb
 782              	 .thumb_func
 784              	XMC_USBH_Initialize:
 785              	.LFB189:
 344:../Libraries/XMCLib/src/xmc_usbh.c **** 
 786              	 .loc 1 344 0
 787              	 .cfi_startproc
 788              	 
 789              	 
 790              	.LVL87:
 791 0000 10B5     	 push {r4,lr}
 792              	.LCFI7:
 793              	 .cfi_def_cfa_offset 8
 794              	 .cfi_offset 4,-8
 795              	 .cfi_offset 14,-4
 348:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 796              	 .loc 1 348 0
 797 0002 0D4C     	 ldr r4,.L85
 798 0004 237C     	 ldrb r3,[r4,#16]
 799 0006 A3B9     	 cbnz r3,.L82
 800              	.LVL88:
 801              	.LBB30:
 802              	.LBB31:
 355:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPipeEvent_cb = cb_pipe_event;
 803              	 .loc 1 355 0
 804 0008 A060     	 str r0,[r4,#8]
 356:../Libraries/XMCLib/src/xmc_usbh.c **** 
 805              	 .loc 1 356 0
 806 000a E160     	 str r1,[r4,#12]
 807              	.LVL89:
 808              	.L83:
 809 000c 03F5A022 	 add r2,r3,#327680
 810 0010 4132     	 adds r2,r2,#65
 360:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 811              	 .loc 1 360 0
 812 0012 0A49     	 ldr r1,.L85+4
 813 0014 1203     	 lsls r2,r2,#12
 814 0016 41F82320 	 str r2,[r1,r3,lsl#2]
 359:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_dfifo_ptr[channel] = (uint32_t *)((uint32_t)USB0_BASE + ((channel + 1U) * 0x01000U)
 815              	 .loc 1 359 0
 816 001a 0133     	 adds r3,r3,#1
 817              	.LVL90:
 818 001c 0E2B     	 cmp r3,#14
 819 001e F5D1     	 bne .L83
 363:../Libraries/XMCLib/src/xmc_usbh.c ****   
 820              	 .loc 1 363 0
 821 0020 074B     	 ldr r3,.L85+8
 822              	.LVL91:
 823 0022 1868     	 ldr r0,[r3]
 824              	.LVL92:
 825 0024 074B     	 ldr r3,.L85+12
 826 0026 8822     	 movs r2,#136
 827 0028 1978     	 ldrb r1,[r3]
 828 002a FFF7FEFF 	 bl XMC_GPIO_SetMode
 829              	.LVL93:
 365:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 830              	 .loc 1 365 0
 831 002e 0123     	 movs r3,#1
 832 0030 2374     	 strb r3,[r4,#16]
 833              	.LVL94:
 834              	.L82:
 835              	.LBE31:
 836              	.LBE30:
 368:../Libraries/XMCLib/src/xmc_usbh.c **** 
 837              	 .loc 1 368 0
 838 0032 0020     	 movs r0,#0
 839 0034 10BD     	 pop {r4,pc}
 840              	.L86:
 841 0036 00BF     	 .align 2
 842              	.L85:
 843 0038 00000000 	 .word .LANCHOR1
 844 003c 00000000 	 .word .LANCHOR4
 845 0040 00000000 	 .word .LANCHOR2
 846 0044 00000000 	 .word .LANCHOR3
 847              	 .cfi_endproc
 848              	.LFE189:
 850              	 .section .text.XMC_lStartTransfer,"ax",%progbits
 851              	 .align 1
 852              	 .thumb
 853              	 .thumb_func
 855              	XMC_lStartTransfer:
 856              	.LFB186:
 160:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hcchar;
 857              	 .loc 1 160 0
 858              	 .cfi_startproc
 859              	 
 860              	 
 861              	.LVL95:
 176:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 862              	 .loc 1 176 0
 863 0000 564A     	 ldr r2,.L113
 864 0002 D2F800C0 	 ldr ip,[r2]
 865 0006 DCF84034 	 ldr r3,[ip,#1088]
 866 000a 13F00103 	 ands r3,r3,#1
 160:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  hcchar;
 867              	 .loc 1 160 0
 868 000e 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 869              	.LCFI8:
 870              	 .cfi_def_cfa_offset 28
 871              	 .cfi_offset 4,-28
 872              	 .cfi_offset 5,-24
 873              	 .cfi_offset 6,-20
 874              	 .cfi_offset 7,-16
 875              	 .cfi_offset 8,-12
 876              	 .cfi_offset 9,-8
 877              	 .cfi_offset 14,-4
 170:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  *ptr_dest = NULL;
 878              	 .loc 1 170 0
 879 0012 4568     	 ldr r5,[r0,#4]
 880              	.LVL96:
 881 0014 9646     	 mov lr,r2
 176:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 882              	 .loc 1 176 0
 883 0016 00F09E80 	 beq .L107
 183:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Save transfer size register to local variable */
 884              	 .loc 1 183 0
 885 001a 0A68     	 ldr r2,[r1]
 886              	.LVL97:
 203:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_IN:
 887              	 .loc 1 203 0
 888 001c 0468     	 ldr r4,[r0]
 185:../Libraries/XMCLib/src/xmc_usbh.c ****     hcintmsk = 0U;
 889              	 .loc 1 185 0
 890 001e 0B69     	 ldr r3,[r1,#16]
 891              	.LVL98:
 191:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;
 892              	 .loc 1 191 0
 893 0020 22F08042 	 bic r2,r2,#1073741824
 894              	.LVL99:
 203:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_IN:
 895              	 .loc 1 203 0
 896 0024 04F00F07 	 and r7,r4,#15
 191:../Libraries/XMCLib/src/xmc_usbh.c ****     hcchar |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;
 897              	 .loc 1 191 0
 898 0028 22F40042 	 bic r2,r2,#32768
 899              	.LVL100:
 203:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_IN:
 900              	 .loc 1 203 0
 901 002c 012F     	 cmp r7,#1
 192:../Libraries/XMCLib/src/xmc_usbh.c **** 
 902              	 .loc 1 192 0
 903 002e 42F00046 	 orr r6,r2,#-2147483648
 904              	.LVL101:
 200:../Libraries/XMCLib/src/xmc_usbh.c **** 
 905              	 .loc 1 200 0
 906 0032 03F0C043 	 and r3,r3,#1610612736
 907              	.LVL102:
 203:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_IN:
 908              	 .loc 1 203 0
 909 0036 07D0     	 beq .L108
 910 0038 032F     	 cmp r7,#3
 195:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
 911              	 .loc 1 195 0
 912 003a 12BF     	 itee ne
 913 003c 9927     	 movne r7,#153
 206:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Enable IN transfer specific interrupts */
 914              	 .loc 1 206 0
 915 003e 42F08026 	 orreq r6,r2,#-2147450880
 916              	.LVL103:
 208:../Libraries/XMCLib/src/xmc_usbh.c ****                        USB_CH_HCINTMSK_BblErrMsk_Msk |
 917              	 .loc 1 208 0
 918 0042 40F2B957 	 movweq r7,#1465
 212:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_OUT:
 919              	 .loc 1 212 0
 920 0046 02E0     	 b .L90
 921              	.LVL104:
 922              	.L108:
 195:../Libraries/XMCLib/src/xmc_usbh.c ****                  USB_CH_HCINTMSK_XferComplMsk_Msk |
 923              	 .loc 1 195 0
 924 0048 9927     	 movs r7,#153
 925              	.LVL105:
 217:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 926              	 .loc 1 217 0
 927 004a 4FF0C043 	 mov r3,#1610612736
 928              	.LVL106:
 929              	.L90:
 223:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_PACKET_DATA0:
 930              	 .loc 1 223 0
 931 004e 04F0F002 	 and r2,r4,#240
 932 0052 102A     	 cmp r2,#16
 933 0054 04D0     	 beq .L93
 230:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 934              	 .loc 1 230 0
 935 0056 202A     	 cmp r2,#32
 936 0058 08BF     	 it eq
 937 005a 4FF08043 	 moveq r3,#1073741824
 938 005e 00E0     	 b .L92
 939              	.L93:
 940              	.LVL107:
 226:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 941              	 .loc 1 226 0
 942 0060 0023     	 movs r3,#0
 943              	.LVL108:
 944              	.L92:
 237:../Libraries/XMCLib/src/xmc_usbh.c ****       hcchar &= (uint32_t)~USB_CH_HCCHAR_OddFrm_Msk;
 945              	 .loc 1 237 0
 946 0062 DCF80824 	 ldr r2,[ip,#1032]
 947 0066 D207     	 lsls r2,r2,#31
 244:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_CONTROL:
 948              	 .loc 1 244 0
 949 0068 827E     	 ldrb r2,[r0,#26]
 238:../Libraries/XMCLib/src/xmc_usbh.c ****     } else {
 950              	 .loc 1 238 0
 951 006a 4CBF     	 ite mi
 952 006c 26F00056 	 bicmi r6,r6,#536870912
 953              	.LVL109:
 240:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 954              	 .loc 1 240 0
 955 0070 46F00056 	 orrpl r6,r6,#536870912
 956              	.LVL110:
 957 0074 06F40048 	 and r8,r6,#32768
 244:../Libraries/XMCLib/src/xmc_usbh.c ****       case XMC_USBH_ENDPOINT_CONTROL:
 958              	 .loc 1 244 0
 959 0078 032A     	 cmp r2,#3
 960 007a 0FD8     	 bhi .L111
 961 007c DFE802F0 	 tbb [pc,r2]
 962              	.L99:
 963 0080 02       	 .byte (.L98-.L99)/2
 964 0081 08       	 .byte (.L100-.L99)/2
 965 0082 02       	 .byte (.L98-.L99)/2
 966 0083 08       	 .byte (.L100-.L99)/2
 967              	 .p2align 1
 968              	.L98:
 247:../Libraries/XMCLib/src/xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->GNPTXSTS;
 969              	 .loc 1 247 0
 970 0084 B8F1000F 	 cmp r8,#0
 971 0088 08D1     	 bne .L111
 248:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 972              	 .loc 1 248 0
 973 008a DCF82C20 	 ldr r2,[ip,#44]
 974              	.LVL111:
 975 008e 06E0     	 b .L97
 976              	.LVL112:
 977              	.L100:
 253:../Libraries/XMCLib/src/xmc_usbh.c ****           txsts = XMC_USBH0_device.global_register->HPTXSTS;
 978              	 .loc 1 253 0
 979 0090 B8F1000F 	 cmp r8,#0
 980 0094 02D1     	 bne .L111
 254:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 981              	 .loc 1 254 0
 982 0096 DCF81024 	 ldr r2,[ip,#1040]
 983              	.LVL113:
 984 009a 00E0     	 b .L97
 985              	.LVL114:
 986              	.L111:
 167:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t  pckt_num;
 987              	 .loc 1 167 0
 988 009c 0022     	 movs r2,#0
 989              	.LVL115:
 990              	.L97:
 262:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Limit transfer to available space inside fifo/queue if OUT transaction */
 991              	 .loc 1 262 0
 992 009e D0F80CC0 	 ldr ip,[r0,#12]
 993 00a2 8468     	 ldr r4,[r0,#8]
 994 00a4 CCEB0404 	 rsb r4,ip,r4
 995              	.LVL116:
 264:../Libraries/XMCLib/src/xmc_usbh.c ****       max_pckt_size =  ptr_pipe->ep_max_packet_size;
 996              	 .loc 1 264 0
 997 00a8 B8F1000F 	 cmp r8,#0
 998 00ac 27D1     	 bne .L101
 266:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_queue  = (uint32_t)((uint32_t)(txsts & 0x00FF0000U) >> 16);
 999              	 .loc 1 266 0
 1000 00ae 1FFA82F9 	 uxth r9,r2
 265:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_fifo = (uint32_t)((uint32_t)(txsts & 0x0000FFFFU) <<  2);
 1001              	 .loc 1 265 0
 1002 00b2 B0F81480 	 ldrh r8,[r0,#20]
 1003              	.LVL117:
 280:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_dest = (uint32_t *)XMC_USBH0_dfifo_ptr[loc_index];
 1004              	 .loc 1 280 0
 1005 00b6 DEF804E0 	 ldr lr,[lr,#4]
 266:../Libraries/XMCLib/src/xmc_usbh.c ****       num_remaining_queue  = (uint32_t)((uint32_t)(txsts & 0x00FF0000U) >> 16);
 1006              	 .loc 1 266 0
 1007 00ba 4FEA8909 	 lsl r9,r9,#2
 1008              	.LVL118:
 1009 00be 4C45     	 cmp r4,r9
 1010 00c0 28BF     	 it cs
 1011 00c2 4C46     	 movcs r4,r9
 1012              	.LVL119:
 267:../Libraries/XMCLib/src/xmc_usbh.c ****       if (num_remaining_transfer > num_remaining_fifo) {
 1013              	 .loc 1 267 0
 1014 00c4 C2F30742 	 ubfx r2,r2,#16,#8
 1015              	.LVL120:
 1016 00c8 08F1FF39 	 add r9,r8,#-1
 1017              	.LVL121:
 271:../Libraries/XMCLib/src/xmc_usbh.c ****       if (pckt_num > num_remaining_queue) {
 1018              	 .loc 1 271 0
 1019 00cc A144     	 add r9,r9,r4
 1020 00ce B9FBF8F9 	 udiv r9,r9,r8
 1021              	.LVL122:
 1022 00d2 4A45     	 cmp r2,r9
 1023 00d4 28BF     	 it cs
 1024 00d6 4A46     	 movcs r2,r9
 1025              	.LVL123:
 275:../Libraries/XMCLib/src/xmc_usbh.c ****         num_remaining_transfer = pckt_num * max_pckt_size;
 1026              	 .loc 1 275 0
 1027 00d8 08FB02F2 	 mul r2,r8,r2
 1028 00dc 9442     	 cmp r4,r2
 280:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_dest = (uint32_t *)XMC_USBH0_dfifo_ptr[loc_index];
 1029              	 .loc 1 280 0
 1030 00de CEEB010E 	 rsb lr,lr,r1
 1031 00e2 28BF     	 it cs
 1032 00e4 1446     	 movcs r4,r2
 1033              	.LVL124:
 279:../Libraries/XMCLib/src/xmc_usbh.c ****       loc_index = ((USB0_CH_TypeDef *)ptr_ch - (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_re
 1034              	 .loc 1 279 0
 1035 00e6 6544     	 add r5,r5,ip
 1036              	.LVL125:
 280:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_dest = (uint32_t *)XMC_USBH0_dfifo_ptr[loc_index];
 1037              	 .loc 1 280 0
 1038 00e8 4FEA6E1E 	 asr lr,lr,#5
 281:../Libraries/XMCLib/src/xmc_usbh.c ****       /* For OUT/SETUP transfer num_transferring represents num of bytes to be sent */
 1039              	 .loc 1 281 0
 1040 00ec DFF874C0 	 ldr ip,.L113+8
 278:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_src  = ptr_pipe->data + ptr_pipe->num_transferred_total;
 1041              	 .loc 1 278 0
 1042 00f0 E21C     	 adds r2,r4,#3
 281:../Libraries/XMCLib/src/xmc_usbh.c ****       /* For OUT/SETUP transfer num_transferring represents num of bytes to be sent */
 1043              	 .loc 1 281 0
 1044 00f2 5CF82EE0 	 ldr lr,[ip,lr,lsl#2]
 283:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1045              	 .loc 1 283 0
 1046 00f6 0461     	 str r4,[r0,#16]
 278:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_src  = ptr_pipe->data + ptr_pipe->num_transferred_total;
 1047              	 .loc 1 278 0
 1048 00f8 C2F38F02 	 ubfx r2,r2,#2,#16
 1049              	.LVL126:
 1050 00fc 02E0     	 b .L102
 1051              	.LVL127:
 1052              	.L101:
 287:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1053              	 .loc 1 287 0
 1054 00fe 0022     	 movs r2,#0
 1055 0100 0261     	 str r2,[r0,#16]
 171:../Libraries/XMCLib/src/xmc_usbh.c ****   uint16_t  cnt;
 1056              	 .loc 1 171 0
 1057 0102 9646     	 mov lr,r2
 1058              	.LVL128:
 1059              	.L102:
 290:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= (((num_remaining_transfer + ptr_pipe->ep_max_packet_size) - 1U) / ptr_pipe->ep_max_
 1060              	 .loc 1 290 0
 1061 0104 5CB1     	 cbz r4,.L103
 291:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |=   num_remaining_transfer;
 1062              	 .loc 1 291 0
 1063 0106 B0F814C0 	 ldrh ip,[r0,#20]
 1064 010a 44EA0300 	 orr r0,r4,r3
 1065              	.LVL129:
 1066 010e 0CF1FF33 	 add r3,ip,#-1
 1067 0112 1C44     	 add r4,r4,r3
 1068              	.LVL130:
 1069 0114 B4FBFCF3 	 udiv r3,r4,ip
 292:../Libraries/XMCLib/src/xmc_usbh.c ****     } else {                                                 /* Zero length packet */
 1070              	 .loc 1 292 0
 1071 0118 40EAC343 	 orr r3,r0,r3,lsl#19
 1072              	.LVL131:
 1073 011c 01E0     	 b .L104
 1074              	.LVL132:
 1075              	.L103:
 294:../Libraries/XMCLib/src/xmc_usbh.c ****       hctsiz |= 0U;                                        /* Transfer size = 0 */
 1076              	 .loc 1 294 0
 1077 011e 43F40023 	 orr r3,r3,#524288
 1078              	.LVL133:
 1079              	.L104:
 1080              	.LBB40:
 1081              	.LBB41:
 1082              	 .file 2 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include/core_cm4.h"
   1:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V5.1.0
   5:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * @date     13. March 2019
   6:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*
   8:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  *
  10:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  *
  12:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  *
  16:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  *
  18:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
  24:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  25:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif
  30:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  31:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  34:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  36:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif
  39:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  40:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
  41:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  44:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  47:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  50:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
  53:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  54:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  55:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
  59:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
  61:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
  62:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  63:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  65:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  71:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  73:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** */
  76:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #else
  81:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  84:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #else
  85:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  87:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
  88:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_FP
  90:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #else
  93:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  96:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #else
  97:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  99:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 100:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 105:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 108:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 109:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 111:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 112:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 117:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 120:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 121:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 123:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 124:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 136:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 148:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 160:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 161:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 162:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 164:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 165:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
 167:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 168:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 169:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 171:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 173:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 176:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 179:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 180:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 186:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 187:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 191:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 192:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 196:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 197:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 201:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 202:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 206:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 207:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 208:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 210:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 212:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 214:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** */
 216:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 217:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #else
 219:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 221:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 224:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 225:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 229:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 230:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 231:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 232:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 233:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 234:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 235:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 236:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 237:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 238:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 239:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 240:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 241:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 242:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 243:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 244:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 245:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** */
 248:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 249:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 250:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 251:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 253:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 254:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 255:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 256:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 257:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 259:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 260:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 261:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   struct
 262:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
 263:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 274:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 275:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 276:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 279:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 282:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 285:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 288:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 291:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 294:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 295:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 296:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 298:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 299:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 300:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   struct
 301:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
 302:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 307:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 308:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 309:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 312:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 313:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 314:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 316:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 317:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 318:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   struct
 319:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
 320:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 335:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 336:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 337:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 340:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 343:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 346:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 349:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 352:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 355:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 358:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 361:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 364:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 367:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 368:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 369:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 371:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 372:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 373:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   struct
 374:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
 375:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 382:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 383:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 384:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 387:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 390:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 393:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 395:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 396:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 397:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 398:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 401:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 402:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 403:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 404:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 406:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 407:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 408:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 410:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[24U];
 412:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 414:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 416:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 418:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 420:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 422:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 423:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 427:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 429:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 430:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 431:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 432:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 435:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 436:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 437:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 438:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 440:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 441:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 442:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 462:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 464:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 465:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 466:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 469:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 472:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 475:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 478:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 481:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 485:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 488:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 491:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 494:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 497:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 500:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 503:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 506:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 509:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 512:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 516:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 520:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 523:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 526:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 529:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 532:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 535:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 538:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 539:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 542:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 545:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 548:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 552:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 555:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 558:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 561:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 564:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 567:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 571:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 574:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 577:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 580:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 583:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 586:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 589:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 592:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 595:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 598:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 601:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 604:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 607:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 610:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 614:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 617:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 620:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 624:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 627:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 630:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 633:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 636:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 639:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 643:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 646:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 649:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 652:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 655:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 658:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 661:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 665:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 668:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 671:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 674:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 677:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 680:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 684:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 687:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 690:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 694:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 697:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 700:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 703:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 706:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 708:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 709:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 710:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 711:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 714:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 715:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 716:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 717:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 719:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 720:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 721:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 722:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 725:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 726:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 730:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 734:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 737:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 740:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 743:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 746:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 748:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 749:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 750:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 751:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 754:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 755:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 756:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 757:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 759:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 760:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 761:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 766:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 767:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 771:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 774:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 777:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 780:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 781:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 784:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 785:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 788:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 792:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 795:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 798:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 800:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 801:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 802:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 803:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 806:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 807:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 808:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 809:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 811:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 812:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 813:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 814:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
 815:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 820:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 822:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 824:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[32U];
 826:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 827:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 830:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 843:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 844:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 848:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 852:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 855:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 858:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 861:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 864:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 867:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 870:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 873:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 876:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 880:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 883:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 886:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 888:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 889:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 890:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 894:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 895:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 896:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
 897:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
 899:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 900:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
 901:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 925:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 926:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 927:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 930:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 933:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 936:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 939:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 942:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 945:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 948:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 951:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 954:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 957:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 960:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 963:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 966:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 969:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 972:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 975:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 978:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 981:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 985:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 989:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 993:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
 997:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1001:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1005:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1009:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1012:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1015:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1018:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1021:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1024:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1027:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1030:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1033:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1035:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1036:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1037:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1041:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1042:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1043:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1044:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1046:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1047:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1048:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1073:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1074:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1078:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1082:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1086:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1089:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1092:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1095:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1099:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1102:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1106:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1110:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1113:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1116:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1119:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1122:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1125:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1128:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1132:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1135:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1139:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1142:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1145:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1148:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1151:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1154:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1157:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1161:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1164:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1168:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1169:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1172:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1175:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1178:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1181:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1184:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1187:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1191:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1194:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1196:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1197:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1199:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1200:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1203:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1204:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1205:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1206:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1208:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1209:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1210:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1222:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1223:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1225:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1226:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1229:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1232:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1235:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1236:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1239:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1242:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1245:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1246:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1249:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1253:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1256:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1259:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1263:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1266:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1269:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1272:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1275:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1278:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1281:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1284:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1287:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1290:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1293:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1294:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1295:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1296:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1299:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1300:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1301:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1302:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1304:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1305:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1306:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1307:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1314:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1315:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1319:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1322:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1325:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1328:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1331:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1334:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1337:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1340:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1343:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1347:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1351:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1354:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1357:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1360:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1364:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1367:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1370:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1373:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1376:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1379:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1382:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1385:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1389:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1392:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1395:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1398:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1400:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1403:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1405:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1406:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1407:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1408:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1411:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1412:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1413:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1414:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1416:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1417:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1418:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1423:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1424:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1428:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1431:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1434:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1437:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1440:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1443:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1446:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1449:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1452:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1455:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1458:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1461:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1465:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1468:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1472:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1475:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1478:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1481:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1484:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1487:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1490:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1493:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1496:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1499:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1502:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1505:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1508:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1510:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1511:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1512:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1513:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1516:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1517:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1518:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1519:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1523:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** */
1524:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1526:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1527:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1531:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** */
1532:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1534:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1536:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1537:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1538:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1539:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1542:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1543:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1544:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1545:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1554:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1563:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif
1567:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1568:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1571:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1572:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1573:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1574:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1575:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1576:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1577:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1578:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1579:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1580:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1581:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1582:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1583:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1584:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** */
1586:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1587:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1588:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1589:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1591:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1595:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1596:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1597:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1601:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #else
1603:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1617:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1621:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #else
1623:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1627:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1629:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1630:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1638:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1639:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1640:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1641:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1644:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1645:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1648:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1650:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1651:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1653:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1660:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1661:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1662:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1663:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1664:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1667:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1669:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1671:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1672:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1673:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1674:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1675:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1678:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1679:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1681:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1683:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1684:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1685:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1686:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1687:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1688:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1689:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1690:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1691:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1692:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1693:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1694:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1695:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1696:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1697:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1698:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1699:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1700:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1701:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1702:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   else
1703:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1704:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1705:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1706:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1707:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1708:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1709:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1710:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1711:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1712:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1713:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1714:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1715:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1716:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1717:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1718:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1719:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 1083              	 .loc 2 1719 0
 1084 0122 0F48     	 ldr r0,.L113+4
 1085 0124 4FF40064 	 mov r4,#2048
 1086 0128 C0F88C40 	 str r4,[r0,#140]
 1087              	.LBB42:
 1088              	.LBB43:
 1089              	 .file 3 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.1.0
   5:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     20. December 2018
   6:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  39:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  43:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  46:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  49:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  55:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  58:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  78:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  86:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  94:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 102:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 110:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 113:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 116:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 117:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 118:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 122:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 123:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 125:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 129:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 131:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 133:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 134:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 135:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 136:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 140:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 142:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 144:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 145:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 146:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 147:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 148:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 150:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 151:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 153:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 154:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 155:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 157:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 158:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 159:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 160:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 162:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 165:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 166:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 168:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 169:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 170:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 172:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 173:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 174:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 175:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 176:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 177:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 178:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 181:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 183:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 185:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 186:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 187:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 189:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 193:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 195:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 197:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 198:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 199:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 200:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 201:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 202:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 204:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 205:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 207:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 208:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 209:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 211:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 212:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 213:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 214:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 215:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 216:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 218:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 219:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 221:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 222:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 223:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 225:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 226:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 227:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 228:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 229:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 230:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 232:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 233:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 235:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 240:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 241:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 243:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 246:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 247:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 249:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 250:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 251:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 253:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 254:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 255:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 256:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 258:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 261:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 262:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 264:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 265:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 266:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 268:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 269:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 270:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 271:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 272:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 273:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 277:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 279:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 281:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 282:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 283:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 285:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 289:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 291:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 293:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 294:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 295:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 296:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 297:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 300:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 301:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 303:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 304:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 305:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 307:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 308:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 310:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 312:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 315:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 316:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 318:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 319:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 320:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 322:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 323:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 324:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 325:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 326:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 327:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 331:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 333:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 335:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 336:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 337:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 339:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 343:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 345:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 347:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 348:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 350:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 352:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 355:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 356:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 358:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 359:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 360:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 362:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 363:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 364:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 365:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 366:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 370:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 372:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 374:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 375:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 376:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 377:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 378:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 379:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 381:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 382:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 384:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 385:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 386:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 388:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 389:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 390:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 391:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 393:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 396:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 397:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 399:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 400:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 401:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 403:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 404:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 405:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 406:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 407:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 408:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 409:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 412:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 414:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 416:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 417:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 418:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 420:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 424:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 426:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 428:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 429:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 430:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 431:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 435:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 436:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 439:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 441:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 443:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 445:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 446:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 447:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 450:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 452:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 454:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 455:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 456:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 457:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 458:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 460:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 461:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 463:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 464:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 465:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 467:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 468:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 469:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 470:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 472:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 475:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 476:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 478:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 479:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 480:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 482:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 483:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 484:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 485:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 486:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 487:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 488:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 491:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 493:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 496:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 499:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 503:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 505:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 507:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 508:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 509:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 510:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 511:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 516:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 518:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 520:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 521:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 522:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 523:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 524:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 526:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 527:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 529:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 530:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 531:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 533:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 534:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 535:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 536:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 538:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 541:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 542:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 544:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 545:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 546:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 548:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 549:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 550:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 551:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 553:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 554:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 557:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 559:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 561:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 562:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 563:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 565:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 569:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 571:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 573:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 574:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 575:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 579:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 580:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 583:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 584:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 588:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 589:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 591:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 592:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 594:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 598:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 599:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 600:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 602:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 603:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 604:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 605:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 607:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 611:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 613:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 614:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 616:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 619:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 620:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 621:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 623:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 624:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 625:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 626:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 627:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 628:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 629:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 633:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 634:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 637:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 639:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 644:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 646:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 647:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 648:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 649:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 651:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 655:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 658:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 660:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 664:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 666:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 667:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 668:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 669:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 670:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 671:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 675:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 676:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 678:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 679:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 681:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 685:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 686:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 687:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 689:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 690:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 691:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 692:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 693:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 695:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 699:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 701:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 702:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 704:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 707:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 708:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 709:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 711:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 712:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 713:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 714:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 715:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 716:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 717:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 721:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 725:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 727:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 732:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 734:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 735:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 736:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 737:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 739:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 743:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 746:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 748:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 752:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 754:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 755:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 756:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 757:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 760:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 761:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 762:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 763:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 766:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 768:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 776:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 777:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 778:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 780:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 781:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 782:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 783:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 784:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 785:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 786:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 787:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 788:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 789:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 792:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 794:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 802:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 804:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 805:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 806:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 807:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 808:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 809:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 810:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 812:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 813:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 816:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 817:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 818:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 819:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 827:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 831:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 832:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 833:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 834:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 836:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 838:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 839:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 842:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 844:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 845:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 846:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 847:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 850:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 852:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 853:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 854:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 855:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 857:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 859:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 860:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 861:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 865:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 866:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 868:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 870:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 871:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 872:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 873:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 877:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 879:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1090              	 .loc 3 879 0
 1091              	
 1092 012c BFF34F8F 	 dsb 0xF
 1093              	
 1094              	 .thumb
 1095              	.LBE43:
 1096              	.LBE42:
 1097              	.LBB44:
 1098              	.LBB45:
 868:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 1099              	 .loc 3 868 0
 1100              	
 1101 0130 BFF36F8F 	 isb 0xF
 1102              	
 1103              	 .thumb
 1104              	.LBE45:
 1105              	.LBE44:
 1106              	.LBE41:
 1107              	.LBE40:
 298:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCTSIZ_BUFFERMODE = hctsiz;           /* Write ch transfer size */
 1108              	 .loc 1 298 0
 1109 0134 CF60     	 str r7,[r1,#12]
 299:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_ch->HCCHAR = hcchar;                      /* Write ch characteristics */
 1110              	 .loc 1 299 0
 1111 0136 0B61     	 str r3,[r1,#16]
 300:../Libraries/XMCLib/src/xmc_usbh.c ****     while (cnt != 0U) {                           /* Load data */
 1112              	 .loc 1 300 0
 1113 0138 0E60     	 str r6,[r1]
 1114              	.LVL134:
 1115              	.L105:
 301:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
 1116              	 .loc 1 301 0
 1117 013a 32B1     	 cbz r2,.L112
 305:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 1118              	 .loc 1 305 0
 1119 013c 55F8043B 	 ldr r3,[r5],#4
 1120              	.LVL135:
 1121 0140 CEF80030 	 str r3,[lr]
 1122              	.LVL136:
 308:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1123              	 .loc 1 308 0
 1124 0144 013A     	 subs r2,r2,#1
 1125              	.LVL137:
 1126 0146 92B2     	 uxth r2,r2
 1127              	.LVL138:
 1128 0148 F7E7     	 b .L105
 1129              	.L112:
 1130              	.LVL139:
 1131              	.LBB46:
 1132              	.LBB47:
1683:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
 1133              	 .loc 2 1683 0
 1134 014a 4FF40063 	 mov r3,#2048
 1135 014e C360     	 str r3,[r0,#12]
 1136              	.LBE47:
 1137              	.LBE46:
 311:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 1138              	 .loc 1 311 0
 1139 0150 0120     	 movs r0,#1
 1140 0152 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 1141              	.LVL140:
 1142              	.L107:
 178:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 1143              	 .loc 1 178 0
 1144 0156 1846     	 mov r0,r3
 1145              	.LVL141:
 314:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1146              	 .loc 1 314 0
 1147 0158 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 1148              	.LVL142:
 1149              	.L114:
 1150              	 .align 2
 1151              	.L113:
 1152 015c 00000000 	 .word .LANCHOR1
 1153 0160 00E100E0 	 .word -536813312
 1154 0164 00000000 	 .word .LANCHOR4
 1155              	 .cfi_endproc
 1156              	.LFE186:
 1158              	 .section .text.XMC_USBH_PipeTransfer,"ax",%progbits
 1159              	 .align 1
 1160              	 .thumb
 1161              	 .thumb_func
 1163              	XMC_USBH_PipeTransfer:
 1164              	.LFB201:
 973:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 1165              	 .loc 1 973 0
 1166              	 .cfi_startproc
 1167              	 
 1168              	 
 1169              	.LVL143:
 1170 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1171              	.LCFI9:
 1172              	 .cfi_def_cfa_offset 24
 1173              	 .cfi_offset 4,-24
 1174              	 .cfi_offset 5,-20
 1175              	 .cfi_offset 6,-16
 1176              	 .cfi_offset 7,-12
 1177              	 .cfi_offset 8,-8
 1178              	 .cfi_offset 14,-4
 973:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 1179              	 .loc 1 973 0
 1180 0004 0646     	 mov r6,r0
 977:../Libraries/XMCLib/src/xmc_usbh.c ****   { 
 1181              	 .loc 1 977 0
 1182 0006 2748     	 ldr r0,.L126
 1183              	.LVL144:
 1184 0008 447C     	 ldrb r4,[r0,#17]
 1185 000a 002C     	 cmp r4,#0
 1186 000c 42D0     	 beq .L121
 984:../Libraries/XMCLib/src/xmc_usbh.c ****         ((packet & XMC_USBH_PACKET_TOKEN_Msk) == XMC_USBH_PACKET_IN))) ||
 1187              	 .loc 1 984 0
 1188 000e 01F00F04 	 and r4,r1,#15
 1189 0012 013C     	 subs r4,r4,#1
 1190 0014 022C     	 cmp r4,#2
 1191 0016 39D8     	 bhi .L120
 992:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 1192              	 .loc 1 992 0
 1193 0018 002E     	 cmp r6,#0
 1194 001a 37D0     	 beq .L120
 998:../Libraries/XMCLib/src/xmc_usbh.c ****         {
 1195              	 .loc 1 998 0
 1196 001c 0468     	 ldr r4,[r0]
 1197 001e D4F84044 	 ldr r4,[r4,#1088]
 1198 0022 E407     	 lsls r4,r4,#31
 1199 0024 36D5     	 bpl .L121
1004:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->in_use != 0U)
 1200              	 .loc 1 1004 0
 1201 0026 4568     	 ldr r5,[r0,#4]
 1202 0028 1F4F     	 ldr r7,.L126+4
 1203 002a 751B     	 subs r5,r6,r5
 1204 002c 25F01F05 	 bic r5,r5,#31
 1205 0030 E819     	 adds r0,r5,r7
 1206              	.LVL145:
1005:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 1207              	 .loc 1 1005 0
 1208 0032 00F1180E 	 add lr,r0,#24
 1209 0036 90F81B80 	 ldrb r8,[r0,#27]
 1210 003a BC46     	 mov ip,r7
 1211 003c 08F0FF04 	 and r4,r8,#255
 1212 0040 B8F1000F 	 cmp r8,#0
 1213 0044 2AD1     	 bne .L122
1012:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->data                  = data;
 1214              	 .loc 1 1012 0
 1215 0046 E951     	 str r1,[r5,r7]
1013:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num                   = num;
 1216              	 .loc 1 1013 0
 1217 0048 4260     	 str r2,[r0,#4]
1014:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferred_total = 0U;
 1218              	 .loc 1 1014 0
 1219 004a 00F10802 	 add r2,r0,#8
 1220              	.LVL146:
 1221 004e 8360     	 str r3,[r0,#8]
 1222              	.LVL147:
1015:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring      = 0U;
 1223              	 .loc 1 1015 0
 1224 0050 5460     	 str r4,[r2,#4]
1016:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use                = 0U;
 1225              	 .loc 1 1016 0
 1226 0052 0461     	 str r4,[r0,#16]
1017:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->transfer_active       = 0U;
 1227              	 .loc 1 1017 0
 1228 0054 C476     	 strb r4,[r0,#27]
1018:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered   = 0U;
 1229              	 .loc 1 1018 0
 1230 0056 0477     	 strb r4,[r0,#28]
1019:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event                 = 0U;
 1231              	 .loc 1 1019 0
 1232 0058 4477     	 strb r4,[r0,#29]
1020:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1233              	 .loc 1 1020 0
 1234 005a 8477     	 strb r4,[r0,#30]
1022:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U; /* transfer will be started inside interrupt (SOF
 1235              	 .loc 1 1022 0
 1236 005c 837E     	 ldrb r3,[r0,#26]
 1237              	.LVL148:
 1238 005e 032B     	 cmp r3,#3
 1239 0060 07D1     	 bne .L117
1022:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U; /* transfer will be started inside interrupt (SOF
 1240              	 .loc 1 1022 0 is_stmt 0 discriminator 1
 1241 0062 038B     	 ldrh r3,[r0,#24]
 1242 0064 9BB2     	 uxth r3,r3
 1243 0066 23B1     	 cbz r3,.L117
1023:../Libraries/XMCLib/src/xmc_usbh.c ****             } else {
 1244              	 .loc 1 1023 0 is_stmt 1
 1245 0068 0123     	 movs r3,#1
 1246 006a C376     	 strb r3,[r0,#27]
 975:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1247              	 .loc 1 975 0
 1248 006c 2046     	 mov r0,r4
 1249              	.LVL149:
1023:../Libraries/XMCLib/src/xmc_usbh.c ****             } else {
 1250              	 .loc 1 1023 0
 1251 006e BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1252              	.LVL150:
 1253              	.L117:
1025:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use              = 1U;
 1254              	 .loc 1 1025 0
 1255 0072 6544     	 add r5,r5,ip
 1256 0074 0123     	 movs r3,#1
 1257 0076 2B77     	 strb r3,[r5,#28]
1027:../Libraries/XMCLib/src/xmc_usbh.c ****               {
 1258              	 .loc 1 1027 0
 1259 0078 3146     	 mov r1,r6
 1260              	.LVL151:
1026:../Libraries/XMCLib/src/xmc_usbh.c ****               if(XMC_lStartTransfer (ptr_pipe, (USB0_CH_TypeDef *)pipe_hndl) == false)
 1261              	 .loc 1 1026 0
 1262 007a EB76     	 strb r3,[r5,#27]
1027:../Libraries/XMCLib/src/xmc_usbh.c ****               {
 1263              	 .loc 1 1027 0
 1264 007c FFF7FEFF 	 bl XMC_lStartTransfer
 1265              	.LVL152:
 1266 0080 80F00100 	 eor r0,r0,#1
 1267 0084 C0B2     	 uxtb r0,r0
 1268 0086 4042     	 negs r0,r0
 1269 0088 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1270              	.LVL153:
 1271              	.L120:
 988:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1272              	 .loc 1 988 0
 1273 008c 6FF00400 	 mvn r0,#4
 1274 0090 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1275              	.LVL154:
 1276              	.L121:
 979:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 1277              	 .loc 1 979 0
 1278 0094 4FF0FF30 	 mov r0,#-1
 1279 0098 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1280              	.LVL155:
 1281              	.L122:
1007:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 1282              	 .loc 1 1007 0
 1283 009c 6FF00100 	 mvn r0,#1
 1284              	.LVL156:
1038:../Libraries/XMCLib/src/xmc_usbh.c **** 
 1285              	 .loc 1 1038 0
 1286 00a0 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 1287              	.LVL157:
 1288              	.L127:
 1289              	 .align 2
 1290              	.L126:
 1291 00a4 00000000 	 .word .LANCHOR1
 1292 00a8 00000000 	 .word pipe
 1293              	 .cfi_endproc
 1294              	.LFE201:
 1296              	 .section .text.XMC_USBH_HandleIrq,"ax",%progbits
 1297              	 .align 1
 1298              	 .global XMC_USBH_HandleIrq
 1299              	 .thumb
 1300              	 .thumb_func
 1302              	XMC_USBH_HandleIrq:
 1303              	.LFB205:
1150:../Libraries/XMCLib/src/xmc_usbh.c **** 
1151:../Libraries/XMCLib/src/xmc_usbh.c **** /**
1152:../Libraries/XMCLib/src/xmc_usbh.c ****  * @param gintsts USB port interrupt status flag.
1153:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1154:../Libraries/XMCLib/src/xmc_usbh.c ****  * \par<b>Description:</b><BR>
1155:../Libraries/XMCLib/src/xmc_usbh.c ****  * USB host interrupt handler. It updates port and pipe state information based on different events
1156:../Libraries/XMCLib/src/xmc_usbh.c ****  * generated by the peripheral. It propagates the port events to the callback function registered b
1157:../Libraries/XMCLib/src/xmc_usbh.c ****  * during initialization. When a pipe transfer complete event is detected, it checks if any further
1158:../Libraries/XMCLib/src/xmc_usbh.c ****  * to be transmitted on the same pipe and continues transmission until data is available. A pipe ev
1159:../Libraries/XMCLib/src/xmc_usbh.c ****  * to the user provided pipe event callback function. A transfer complete event will be propagated 
1160:../Libraries/XMCLib/src/xmc_usbh.c ****  * is transmitted for an OUT transaction.
1161:../Libraries/XMCLib/src/xmc_usbh.c ****  *
1162:../Libraries/XMCLib/src/xmc_usbh.c **** */
1163:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_HandleIrq (uint32_t gintsts) {
 1304              	 .loc 1 1163 0
 1305              	 .cfi_startproc
 1306              	 
 1307              	 
 1308              	.LVL158:
1164:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
1165:../Libraries/XMCLib/src/xmc_usbh.c ****   USB0_CH_TypeDef *ptr_ch;
1166:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt, haint, hcint, pktcnt, mpsiz;
1167:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t ch;
1168:../Libraries/XMCLib/src/xmc_usbh.c ****   uint8_t *ptr_data;
1169:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t *dfifo;
1170:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t grxsts, bcnt, dat, len, len_rest;
1171:../Libraries/XMCLib/src/xmc_usbh.c ****   
1172:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Host port interrupt */
1173:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_PrtInt_Msk) != 0U) {
 1309              	 .loc 1 1173 0
 1310 0000 C101     	 lsls r1,r0,#7
1163:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 1311              	 .loc 1 1163 0
 1312 0002 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 1313              	.LCFI10:
 1314              	 .cfi_def_cfa_offset 32
 1315              	 .cfi_offset 4,-32
 1316              	 .cfi_offset 5,-28
 1317              	 .cfi_offset 6,-24
 1318              	 .cfi_offset 7,-20
 1319              	 .cfi_offset 8,-16
 1320              	 .cfi_offset 9,-12
 1321              	 .cfi_offset 10,-8
 1322              	 .cfi_offset 14,-4
1163:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 1323              	 .loc 1 1163 0
 1324 0006 0646     	 mov r6,r0
 1325              	 .loc 1 1173 0
 1326 0008 1ED5     	 bpl .L130
1174:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt = XMC_USBH0_device.global_register->HPRT;
 1327              	 .loc 1 1174 0
 1328 000a 974C     	 ldr r4,.L242
 1329 000c 2368     	 ldr r3,[r4]
 1330 000e D3F84054 	 ldr r5,[r3,#1088]
 1331              	.LVL159:
1175:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Clear port enable */
1176:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt & (uint32_t)(~USB_HPRT_PrtEna_Msk);
 1332              	 .loc 1 1176 0
 1333 0012 25F00402 	 bic r2,r5,#4
 1334 0016 C3F84024 	 str r2,[r3,#1088]
1177:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((hprt & USB_HPRT_PrtConnDet_Msk) != 0U) {
 1335              	 .loc 1 1177 0
 1336 001a AA07     	 lsls r2,r5,#30
 1337 001c 08D5     	 bpl .L132
1178:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG =  (0x200U | (USB_CH_HCFG_FSLSPCS(1) |
1179:../Libraries/XMCLib/src/xmc_usbh.c ****                                                     USB_CH_HCFG_FSLSSUP(1)));
1180:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Ignore connect under reset */
1181:../Libraries/XMCLib/src/xmc_usbh.c ****       if (XMC_USBH0_device.port_reset_active == false) {
 1338              	 .loc 1 1181 0
 1339 001e A07C     	 ldrb r0,[r4,#18]
 1340              	.LVL160:
1178:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HCFG =  (0x200U | (USB_CH_HCFG_FSLSPCS(1) |
 1341              	 .loc 1 1178 0
 1342 0020 40F20522 	 movw r2,#517
 1343 0024 C3F80024 	 str r2,[r3,#1024]
 1344              	 .loc 1 1181 0
 1345 0028 10B9     	 cbnz r0,.L132
1182:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_CONNECT);
 1346              	 .loc 1 1182 0
 1347 002a A368     	 ldr r3,[r4,#8]
 1348 002c 0121     	 movs r1,#1
 1349 002e 9847     	 blx r3
 1350              	.LVL161:
 1351              	.L132:
 1352 0030 05F00C05 	 and r5,r5,#12
 1353              	.LVL162:
1183:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1184:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1185:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((hprt & USB_HPRT_PrtEnChng_Msk) != 0U) { /* If port enable changed */
1186:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((hprt & USB_HPRT_PrtEna_Msk) != 0U) {  /* If device connected */
 1354              	 .loc 1 1186 0
 1355 0034 0C2D     	 cmp r5,#12
 1356 0036 07D1     	 bne .L130
1187:../Libraries/XMCLib/src/xmc_usbh.c ****         if (XMC_USBH0_device.port_reset_active == true) {
 1357              	 .loc 1 1187 0
 1358 0038 A27C     	 ldrb r2,[r4,#18]
 1359 003a 8B4B     	 ldr r3,.L242
 1360 003c 22B1     	 cbz r2,.L130
1188:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.port_reset_active = false;
 1361              	 .loc 1 1188 0
 1362 003e 0020     	 movs r0,#0
 1363 0040 9874     	 strb r0,[r3,#18]
1189:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_RESET);
 1364              	 .loc 1 1189 0
 1365 0042 0821     	 movs r1,#8
 1366 0044 9B68     	 ldr r3,[r3,#8]
 1367 0046 9847     	 blx r3
 1368              	.LVL163:
 1369              	.L130:
1190:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1191:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1192:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1193:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1194:../Libraries/XMCLib/src/xmc_usbh.c ****   
1195:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Disconnect interrupt */
1196:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_DisconnInt_Msk) != 0U) {
 1370              	 .loc 1 1196 0
 1371 0048 B700     	 lsls r7,r6,#2
 1372 004a 24D5     	 bpl .L136
1197:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE = USB_GINTSTS_HOSTMODE_DisconnInt_Msk; /* Cl
 1373              	 .loc 1 1197 0
 1374 004c 864D     	 ldr r5,.L242
 1375 004e 2B68     	 ldr r3,[r5]
 1376 0050 4FF00052 	 mov r2,#536870912
 1377 0054 5A61     	 str r2,[r3,#20]
1198:../Libraries/XMCLib/src/xmc_usbh.c ****     /* Ignore disconnect under reset */
1199:../Libraries/XMCLib/src/xmc_usbh.c ****     if ( XMC_USBH0_device.port_reset_active == false) {
 1378              	 .loc 1 1199 0
 1379 0056 AB7C     	 ldrb r3,[r5,#18]
 1380 0058 EBB9     	 cbnz r3,.L136
1200:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_ch   = (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers);
 1381              	 .loc 1 1200 0
 1382 005a 6C68     	 ldr r4,[r5,#4]
 1383              	.LVL164:
1201:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe = (XMC_USBH0_pipe_t    *)(pipe);
 1384              	 .loc 1 1201 0
 1385 005c 834F     	 ldr r7,.L242+4
 1386 005e 04F5E078 	 add r8,r4,#448
 1387              	.LVL165:
 1388              	.L139:
1202:../Libraries/XMCLib/src/xmc_usbh.c ****       for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1203:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
 1389              	 .loc 1 1203 0
 1390 0062 FB7E     	 ldrb r3,[r7,#27]
 1391 0064 73B1     	 cbz r3,.L138
1204:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->in_use = 0U;
 1392              	 .loc 1 1204 0
 1393 0066 0023     	 movs r3,#0
 1394 0068 FB76     	 strb r3,[r7,#27]
1205:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                            /* Clear
 1395              	 .loc 1 1205 0
 1396 006a 40F2BB73 	 movw r3,#1979
 1397 006e A360     	 str r3,[r4,#8]
1206:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINTMSK = USB_CH_HCINT_ChHltd_Msk;                           /* Enable halt inte
 1398              	 .loc 1 1206 0
 1399 0070 0223     	 movs r3,#2
 1400 0072 E360     	 str r3,[r4,#12]
1207:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk); /* Acti
 1401              	 .loc 1 1207 0
 1402 0074 2368     	 ldr r3,[r4]
 1403 0076 43F04043 	 orr r3,r3,#-1073741824
 1404 007a 2360     	 str r3,[r4]
1208:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, XMC_USBH_EVENT_BUS_ERROR)
 1405              	 .loc 1 1208 0
 1406 007c 2046     	 mov r0,r4
 1407 007e EB68     	 ldr r3,[r5,#12]
 1408 0080 4021     	 movs r1,#64
 1409 0082 9847     	 blx r3
 1410              	.LVL166:
 1411              	.L138:
1209:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1210:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch++;
 1412              	 .loc 1 1210 0 discriminator 2
 1413 0084 2034     	 adds r4,r4,#32
 1414              	.LVL167:
1202:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
 1415              	 .loc 1 1202 0 discriminator 2
 1416 0086 4445     	 cmp r4,r8
1211:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe++;
 1417              	 .loc 1 1211 0 discriminator 2
 1418 0088 07F12007 	 add r7,r7,#32
 1419              	.LVL168:
1202:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->in_use != 0U) {
 1420              	 .loc 1 1202 0 discriminator 2
 1421 008c E9D1     	 bne .L139
1212:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1213:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_DISCONNECT);
 1422              	 .loc 1 1213 0
 1423 008e AB68     	 ldr r3,[r5,#8]
 1424 0090 0020     	 movs r0,#0
 1425 0092 0221     	 movs r1,#2
 1426 0094 9847     	 blx r3
 1427              	.LVL169:
 1428              	.L136:
1214:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1215:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1216:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle receive fifo not-empty interrupt */
1217:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_RxFLvl_Msk) != 0U) {
 1429              	 .loc 1 1217 0
 1430 0096 F506     	 lsls r5,r6,#27
 1431 0098 40D5     	 bpl .L140
1218:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTMSK_HOSTMODE &= (uint32_t)~USB_GINTMSK_HOSTMODE_RxFLvlMsk
 1432              	 .loc 1 1218 0
 1433 009a 734B     	 ldr r3,.L242
 1434 009c 1868     	 ldr r0,[r3]
 1435 009e 8369     	 ldr r3,[r0,#24]
 1436 00a0 23F01003 	 bic r3,r3,#16
 1437 00a4 8361     	 str r3,[r0,#24]
1219:../Libraries/XMCLib/src/xmc_usbh.c ****     grxsts     = (XMC_USBH0_device.global_register->GRXSTSP_HOSTMODE);    
 1438              	 .loc 1 1219 0
 1439 00a6 026A     	 ldr r2,[r0,#32]
 1440              	.LVL170:
1220:../Libraries/XMCLib/src/xmc_usbh.c ****     /* IN Data Packet received ? */
1221:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((uint32_t)((grxsts >> 17U) & 0x0FU) == (uint32_t)USB_GRXSTSR_HOSTMODE_PktSts_IN_DATA_PKT) {
 1441              	 .loc 1 1221 0
 1442 00a8 C2F34343 	 ubfx r3,r2,#17,#4
 1443 00ac 022B     	 cmp r3,#2
 1444 00ae 31D1     	 bne .L141
1222:../Libraries/XMCLib/src/xmc_usbh.c ****       ch         = (uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_EPNum_Msk);
1223:../Libraries/XMCLib/src/xmc_usbh.c ****       bcnt       = ((uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_BCnt_Msk) >> USB_GRXSTSR_DEVICEMODE_
 1445              	 .loc 1 1223 0
 1446 00b0 47F6F073 	 movw r3,#32752
1222:../Libraries/XMCLib/src/xmc_usbh.c ****       ch         = (uint32_t)(grxsts & USB_GRXSTSR_DEVICEMODE_EPNum_Msk);
 1447              	 .loc 1 1222 0
 1448 00b4 02F00F04 	 and r4,r2,#15
 1449              	.LVL171:
 1450              	 .loc 1 1223 0
 1451 00b8 1340     	 ands r3,r3,r2
1224:../Libraries/XMCLib/src/xmc_usbh.c ****       dfifo      = (uint32_t *)XMC_USBH0_dfifo_ptr[ch];
 1452              	 .loc 1 1224 0
 1453 00ba 6D4A     	 ldr r2,.L242+8
 1454              	.LVL172:
 1455 00bc 52F824C0 	 ldr ip,[r2,r4,lsl#2]
1225:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_data   =  pipe[ch].data + pipe[ch].num_transferred_total;
 1456              	 .loc 1 1225 0
 1457 00c0 6A4A     	 ldr r2,.L242+4
 1458 00c2 6401     	 lsls r4,r4,#5
 1459              	.LVL173:
 1460 00c4 1719     	 adds r7,r2,r4
1223:../Libraries/XMCLib/src/xmc_usbh.c ****       dfifo      = (uint32_t *)XMC_USBH0_dfifo_ptr[ch];
 1461              	 .loc 1 1223 0
 1462 00c6 1D09     	 lsrs r5,r3,#4
 1463              	.LVL174:
 1464              	 .loc 1 1225 0
 1465 00c8 D7F804E0 	 ldr lr,[r7,#4]
 1466 00cc F968     	 ldr r1,[r7,#12]
1226:../Libraries/XMCLib/src/xmc_usbh.c ****       len        =  bcnt / 4U; /* Received number of 32-bit data */
 1467              	 .loc 1 1226 0
 1468 00ce 9B09     	 lsrs r3,r3,#6
1225:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_data   =  pipe[ch].data + pipe[ch].num_transferred_total;
 1469              	 .loc 1 1225 0
 1470 00d0 7144     	 add r1,r1,lr
 1471              	.LVL175:
1227:../Libraries/XMCLib/src/xmc_usbh.c ****       len_rest   =  bcnt & 3U; /* Number of bytes left */
 1472              	 .loc 1 1227 0
 1473 00d2 05F00307 	 and r7,r5,#3
 1474              	.LVL176:
 1475 00d6 01EB8303 	 add r3,r1,r3,lsl#2
 1476 00da 9046     	 mov r8,r2
 1477              	.LVL177:
 1478              	.L142:
1228:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read data from fifo */
1229:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read 32 bit sized  data */
1230:../Libraries/XMCLib/src/xmc_usbh.c ****       while (len != 0U) {
 1479              	 .loc 1 1230 0
 1480 00dc 9942     	 cmp r1,r3
 1481 00de 04D0     	 beq .L240
1231:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
1232:../Libraries/XMCLib/src/xmc_usbh.c ****         *((__unaligned uint32_t *)ptr_data) = *dfifo;
1233:../Libraries/XMCLib/src/xmc_usbh.c **** #else /* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
1234:../Libraries/XMCLib/src/xmc_usbh.c ****         *((__packed uint32_t *)ptr_data) = *dfifo;
 1482              	 .loc 1 1234 0
 1483 00e0 DCF80020 	 ldr r2,[ip]
 1484 00e4 41F8042B 	 str r2,[r1],#4
 1485              	.LVL178:
 1486 00e8 F8E7     	 b .L142
 1487              	.L240:
1235:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
1236:../Libraries/XMCLib/src/xmc_usbh.c **** 
1237:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_data += 4U;
1238:../Libraries/XMCLib/src/xmc_usbh.c ****         len--;
1239:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1240:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Read 8 bit sized data */
1241:../Libraries/XMCLib/src/xmc_usbh.c ****       if (len_rest != 0U) {
 1488              	 .loc 1 1241 0
 1489 00ea 47B9     	 cbnz r7,.L144
 1490              	.LVL179:
 1491              	.L146:
1242:../Libraries/XMCLib/src/xmc_usbh.c **** #if defined __TASKING__/*tasking*/
1243:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = *((__unaligned uint32_t *)dfifo);
1244:../Libraries/XMCLib/src/xmc_usbh.c **** #else /* defined (__GNUC__) || defined (__CC_ARM) || defined (__ICCARM__)*/
1245:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = *((__packed uint32_t *)dfifo);
1246:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
1247:../Libraries/XMCLib/src/xmc_usbh.c ****         while (len_rest != 0U) {
1248:../Libraries/XMCLib/src/xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
1249:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_data++;
1250:../Libraries/XMCLib/src/xmc_usbh.c ****           dat >>= 8;
1251:../Libraries/XMCLib/src/xmc_usbh.c ****           len_rest--;
1252:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1253:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1254:../Libraries/XMCLib/src/xmc_usbh.c ****       pipe[ch].num_transferring      += bcnt;
 1492              	 .loc 1 1254 0
 1493 00ec 08EB0403 	 add r3,r8,r4
 1494 00f0 1A69     	 ldr r2,[r3,#16]
 1495 00f2 2A44     	 add r2,r2,r5
 1496 00f4 1A61     	 str r2,[r3,#16]
1255:../Libraries/XMCLib/src/xmc_usbh.c ****       pipe[ch].num_transferred_total += bcnt;
 1497              	 .loc 1 1255 0
 1498 00f6 DA68     	 ldr r2,[r3,#12]
 1499 00f8 1544     	 add r5,r5,r2
 1500              	.LVL180:
 1501 00fa DD60     	 str r5,[r3,#12]
 1502 00fc 0AE0     	 b .L141
 1503              	.LVL181:
 1504              	.L144:
1245:../Libraries/XMCLib/src/xmc_usbh.c **** #endif
 1505              	 .loc 1 1245 0
 1506 00fe DCF80010 	 ldr r1,[ip]
 1507              	.LVL182:
 1508 0102 03EB070E 	 add lr,r3,r7
 1509              	.LVL183:
 1510              	.L145:
1248:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_data++;
 1511              	 .loc 1 1248 0
 1512 0106 03F8011B 	 strb r1,[r3],#1
 1513              	.LVL184:
1247:../Libraries/XMCLib/src/xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
 1514              	 .loc 1 1247 0
 1515 010a 7345     	 cmp r3,lr
1250:../Libraries/XMCLib/src/xmc_usbh.c ****           len_rest--;
 1516              	 .loc 1 1250 0
 1517 010c 4FEA1121 	 lsr r1,r1,#8
 1518              	.LVL185:
1247:../Libraries/XMCLib/src/xmc_usbh.c ****           *ptr_data = (uint8_t)dat;
 1519              	 .loc 1 1247 0
 1520 0110 F9D1     	 bne .L145
 1521 0112 EBE7     	 b .L146
 1522              	.LVL186:
 1523              	.L141:
1256:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1257:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTMSK_HOSTMODE |= (uint32_t)USB_GINTMSK_HOSTMODE_RxFLvlMsk_
 1524              	 .loc 1 1257 0
 1525 0114 8369     	 ldr r3,[r0,#24]
 1526 0116 43F01003 	 orr r3,r3,#16
 1527 011a 8361     	 str r3,[r0,#24]
 1528              	.L140:
1258:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1259:../Libraries/XMCLib/src/xmc_usbh.c **** 
1260:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle sof interrupt */
1261:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_Sof_Msk) != 0U) { /* If start of frame interrupt */
 1529              	 .loc 1 1261 0
 1530 011c 3407     	 lsls r4,r6,#28
 1531 011e 02D4     	 bmi .L147
 1532              	.L154:
1262:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_Sof_Msk; /* Clear SO
1263:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_pipe = (XMC_USBH0_pipe_t *)(pipe);
1264:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1265:../Libraries/XMCLib/src/xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
1266:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) && (ptr_pipe->in_use == 1U)) 
1267:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
1268:../Libraries/XMCLib/src/xmc_usbh.c ****         {
1269:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->interval--;
1270:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->interval == 0U)
1271:../Libraries/XMCLib/src/xmc_usbh.c ****           {
1272:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interval = ptr_pipe->interval_reload;
1273:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered = 1U;
1274:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1275:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1276:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1277:../Libraries/XMCLib/src/xmc_usbh.c ****       ptr_pipe++;
1278:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1279:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1280:../Libraries/XMCLib/src/xmc_usbh.c ****   
1281:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle host ctrl interrupt */
1282:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_HChInt_Msk) != 0U) {
 1533              	 .loc 1 1282 0
 1534 0120 B001     	 lsls r0,r6,#6
 1535 0122 19D4     	 bmi .L148
 1536 0124 27E0     	 b .L149
 1537              	.L147:
1262:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_Sof_Msk; /* Clear SO
 1538              	 .loc 1 1262 0
 1539 0126 504B     	 ldr r3,.L242
 1540 0128 1B68     	 ldr r3,[r3]
 1541 012a 0822     	 movs r2,#8
 1542 012c 5A61     	 str r2,[r3,#20]
 1543              	.LVL187:
1263:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1544              	 .loc 1 1263 0
 1545 012e 4F4B     	 ldr r3,.L242+4
 1546              	.LVL188:
 1547              	.L153:
1266:../Libraries/XMCLib/src/xmc_usbh.c ****         if (ptr_pipe->interval != 0U)
 1548              	 .loc 1 1266 0
 1549 0130 598B     	 ldrh r1,[r3,#26]
 1550 0132 40F20312 	 movw r2,#259
 1551 0136 9142     	 cmp r1,r2
 1552 0138 09D1     	 bne .L151
1267:../Libraries/XMCLib/src/xmc_usbh.c ****         {
 1553              	 .loc 1 1267 0
 1554 013a 1A8B     	 ldrh r2,[r3,#24]
 1555 013c 3AB1     	 cbz r2,.L151
1269:../Libraries/XMCLib/src/xmc_usbh.c ****           if (ptr_pipe->interval == 0U)
 1556              	 .loc 1 1269 0
 1557 013e 013A     	 subs r2,r2,#1
 1558 0140 92B2     	 uxth r2,r2
 1559 0142 1A83     	 strh r2,[r3,#24]
1270:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 1560              	 .loc 1 1270 0
 1561 0144 1AB9     	 cbnz r2,.L151
1272:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->interrupt_triggered = 1U;
 1562              	 .loc 1 1272 0
 1563 0146 DA8A     	 ldrh r2,[r3,#22]
 1564 0148 1A83     	 strh r2,[r3,#24]
1273:../Libraries/XMCLib/src/xmc_usbh.c ****           }
 1565              	 .loc 1 1273 0
 1566 014a 0122     	 movs r2,#1
 1567 014c 5A77     	 strb r2,[r3,#29]
 1568              	.L151:
1264:../Libraries/XMCLib/src/xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
 1569              	 .loc 1 1264 0 discriminator 2
 1570 014e 494A     	 ldr r2,.L242+12
1277:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 1571              	 .loc 1 1277 0 discriminator 2
 1572 0150 2033     	 adds r3,r3,#32
 1573              	.LVL189:
1264:../Libraries/XMCLib/src/xmc_usbh.c ****       /* If interrupt transfer is active handle period (interval) */
 1574              	 .loc 1 1264 0 discriminator 2
 1575 0152 9342     	 cmp r3,r2
 1576 0154 ECD1     	 bne .L153
 1577 0156 E3E7     	 b .L154
 1578              	.LVL190:
 1579              	.L148:
1283:../Libraries/XMCLib/src/xmc_usbh.c ****     haint = XMC_USBH0_device.global_register->HAINT;
 1580              	 .loc 1 1283 0
 1581 0158 434F     	 ldr r7,.L242
 1582 015a 474C     	 ldr r4,.L242+16
 1583 015c 3B68     	 ldr r3,[r7]
 1584 015e D3F81484 	 ldr r8,[r3,#1044]
 1585              	.LVL191:
1284:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1586              	 .loc 1 1284 0
 1587 0162 0025     	 movs r5,#0
 1588              	.LVL192:
 1589              	.L170:
1285:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Check for interrupt of all channels */
1286:../Libraries/XMCLib/src/xmc_usbh.c ****       if ((haint & (uint32_t)((uint32_t)1U << ch)) != 0U) {
 1590              	 .loc 1 1286 0
 1591 0164 28FA05F3 	 lsr r3,r8,r5
 1592 0168 D907     	 lsls r1,r3,#31
 1593 016a 15D4     	 bmi .L241
 1594              	.L157:
1284:../Libraries/XMCLib/src/xmc_usbh.c ****     for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
 1595              	 .loc 1 1284 0 discriminator 2
 1596 016c 0135     	 adds r5,r5,#1
 1597              	.LVL193:
 1598 016e 0E2D     	 cmp r5,#14
 1599 0170 04F12004 	 add r4,r4,#32
 1600 0174 F6D1     	 bne .L170
 1601              	.LVL194:
 1602              	.L149:
1287:../Libraries/XMCLib/src/xmc_usbh.c ****         haint     &= (uint32_t)~((uint32_t)1U << ch);
1288:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch     =  (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers) + ch;
1289:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe   =  (XMC_USBH0_pipe_t    *)(&pipe[ch]);
1290:../Libraries/XMCLib/src/xmc_usbh.c ****         /*Local variable for HCINT*/
1291:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = ptr_ch->HCINT;
1292:../Libraries/XMCLib/src/xmc_usbh.c ****         hcint      =  (uint32_t)(dat & ptr_ch->HCINTMSK);
1293:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_ChHltd_Msk) != 0U) {                                  /* channel 
1294:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINTMSK = 0U;                                                        /*  disable
1295:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                                    
1296:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->transfer_active = 0U;                                               /*  set sta
1297:../Libraries/XMCLib/src/xmc_usbh.c ****           hcint = 0U;
1298:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1299:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_XferCompl_Msk) != 0U) {                               /* data tra
1300:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT   = USB_CH_HCINTx_ALL;                                                     
1301:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) == 0U) {                       /*  endpoin
1302:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;                                                      /*   disabl
1303:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->transfer_active = 0U;                                             /*   transf
1304:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferred_total += ptr_pipe->num_transferring;              /*   admin 
1305:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring       = 0U;                                      /*   admin 
1306:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_pipe->num_transferred_total == ptr_pipe->num) {                     /*   all by
1307:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use = 0U;                                                    /*    relea
1308:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                       /*
1309:../Libraries/XMCLib/src/xmc_usbh.c ****             }                                                                           
1310:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;                                                                 
1311:../Libraries/XMCLib/src/xmc_usbh.c ****           }                                                                             
1312:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                       /*  endpoin
1313:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                      /*   releas
1314:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                         /*
1315:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                            /*   trigge
1316:../Libraries/XMCLib/src/xmc_usbh.c ****           }
1317:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1318:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_AckMsk_Msk) != 0U) {                                /* ACK rec
1319:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT = USB_CH_HCINTMSK_AckMsk_Msk;                                    /*  clear 
1320:../Libraries/XMCLib/src/xmc_usbh.c ****           is_nack[ch] = false;
1321:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                        /*  endpoi
1322:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num != ptr_pipe->num_transferred_total) &&                    /*   if al
1323:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
1324:../Libraries/XMCLib/src/xmc_usbh.c ****                ((ptr_pipe->num_transferred_total%ptr_pipe->ep_max_packet_size) == 0U)){  /*   if sh
1325:../Libraries/XMCLib/src/xmc_usbh.c ****                ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                                
1326:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1327:../Libraries/XMCLib/src/xmc_usbh.c ****           } else {                                                                        /* endpoi
1328:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                              /*  trigg
1329:../Libraries/XMCLib/src/xmc_usbh.c ****           } 
1330:../Libraries/XMCLib/src/xmc_usbh.c ****           hcint = 0U;
1331:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1332:../Libraries/XMCLib/src/xmc_usbh.c ****         /*local variable for HCCHAR*/
1333:../Libraries/XMCLib/src/xmc_usbh.c ****         dat = ptr_ch->HCCHAR;
1334:../Libraries/XMCLib/src/xmc_usbh.c ****         if (((hcint & (USB_CH_HCINTMSK_StallMsk_Msk |                                    /* STALL *
1335:../Libraries/XMCLib/src/xmc_usbh.c ****                       USB_CH_HCINTMSK_NakMsk_Msk   |                                     /* or NAK 
1336:../Libraries/XMCLib/src/xmc_usbh.c ****                       USB_CH_HCINTx_ERRORS )) != 0U) &&                                  /* or tran
1337:../Libraries/XMCLib/src/xmc_usbh.c ****             ((dat & USB_CH_HCCHAR_EPDir_Msk) == 0U))
1338:../Libraries/XMCLib/src/xmc_usbh.c ****         {                        /* and endpoint OUT */
1339:../Libraries/XMCLib/src/xmc_usbh.c **** 
1340:../Libraries/XMCLib/src/xmc_usbh.c ****             pktcnt = (uint32_t)((ptr_ch->HCTSIZ_BUFFERMODE & USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Msk)  
1341:../Libraries/XMCLib/src/xmc_usbh.c ****                       >> USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos);   
1342:../Libraries/XMCLib/src/xmc_usbh.c ****             mpsiz  = (ptr_ch->HCCHAR      ) & 0x000007FFU;
1343:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num_transferring >= mpsiz) && (pktcnt > 0U)) {
1344:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->num_transferred_total += (uint32_t)(ptr_pipe->num_transferring - (mpsiz * p
1345:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1346:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring = 0U;
1347:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1348:../Libraries/XMCLib/src/xmc_usbh.c **** 
1349:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_NakMsk_Msk)!=0U) {                                /* if NAK */
1350:../Libraries/XMCLib/src/xmc_usbh.c ****             is_nack[ch] = true;
1351:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event |= (uint8_t)XMC_USBH_EVENT_HANDSHAKE_NAK;
1352:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTMSK_NakMsk_Msk;                                /*    clear 
1353:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                    /*    endpoi
1354:../Libraries/XMCLib/src/xmc_usbh.c ****               if (ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) {                   /*
1355:../Libraries/XMCLib/src/xmc_usbh.c ****                 XMC_lTriggerHaltChannel(ptr_ch);                                       /*      trig
1356:../Libraries/XMCLib/src/xmc_usbh.c ****               } else {                                                                 /*     is en
1357:../Libraries/XMCLib/src/xmc_usbh.c ****                 ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                             /*
1358:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1359:../Libraries/XMCLib/src/xmc_usbh.c ****             } else { /* If endpoint OUT */                                             /*    endpoi
1360:../Libraries/XMCLib/src/xmc_usbh.c ****               XMC_lTriggerHaltChannel(ptr_ch);                                         /*     trigg
1361:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1362:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
1363:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1364:../Libraries/XMCLib/src/xmc_usbh.c **** 
1365:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTMSK_StallMsk_Msk) != 0U) {                              /* if STAL
1366:../Libraries/XMCLib/src/xmc_usbh.c ****             /*Reset the packet data toggle*/
1367:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT   = USB_CH_HCINTMSK_StallMsk_Msk;                              /*  clear 
1368:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
1369:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet &= (uint32_t)(~XMC_USBH_PACKET_DATA_Msk);
1370:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet   |=  (uint32_t)XMC_USBH_PACKET_DATA0;
1371:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_HANDSHAKE_STALL;                            /
1372:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
1373:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
1374:../Libraries/XMCLib/src/xmc_usbh.c ****         } 
1375:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINTx_ERRORS) != 0U) {                                      /* if tran
1376:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTx_ERRORS;                                        /*  clear 
1377:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
1378:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_BUS_ERROR;                                  /
1379:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
1380:../Libraries/XMCLib/src/xmc_usbh.c ****             hcint = 0U;
1381:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1382:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((ptr_pipe->transfer_active == 0U) && (ptr_pipe->in_use == 0U) && (ptr_pipe->event != 0U
1383:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, (uint32_t)ptr_pipe->event
1384:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->event  = 0U;
1385:../Libraries/XMCLib/src/xmc_usbh.c ****         }
1386:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1387:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1388:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1389:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Check if remote wakeup event detected*/
1390:../Libraries/XMCLib/src/xmc_usbh.c ****   if ((gintsts & USB_GINTSTS_HOSTMODE_WkUpInt_Msk) != 0U)
 1603              	 .loc 1 1390 0
 1604 0176 002E     	 cmp r6,#0
 1605 0178 80F21181 	 bge .L156
1391:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1392:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->GINTSTS_HOSTMODE =  USB_GINTSTS_HOSTMODE_WkUpInt_Msk; /* Clea
 1606              	 .loc 1 1392 0
 1607 017c 3A4B     	 ldr r3,.L242
 1608 017e 1A68     	 ldr r2,[r3]
1393:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Recover PHY clock*/
1394:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->PCGCCTL = XMC_USBH_PHY_CLK_UNGATE;
1395:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Callback function execution*/
1396:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.SignalPortEvent_cb(0U, XMC_USBH_EVENT_REMOTE_WAKEUP);
 1609              	 .loc 1 1396 0
 1610 0180 9B68     	 ldr r3,[r3,#8]
1392:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Recover PHY clock*/
 1611              	 .loc 1 1392 0
 1612 0182 4FF00041 	 mov r1,#-2147483648
 1613 0186 5161     	 str r1,[r2,#20]
1394:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Callback function execution*/
 1614              	 .loc 1 1394 0
 1615 0188 4FF48071 	 mov r1,#256
 1616 018c C2F8001E 	 str r1,[r2,#3584]
 1617              	 .loc 1 1396 0
 1618 0190 0020     	 movs r0,#0
 1619 0192 4021     	 movs r1,#64
 1620 0194 9847     	 blx r3
 1621              	.LVL195:
 1622 0196 02E1     	 b .L156
 1623              	.LVL196:
 1624              	.L241:
1287:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch     =  (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers) + ch;
 1625              	 .loc 1 1287 0
 1626 0198 0123     	 movs r3,#1
 1627 019a AB40     	 lsls r3,r3,r5
1288:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe   =  (XMC_USBH0_pipe_t    *)(&pipe[ch]);
 1628              	 .loc 1 1288 0
 1629 019c D7F804E0 	 ldr lr,[r7,#4]
1287:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_ch     =  (USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_registers) + ch;
 1630              	 .loc 1 1287 0
 1631 01a0 28EA0308 	 bic r8,r8,r3
 1632              	.LVL197:
 1633 01a4 6B01     	 lsls r3,r5,#5
1288:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe   =  (XMC_USBH0_pipe_t    *)(&pipe[ch]);
 1634              	 .loc 1 1288 0
 1635 01a6 0EEB0300 	 add r0,lr,r3
 1636              	.LVL198:
1291:../Libraries/XMCLib/src/xmc_usbh.c ****         hcint      =  (uint32_t)(dat & ptr_ch->HCINTMSK);
 1637              	 .loc 1 1291 0
 1638 01aa 8268     	 ldr r2,[r0,#8]
 1639              	.LVL199:
1292:../Libraries/XMCLib/src/xmc_usbh.c ****         if ((hcint & USB_CH_HCINT_ChHltd_Msk) != 0U) {                                  /* channel 
 1640              	 .loc 1 1292 0
 1641 01ac C168     	 ldr r1,[r0,#12]
 1642 01ae 1140     	 ands r1,r1,r2
 1643              	.LVL200:
1293:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINTMSK = 0U;                                                        /*  disable
 1644              	 .loc 1 1293 0
 1645 01b0 8A07     	 lsls r2,r1,#30
 1646              	.LVL201:
1294:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                                    
 1647              	 .loc 1 1294 0
 1648 01b2 41BF     	 itttt mi
 1649 01b4 0021     	 movmi r1,#0
 1650              	.LVL202:
1295:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->transfer_active = 0U;                                               /*  set sta
 1651              	 .loc 1 1295 0
 1652 01b6 40F2BB72 	 movwmi r2,#1979
1294:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT    = USB_CH_HCINTx_ALL;                                                    
 1653              	 .loc 1 1294 0
 1654 01ba C160     	 strmi r1,[r0,#12]
1295:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->transfer_active = 0U;                                               /*  set sta
 1655              	 .loc 1 1295 0
 1656 01bc 8260     	 strmi r2,[r0,#8]
1296:../Libraries/XMCLib/src/xmc_usbh.c ****           hcint = 0U;
 1657              	 .loc 1 1296 0
 1658 01be 48BF     	 it mi
 1659 01c0 A170     	 strbmi r1,[r4,#2]
 1660              	.LVL203:
1299:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT   = USB_CH_HCINTx_ALL;                                                     
 1661              	 .loc 1 1299 0
 1662 01c2 CA07     	 lsls r2,r1,#31
 1663 01c4 2ED5     	 bpl .L159
1300:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) == 0U) {                       /*  endpoin
 1664              	 .loc 1 1300 0
 1665 01c6 40F2BB72 	 movw r2,#1979
 1666 01ca 8260     	 str r2,[r0,#8]
1301:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINTMSK = 0U;                                                      /*   disabl
 1667              	 .loc 1 1301 0
 1668 01cc 5EF80320 	 ldr r2,[lr,r3]
 1669 01d0 12F4004C 	 ands ip,r2,#32768
 1670 01d4 16D1     	 bne .L160
1302:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->transfer_active = 0U;                                             /*   transf
 1671              	 .loc 1 1302 0
 1672 01d6 C0F80CC0 	 str ip,[r0,#12]
1304:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring       = 0U;                                      /*   admin 
 1673              	 .loc 1 1304 0
 1674 01da 54F80A1C 	 ldr r1,[r4,#-10]
 1675              	.LVL204:
 1676 01de 54F80E2C 	 ldr r2,[r4,#-14]
1303:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferred_total += ptr_pipe->num_transferring;              /*   admin 
 1677              	 .loc 1 1303 0
 1678 01e2 84F802C0 	 strb ip,[r4,#2]
1304:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring       = 0U;                                      /*   admin 
 1679              	 .loc 1 1304 0
 1680 01e6 0A44     	 add r2,r2,r1
1306:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use = 0U;                                                    /*    relea
 1681              	 .loc 1 1306 0
 1682 01e8 54F8121C 	 ldr r1,[r4,#-18]
1304:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->num_transferring       = 0U;                                      /*   admin 
 1683              	 .loc 1 1304 0
 1684 01ec 44F80E2C 	 str r2,[r4,#-14]
1306:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->in_use = 0U;                                                    /*    relea
 1685              	 .loc 1 1306 0
 1686 01f0 8A42     	 cmp r2,r1
1308:../Libraries/XMCLib/src/xmc_usbh.c ****             }                                                                           
 1687              	 .loc 1 1308 0
 1688 01f2 08BF     	 it eq
 1689 01f4 0122     	 moveq r2,#1
1305:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_pipe->num_transferred_total == ptr_pipe->num) {                     /*   all by
 1690              	 .loc 1 1305 0
 1691 01f6 44F80ACC 	 str ip,[r4,#-10]
1307:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                       /*
 1692              	 .loc 1 1307 0
 1693 01fa 04BF     	 itt eq
 1694 01fc 84F801C0 	 strbeq ip,[r4,#1]
1308:../Libraries/XMCLib/src/xmc_usbh.c ****             }                                                                           
 1695              	 .loc 1 1308 0
 1696 0200 2271     	 strbeq r2,[r4,#4]
1310:../Libraries/XMCLib/src/xmc_usbh.c ****           }                                                                             
 1697              	 .loc 1 1310 0
 1698 0202 6146     	 mov r1,ip
 1699              	.L160:
 1700              	.LVL205:
1312:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                      /*   releas
 1701              	 .loc 1 1312 0
 1702 0204 5EF80320 	 ldr r2,[lr,r3]
 1703 0208 1204     	 lsls r2,r2,#16
 1704 020a 0BD5     	 bpl .L159
1313:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_TRANSFER_COMPLETE;                         /*
 1705              	 .loc 1 1313 0
 1706 020c 0022     	 movs r2,#0
 1707 020e 6270     	 strb r2,[r4,#1]
1314:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                            /*   trigge
 1708              	 .loc 1 1314 0
 1709 0210 0122     	 movs r2,#1
 1710 0212 2271     	 strb r2,[r4,#4]
 1711              	.LVL206:
 1712              	.LBB60:
 1713              	.LBB61:
 145:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1714              	 .loc 1 145 0
 1715 0214 0222     	 movs r2,#2
 1716 0216 C260     	 str r2,[r0,#12]
 146:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1717              	 .loc 1 146 0
 1718 0218 5EF80320 	 ldr r2,[lr,r3]
 1719 021c 42F04042 	 orr r2,r2,#-1073741824
 1720 0220 4EF80320 	 str r2,[lr,r3]
 1721              	.LVL207:
 1722              	.L159:
 1723              	.LBE61:
 1724              	.LBE60:
1318:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_ch->HCINT = USB_CH_HCINTMSK_AckMsk_Msk;                                    /*  clear 
 1725              	 .loc 1 1318 0
 1726 0224 8A06     	 lsls r2,r1,#26
 1727 0226 34D5     	 bpl .L161
1319:../Libraries/XMCLib/src/xmc_usbh.c ****           is_nack[ch] = false;
 1728              	 .loc 1 1319 0
 1729 0228 2022     	 movs r2,#32
 1730 022a 8260     	 str r2,[r0,#8]
1320:../Libraries/XMCLib/src/xmc_usbh.c ****           if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                        /*  endpoi
 1731              	 .loc 1 1320 0
 1732 022c 134A     	 ldr r2,.L242+20
 1733 022e 0021     	 movs r1,#0
 1734              	.LVL208:
 1735 0230 A954     	 strb r1,[r5,r2]
1321:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num != ptr_pipe->num_transferred_total) &&                    /*   if al
 1736              	 .loc 1 1321 0
 1737 0232 5EF80320 	 ldr r2,[lr,r3]
 1738 0236 12F40042 	 ands r2,r2,#32768
 1739 023a 21D0     	 beq .L162
1322:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
 1740              	 .loc 1 1322 0
 1741 023c 54F80E9C 	 ldr r9,[r4,#-14]
 1742 0240 54F8122C 	 ldr r2,[r4,#-18]
 1743 0244 4A45     	 cmp r2,r9
 1744 0246 24D0     	 beq .L161
1322:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->num_transferring != 0U)                 &&                    /*   if ze
 1745              	 .loc 1 1322 0 is_stmt 0 discriminator 1
 1746 0248 54F80A2C 	 ldr r2,[r4,#-10]
 1747 024c 02B3     	 cbz r2,.L181
1324:../Libraries/XMCLib/src/xmc_usbh.c ****                ptr_ch->HCCHAR |= (uint32_t)USB_CH_HCCHAR_ChEna_Msk;                                
 1748              	 .loc 1 1324 0 is_stmt 1
 1749 024e 34F8062C 	 ldrh r2,[r4,#-6]
 1750 0252 B9FBF2FC 	 udiv ip,r9,r2
 1751 0256 02FB1C92 	 mls r2,r2,ip,r9
1323:../Libraries/XMCLib/src/xmc_usbh.c ****                ((ptr_pipe->num_transferred_total%ptr_pipe->ep_max_packet_size) == 0U)){  /*   if sh
 1752              	 .loc 1 1323 0
 1753 025a D2B9     	 cbnz r2,.L161
1325:../Libraries/XMCLib/src/xmc_usbh.c ****             }
 1754              	 .loc 1 1325 0
 1755 025c 5EF80310 	 ldr r1,[lr,r3]
 1756 0260 41F00041 	 orr r1,r1,#-2147483648
 1757 0264 12E0     	 b .L239
 1758              	.L243:
 1759 0266 00BF     	 .align 2
 1760              	.L242:
 1761 0268 00000000 	 .word .LANCHOR1
 1762 026c 00000000 	 .word pipe
 1763 0270 00000000 	 .word .LANCHOR4
 1764 0274 C0010000 	 .word pipe+448
 1765 0278 1A000000 	 .word pipe+26
 1766 027c 00000000 	 .word is_nack
 1767              	.L162:
 1768              	.LVL209:
 1769              	.LBB62:
 1770              	.LBB63:
 145:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1771              	 .loc 1 145 0
 1772 0280 0221     	 movs r1,#2
 1773 0282 C160     	 str r1,[r0,#12]
 146:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1774              	 .loc 1 146 0
 1775 0284 5EF80310 	 ldr r1,[lr,r3]
 1776 0288 41F04041 	 orr r1,r1,#-1073741824
 1777              	.LVL210:
 1778              	.L239:
 1779 028c 4EF80310 	 str r1,[lr,r3]
 1780              	.L181:
 1781              	.LBE63:
 1782              	.LBE62:
1330:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 1783              	 .loc 1 1330 0
 1784 0290 1146     	 mov r1,r2
 1785              	.L161:
 1786              	.LVL211:
1334:../Libraries/XMCLib/src/xmc_usbh.c ****                       USB_CH_HCINTMSK_NakMsk_Msk   |                                     /* or NAK 
 1787              	 .loc 1 1334 0
 1788 0292 11F4F36F 	 tst r1,#1944
1333:../Libraries/XMCLib/src/xmc_usbh.c ****         if (((hcint & (USB_CH_HCINTMSK_StallMsk_Msk |                                    /* STALL *
 1789              	 .loc 1 1333 0
 1790 0296 5EF80320 	 ldr r2,[lr,r3]
 1791              	.LVL212:
1334:../Libraries/XMCLib/src/xmc_usbh.c ****                       USB_CH_HCINTMSK_NakMsk_Msk   |                                     /* or NAK 
 1792              	 .loc 1 1334 0
 1793 029a 19D0     	 beq .L163
1336:../Libraries/XMCLib/src/xmc_usbh.c ****             ((dat & USB_CH_HCCHAR_EPDir_Msk) == 0U))
 1794              	 .loc 1 1336 0
 1795 029c 1204     	 lsls r2,r2,#16
 1796              	.LVL213:
 1797 029e 17D4     	 bmi .L163
1340:../Libraries/XMCLib/src/xmc_usbh.c ****                       >> USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos);   
 1798              	 .loc 1 1340 0
 1799 02a0 0269     	 ldr r2,[r0,#16]
 1800              	.LVL214:
1342:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num_transferring >= mpsiz) && (pktcnt > 0U)) {
 1801              	 .loc 1 1342 0
 1802 02a2 5EF80390 	 ldr r9,[lr,r3]
1343:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->num_transferred_total += (uint32_t)(ptr_pipe->num_transferring - (mpsiz * p
 1803              	 .loc 1 1343 0
 1804 02a6 54F80AAC 	 ldr r10,[r4,#-10]
1342:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_pipe->num_transferring >= mpsiz) && (pktcnt > 0U)) {
 1805              	 .loc 1 1342 0
 1806 02aa C9F30A09 	 ubfx r9,r9,#0,#11
 1807              	.LVL215:
1343:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->num_transferred_total += (uint32_t)(ptr_pipe->num_transferring - (mpsiz * p
 1808              	 .loc 1 1343 0
 1809 02ae CA45     	 cmp r10,r9
 1810 02b0 0BD3     	 bcc .L164
1340:../Libraries/XMCLib/src/xmc_usbh.c ****                       >> USB_CH_HCTSIZ_BUFFERMODE_PktCnt_Pos);   
 1811              	 .loc 1 1340 0 discriminator 1
 1812 02b2 C2F3C94C 	 ubfx ip,r2,#19,#10
1343:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_pipe->num_transferred_total += (uint32_t)(ptr_pipe->num_transferring - (mpsiz * p
 1813              	 .loc 1 1343 0 discriminator 1
 1814 02b6 BCF1000F 	 cmp ip,#0
 1815 02ba 06D0     	 beq .L164
 1816 02bc 54F80E2C 	 ldr r2,[r4,#-14]
 1817              	.LVL216:
 1818 02c0 5244     	 add r2,r2,r10
1344:../Libraries/XMCLib/src/xmc_usbh.c ****             }
 1819              	 .loc 1 1344 0
 1820 02c2 09FB1C22 	 mls r2,r9,ip,r2
 1821 02c6 44F80E2C 	 str r2,[r4,#-14]
 1822              	.L164:
1346:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 1823              	 .loc 1 1346 0
 1824 02ca 0022     	 movs r2,#0
 1825 02cc 44F80A2C 	 str r2,[r4,#-10]
 1826              	.LVL217:
 1827              	.L163:
1349:../Libraries/XMCLib/src/xmc_usbh.c ****             is_nack[ch] = true;
 1828              	 .loc 1 1349 0
 1829 02d0 CA06     	 lsls r2,r1,#27
 1830 02d2 27D5     	 bpl .L165
1350:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event |= (uint8_t)XMC_USBH_EVENT_HANDSHAKE_NAK;
 1831              	 .loc 1 1350 0
 1832 02d4 514A     	 ldr r2,.L244
 1833 02d6 0121     	 movs r1,#1
 1834              	.LVL218:
 1835 02d8 A954     	 strb r1,[r5,r2]
1351:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTMSK_NakMsk_Msk;                                /*    clear 
 1836              	 .loc 1 1351 0
 1837 02da 2279     	 ldrb r2,[r4,#4]
 1838 02dc 42F00202 	 orr r2,r2,#2
 1839 02e0 2271     	 strb r2,[r4,#4]
1352:../Libraries/XMCLib/src/xmc_usbh.c ****             if ((ptr_ch->HCCHAR & USB_CH_HCCHAR_EPDir_Msk) != 0U) {                    /*    endpoi
 1840              	 .loc 1 1352 0
 1841 02e2 1022     	 movs r2,#16
 1842 02e4 8260     	 str r2,[r0,#8]
1353:../Libraries/XMCLib/src/xmc_usbh.c ****               if (ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) {                   /*
 1843              	 .loc 1 1353 0
 1844 02e6 5EF80310 	 ldr r1,[lr,r3]
 1845 02ea 11F40041 	 ands r1,r1,#32768
 1846 02ee 11D0     	 beq .L166
1354:../Libraries/XMCLib/src/xmc_usbh.c ****                 XMC_lTriggerHaltChannel(ptr_ch);                                       /*      trig
 1847              	 .loc 1 1354 0
 1848 02f0 2278     	 ldrb r2,[r4]
 1849 02f2 032A     	 cmp r2,#3
 1850              	.LVL219:
 1851              	.LBB64:
 1852              	.LBB65:
 145:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1853              	 .loc 1 145 0
 1854 02f4 03BF     	 ittte eq
 1855 02f6 0222     	 moveq r2,#2
 1856 02f8 C260     	 streq r2,[r0,#12]
 146:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1857              	 .loc 1 146 0
 1858 02fa 5EF80320 	 ldreq r2,[lr,r3]
 1859              	.LBE65:
 1860              	.LBE64:
1357:../Libraries/XMCLib/src/xmc_usbh.c ****               }
 1861              	 .loc 1 1357 0
 1862 02fe 5EF80320 	 ldrne r2,[lr,r3]
 1863              	.LBB67:
 1864              	.LBB66:
 146:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1865              	 .loc 1 146 0
 1866 0302 0CBF     	 ite eq
 1867 0304 42F04042 	 orreq r2,r2,#-1073741824
 1868              	.LBE66:
 1869              	.LBE67:
1357:../Libraries/XMCLib/src/xmc_usbh.c ****               }
 1870              	 .loc 1 1357 0
 1871 0308 42F00042 	 orrne r2,r2,#-2147483648
 1872 030c 4EF80320 	 str r2,[lr,r3]
1362:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 1873              	 .loc 1 1362 0
 1874 0310 0021     	 movs r1,#0
 1875 0312 07E0     	 b .L165
 1876              	.LVL220:
 1877              	.L166:
 1878              	.LBB68:
 1879              	.LBB69:
 145:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1880              	 .loc 1 145 0
 1881 0314 0222     	 movs r2,#2
 1882 0316 C260     	 str r2,[r0,#12]
 146:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1883              	 .loc 1 146 0
 1884 0318 5EF80320 	 ldr r2,[lr,r3]
 1885 031c 42F04042 	 orr r2,r2,#-1073741824
 1886 0320 4EF80320 	 str r2,[lr,r3]
 1887              	.LVL221:
 1888              	.L165:
 1889              	.LBE69:
 1890              	.LBE68:
1365:../Libraries/XMCLib/src/xmc_usbh.c ****             /*Reset the packet data toggle*/
 1891              	 .loc 1 1365 0
 1892 0324 0A07     	 lsls r2,r1,#28
 1893 0326 15D5     	 bpl .L168
1367:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
 1894              	 .loc 1 1367 0
 1895 0328 0822     	 movs r2,#8
 1896 032a 8260     	 str r2,[r0,#8]
1369:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet   |=  (uint32_t)XMC_USBH_PACKET_DATA0;
 1897              	 .loc 1 1369 0
 1898 032c 54F81A2C 	 ldr r2,[r4,#-26]
 1899 0330 22F0F002 	 bic r2,r2,#240
1370:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_HANDSHAKE_STALL;                            /
 1900              	 .loc 1 1370 0
 1901 0334 42F01002 	 orr r2,r2,#16
 1902 0338 44F81A2C 	 str r2,[r4,#-26]
1371:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
 1903              	 .loc 1 1371 0
 1904 033c 1022     	 movs r2,#16
 1905 033e 2271     	 strb r2,[r4,#4]
 1906              	.LVL222:
1368:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet &= (uint32_t)(~XMC_USBH_PACKET_DATA_Msk);
 1907              	 .loc 1 1368 0
 1908 0340 0021     	 movs r1,#0
 1909              	.LVL223:
 1910              	.LBB70:
 1911              	.LBB71:
 145:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1912              	 .loc 1 145 0
 1913 0342 0222     	 movs r2,#2
 1914              	.LBE71:
 1915              	.LBE70:
1368:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->packet &= (uint32_t)(~XMC_USBH_PACKET_DATA_Msk);
 1916              	 .loc 1 1368 0
 1917 0344 6170     	 strb r1,[r4,#1]
 1918              	.LBB73:
 1919              	.LBB72:
 145:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1920              	 .loc 1 145 0
 1921 0346 C260     	 str r2,[r0,#12]
 146:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1922              	 .loc 1 146 0
 1923 0348 5EF80320 	 ldr r2,[lr,r3]
 1924 034c 42F04042 	 orr r2,r2,#-1073741824
 1925 0350 4EF80320 	 str r2,[lr,r3]
 1926              	.LVL224:
 1927              	.L168:
 1928              	.LBE72:
 1929              	.LBE73:
1375:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_ch->HCINT = USB_CH_HCINTx_ERRORS;                                        /*  clear 
 1930              	 .loc 1 1375 0
 1931 0354 11F4F06F 	 tst r1,#1920
 1932 0358 0ED0     	 beq .L169
1376:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->in_use = 0U;                                                       /*  releas
 1933              	 .loc 1 1376 0
 1934 035a 4FF4F062 	 mov r2,#1920
 1935 035e 8260     	 str r2,[r0,#8]
1377:../Libraries/XMCLib/src/xmc_usbh.c ****             ptr_pipe->event = (uint8_t)XMC_USBH_EVENT_BUS_ERROR;                                  /
 1936              	 .loc 1 1377 0
 1937 0360 0022     	 movs r2,#0
 1938 0362 6270     	 strb r2,[r4,#1]
1378:../Libraries/XMCLib/src/xmc_usbh.c ****             XMC_lTriggerHaltChannel(ptr_ch);                                             /*  trigge
 1939              	 .loc 1 1378 0
 1940 0364 4022     	 movs r2,#64
 1941 0366 2271     	 strb r2,[r4,#4]
 1942              	.LVL225:
 1943              	.LBB74:
 1944              	.LBB75:
 145:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_ch->HCCHAR  |= (uint32_t)(USB_CH_HCCHAR_ChEna_Msk | USB_CH_HCCHAR_ChDis_Msk);
 1945              	 .loc 1 145 0
 1946 0368 0222     	 movs r2,#2
 1947 036a C260     	 str r2,[r0,#12]
 146:../Libraries/XMCLib/src/xmc_usbh.c ****   return;
 1948              	 .loc 1 146 0
 1949 036c 5EF80320 	 ldr r2,[lr,r3]
 1950 0370 42F04042 	 orr r2,r2,#-1073741824
 1951 0374 4EF80320 	 str r2,[lr,r3]
 1952              	.LVL226:
 1953              	.L169:
 1954              	.LBE75:
 1955              	.LBE74:
1382:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, (uint32_t)ptr_pipe->event
 1956              	 .loc 1 1382 0
 1957 0378 A378     	 ldrb r3,[r4,#2]
 1958 037a 002B     	 cmp r3,#0
 1959 037c 7FF4F6AE 	 bne .L157
1382:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, (uint32_t)ptr_pipe->event
 1960              	 .loc 1 1382 0 is_stmt 0 discriminator 1
 1961 0380 94F80190 	 ldrb r9,[r4,#1]
 1962 0384 B9F1000F 	 cmp r9,#0
 1963 0388 7FF4F0AE 	 bne .L157
1382:../Libraries/XMCLib/src/xmc_usbh.c ****           XMC_USBH0_device.SignalPipeEvent_cb((XMC_USBH_EP_HANDLE)ptr_ch, (uint32_t)ptr_pipe->event
 1964              	 .loc 1 1382 0 discriminator 2
 1965 038c 2179     	 ldrb r1,[r4,#4]
 1966              	.LVL227:
 1967 038e 0029     	 cmp r1,#0
 1968 0390 3FF4ECAE 	 beq .L157
1383:../Libraries/XMCLib/src/xmc_usbh.c ****           ptr_pipe->event  = 0U;
 1969              	 .loc 1 1383 0 is_stmt 1
 1970 0394 FB68     	 ldr r3,[r7,#12]
 1971 0396 9847     	 blx r3
 1972              	.LVL228:
1384:../Libraries/XMCLib/src/xmc_usbh.c ****         }
 1973              	 .loc 1 1384 0
 1974 0398 84F80490 	 strb r9,[r4,#4]
 1975 039c E6E6     	 b .L157
 1976              	.LVL229:
 1977              	.L156:
 1978 039e 204C     	 ldr r4,.L244+4
1373:../Libraries/XMCLib/src/xmc_usbh.c ****         } 
 1979              	 .loc 1 1373 0 discriminator 1
 1980 03a0 0025     	 movs r5,#0
 1981              	.LVL230:
 1982              	.L177:
1397:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1398:../Libraries/XMCLib/src/xmc_usbh.c **** 
1399:../Libraries/XMCLib/src/xmc_usbh.c ****   /* Handle restarts of unfinished transfers (due to NAK or ACK) */
1400:../Libraries/XMCLib/src/xmc_usbh.c ****   ptr_pipe = (XMC_USBH0_pipe_t *)(pipe);
1401:../Libraries/XMCLib/src/xmc_usbh.c ****   for (ch = 0U; ch < USBH0_MAX_PIPE_NUM; ch++) {
1402:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 1983              	 .loc 1 1402 0
 1984 03a2 14F8053C 	 ldrb r3,[r4,#-5]
 1985 03a6 012B     	 cmp r3,#1
 1986 03a8 A4F12000 	 sub r0,r4,#32
 1987              	.LVL231:
 1988 03ac 2AD1     	 bne .L171
 1989              	 .loc 1 1402 0 is_stmt 0 discriminator 1
 1990 03ae 14F8042C 	 ldrb r2,[r4,#-4]
 1991 03b2 3ABB     	 cbnz r2,.L171
1403:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Restart periodic transfer if not in progress and interval expired */
1404:../Libraries/XMCLib/src/xmc_usbh.c ****       if (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT) 
 1992              	 .loc 1 1404 0 is_stmt 1
 1993 03b4 14F8063C 	 ldrb r3,[r4,#-6]
 1994 03b8 032B     	 cmp r3,#3
 1995 03ba 2AD0     	 beq .L172
1405:../Libraries/XMCLib/src/xmc_usbh.c ****       {
1406:../Libraries/XMCLib/src/xmc_usbh.c ****             /*Data toggle if NACK not received*/
1407:../Libraries/XMCLib/src/xmc_usbh.c ****             if (!is_nack[ch])
 1996              	 .loc 1 1407 0
 1997 03bc 174B     	 ldr r3,.L244
 1998 03be E95C     	 ldrb r1,[r5,r3]
 1999 03c0 99B9     	 cbnz r1,.L173
1408:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1409:../Libraries/XMCLib/src/xmc_usbh.c ****               switch (ptr_pipe->packet & (uint32_t)XMC_USBH_PACKET_DATA_Msk)
 2000              	 .loc 1 1409 0
 2001 03c2 54F8203C 	 ldr r3,[r4,#-32]
 2002 03c6 03F0F002 	 and r2,r3,#240
 2003 03ca 102A     	 cmp r2,#16
 2004 03cc 06D0     	 beq .L175
 2005 03ce 202A     	 cmp r2,#32
 2006 03d0 0CD1     	 bne .L178
1410:../Libraries/XMCLib/src/xmc_usbh.c ****               {
1411:../Libraries/XMCLib/src/xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA0:
1412:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   &= (uint32_t)~XMC_USBH_PACKET_DATA_Msk;
1413:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA1;
1414:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
1415:../Libraries/XMCLib/src/xmc_usbh.c ****                 case XMC_USBH_PACKET_DATA1:
1416:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   &= (uint32_t)~XMC_USBH_PACKET_DATA_Msk;
 2007              	 .loc 1 1416 0
 2008 03d2 23F0F003 	 bic r3,r3,#240
1417:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA0;
 2009              	 .loc 1 1417 0
 2010 03d6 43F01003 	 orr r3,r3,#16
 2011 03da 03E0     	 b .L238
 2012              	.L175:
1412:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_pipe->packet   |= (uint32_t)XMC_USBH_PACKET_DATA1;
 2013              	 .loc 1 1412 0
 2014 03dc 23F0F003 	 bic r3,r3,#240
1413:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
 2015              	 .loc 1 1413 0
 2016 03e0 43F02003 	 orr r3,r3,#32
 2017              	.L238:
 2018              	 .loc 1 1417 0
 2019 03e4 44F8203C 	 str r3,[r4,#-32]
1418:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
 2020              	 .loc 1 1418 0
 2021 03e8 00E0     	 b .L178
 2022              	.L173:
1419:../Libraries/XMCLib/src/xmc_usbh.c ****                 default:
1420:../Libraries/XMCLib/src/xmc_usbh.c ****                   break;
1421:../Libraries/XMCLib/src/xmc_usbh.c ****               }
1422:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1423:../Libraries/XMCLib/src/xmc_usbh.c ****             else
1424:../Libraries/XMCLib/src/xmc_usbh.c ****             {
1425:../Libraries/XMCLib/src/xmc_usbh.c ****               is_nack[ch] = false;
 2023              	 .loc 1 1425 0
 2024 03ea EA54     	 strb r2,[r5,r3]
 2025              	.L178:
1426:../Libraries/XMCLib/src/xmc_usbh.c ****             }
1427:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1428:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((ptr_pipe->ep_type == (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT)&&(ptr_pipe->interrupt_trigge
1429:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT))
1430:../Libraries/XMCLib/src/xmc_usbh.c ****       {
1431:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->interrupt_triggered = 0U;
 2026              	 .loc 1 1431 0
 2027 03ec 0023     	 movs r3,#0
 2028 03ee 04F8033C 	 strb r3,[r4,#-3]
1432:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->transfer_active = 1U;
 2029              	 .loc 1 1432 0
 2030 03f2 0123     	 movs r3,#1
 2031 03f4 04F8043C 	 strb r3,[r4,#-4]
1433:../Libraries/XMCLib/src/xmc_usbh.c ****         (void)XMC_lStartTransfer (ptr_pipe, (((USB0_CH_TypeDef *)(XMC_USBH0_device.host_channel_reg
 2032              	 .loc 1 1433 0
 2033 03f8 0A4B     	 ldr r3,.L244+8
 2034 03fa 5968     	 ldr r1,[r3,#4]
 2035 03fc 01EB4511 	 add r1,r1,r5,lsl#5
 2036 0400 FFF7FEFF 	 bl XMC_lStartTransfer
 2037              	.LVL232:
 2038              	.L171:
1401:../Libraries/XMCLib/src/xmc_usbh.c ****     if ((ptr_pipe->in_use == 1U) && (ptr_pipe->transfer_active == 0U)) {
 2039              	 .loc 1 1401 0 discriminator 2
 2040 0404 0135     	 adds r5,r5,#1
 2041              	.LVL233:
 2042 0406 0E2D     	 cmp r5,#14
 2043 0408 04F12004 	 add r4,r4,#32
 2044              	.LVL234:
 2045 040c C9D1     	 bne .L177
 2046 040e BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 2047              	.LVL235:
 2048              	.L172:
1428:../Libraries/XMCLib/src/xmc_usbh.c ****                 (ptr_pipe->ep_type != (uint8_t)XMC_USBH_ENDPOINT_INTERRUPT))
 2049              	 .loc 1 1428 0
 2050 0412 14F8033C 	 ldrb r3,[r4,#-3]
 2051 0416 012B     	 cmp r3,#1
 2052 0418 F4D1     	 bne .L171
 2053 041a E7E7     	 b .L178
 2054              	.L245:
 2055              	 .align 2
 2056              	.L244:
 2057 041c 00000000 	 .word is_nack
 2058 0420 20000000 	 .word pipe+32
 2059 0424 00000000 	 .word .LANCHOR1
 2060              	 .cfi_endproc
 2061              	.LFE205:
 2063              	 .section .text.XMC_USBH_GetInterruptStatus,"ax",%progbits
 2064              	 .align 1
 2065              	 .global XMC_USBH_GetInterruptStatus
 2066              	 .thumb
 2067              	 .thumb_func
 2069              	XMC_USBH_GetInterruptStatus:
 2070              	.LFB206:
1434:../Libraries/XMCLib/src/xmc_usbh.c ****       }
1435:../Libraries/XMCLib/src/xmc_usbh.c ****     }
1436:../Libraries/XMCLib/src/xmc_usbh.c ****     ptr_pipe++;
1437:../Libraries/XMCLib/src/xmc_usbh.c ****   }
1438:../Libraries/XMCLib/src/xmc_usbh.c **** }
1439:../Libraries/XMCLib/src/xmc_usbh.c **** 
1440:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function provides host mode interrupt status*/
1441:../Libraries/XMCLib/src/xmc_usbh.c **** uint32_t XMC_USBH_GetInterruptStatus(void)
1442:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2071              	 .loc 1 1442 0
 2072              	 .cfi_startproc
 2073              	 
 2074              	 
 2075              	 
1443:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH0_device.global_register->GINTSTS_HOSTMODE;
 2076              	 .loc 1 1443 0
 2077 0000 014B     	 ldr r3,.L247
 2078 0002 1B68     	 ldr r3,[r3]
 2079 0004 5869     	 ldr r0,[r3,#20]
1444:../Libraries/XMCLib/src/xmc_usbh.c **** }
 2080              	 .loc 1 1444 0
 2081 0006 7047     	 bx lr
 2082              	.L248:
 2083              	 .align 2
 2084              	.L247:
 2085 0008 00000000 	 .word .LANCHOR1
 2086              	 .cfi_endproc
 2087              	.LFE206:
 2089              	 .section .text.XMC_USBH_Select_VBUS,"ax",%progbits
 2090              	 .align 1
 2091              	 .global XMC_USBH_Select_VBUS
 2092              	 .thumb
 2093              	 .thumb_func
 2095              	XMC_USBH_Select_VBUS:
 2096              	.LFB207:
1445:../Libraries/XMCLib/src/xmc_usbh.c **** 
1446:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function selects the port pin used as DRIVEVBUS*/
1447:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_Select_VBUS(XMC_GPIO_PORT_t* port, uint32_t pin)
1448:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2097              	 .loc 1 1448 0
 2098              	 .cfi_startproc
 2099              	 
 2100              	 
 2101              	 
 2102              	.LVL236:
1449:../Libraries/XMCLib/src/xmc_usbh.c ****   VBUS_port = port;
 2103              	 .loc 1 1449 0
 2104 0000 034B     	 ldr r3,.L250
 2105 0002 1860     	 str r0,[r3]
1450:../Libraries/XMCLib/src/xmc_usbh.c ****   VBUS_pin = pin;
 2106              	 .loc 1 1450 0
 2107 0004 034B     	 ldr r3,.L250+4
1451:../Libraries/XMCLib/src/xmc_usbh.c **** 
1452:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Configure the port pin alternate function*/
1453:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_GPIO_SetMode(VBUS_port, (uint8_t)VBUS_pin, XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1);
 2108              	 .loc 1 1453 0
 2109 0006 8822     	 movs r2,#136
1450:../Libraries/XMCLib/src/xmc_usbh.c ****   VBUS_pin = pin;
 2110              	 .loc 1 1450 0
 2111 0008 1960     	 str r1,[r3]
 2112              	 .loc 1 1453 0
 2113 000a C9B2     	 uxtb r1,r1
 2114              	.LVL237:
 2115 000c FFF7FEBF 	 b XMC_GPIO_SetMode
 2116              	.LVL238:
 2117              	.L251:
 2118              	 .align 2
 2119              	.L250:
 2120 0010 00000000 	 .word .LANCHOR2
 2121 0014 00000000 	 .word .LANCHOR3
 2122              	 .cfi_endproc
 2123              	.LFE207:
 2125              	 .section .text.XMC_USBH_TurnOffResumeBit,"ax",%progbits
 2126              	 .align 1
 2127              	 .global XMC_USBH_TurnOffResumeBit
 2128              	 .thumb
 2129              	 .thumb_func
 2131              	XMC_USBH_TurnOffResumeBit:
 2132              	.LFB208:
1454:../Libraries/XMCLib/src/xmc_usbh.c **** }
1455:../Libraries/XMCLib/src/xmc_usbh.c **** 
1456:../Libraries/XMCLib/src/xmc_usbh.c **** /*Function asserts the remote wakeup request by device by clearing the resume bit*/
1457:../Libraries/XMCLib/src/xmc_usbh.c **** void XMC_USBH_TurnOffResumeBit(void)
1458:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2133              	 .loc 1 1458 0
 2134              	 .cfi_startproc
 2135              	 
 2136              	 
 2137              	 
1459:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
1460:../Libraries/XMCLib/src/xmc_usbh.c ****   /*Clear resume bit*/
1461:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt = XMC_USBH0_device.global_register->HPRT;
 2138              	 .loc 1 1461 0
 2139 0000 044B     	 ldr r3,.L253
 2140 0002 1A68     	 ldr r2,[r3]
 2141 0004 D2F84034 	 ldr r3,[r2,#1088]
 2142              	.LVL239:
1462:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
1463:../Libraries/XMCLib/src/xmc_usbh.c ****   hprt &= (uint32_t)~((uint32_t)USB_HPRT_PrtRes_Msk);
 2143              	 .loc 1 1463 0
 2144 0008 23F04403 	 bic r3,r3,#68
 2145              	.LVL240:
1464:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_device.global_register->HPRT = hprt;
 2146              	 .loc 1 1464 0
 2147 000c C2F84034 	 str r3,[r2,#1088]
 2148 0010 7047     	 bx lr
 2149              	.L254:
 2150 0012 00BF     	 .align 2
 2151              	.L253:
 2152 0014 00000000 	 .word .LANCHOR1
 2153              	 .cfi_endproc
 2154              	.LFE208:
 2156              	 .section .text.XMC_USBH_osDelay,"ax",%progbits
 2157              	 .align 1
 2158              	 .weak XMC_USBH_osDelay
 2159              	 .thumb
 2160              	 .thumb_func
 2162              	XMC_USBH_osDelay:
 2163              	.LFB209:
1465:../Libraries/XMCLib/src/xmc_usbh.c **** }
1466:../Libraries/XMCLib/src/xmc_usbh.c **** 
1467:../Libraries/XMCLib/src/xmc_usbh.c **** 
1468:../Libraries/XMCLib/src/xmc_usbh.c **** 
1469:../Libraries/XMCLib/src/xmc_usbh.c **** /*USB host driver assembling all the implementation into a single CMSIS compliant structure type*/
1470:../Libraries/XMCLib/src/xmc_usbh.c **** XMC_USBH_DRIVER_t Driver_USBH0 = {
1471:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetVersion,
1472:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetCapabilities,
1473:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_Initialize,
1474:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_Uninitialize,
1475:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PowerControl,
1476:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortVbusOnOff,
1477:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortReset,
1478:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortSuspend,
1479:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortResume,
1480:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PortGetState,
1481:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeCreate,
1482:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeModify,
1483:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeDelete,
1484:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeReset,
1485:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransfer,
1486:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransferGetResult,
1487:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_PipeTransferAbort,
1488:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH_GetFrameNumber
1489:../Libraries/XMCLib/src/xmc_usbh.c **** };
1490:../Libraries/XMCLib/src/xmc_usbh.c **** 
1491:../Libraries/XMCLib/src/xmc_usbh.c **** 
1492:../Libraries/XMCLib/src/xmc_usbh.c **** /*Weak definition of delay function*/
1493:../Libraries/XMCLib/src/xmc_usbh.c **** __WEAK uint8_t XMC_USBH_osDelay(uint32_t MS)
1494:../Libraries/XMCLib/src/xmc_usbh.c **** {
 2164              	 .loc 1 1494 0
 2165              	 .cfi_startproc
 2166              	 
 2167              	 
 2168              	 
 2169              	.LVL241:
 2170              	.L256:
1495:../Libraries/XMCLib/src/xmc_usbh.c ****   (void)MS;
1496:../Libraries/XMCLib/src/xmc_usbh.c ****   /*A precise time delay implementation for this function has to be provided*/
1497:../Libraries/XMCLib/src/xmc_usbh.c ****   while (1)
1498:../Libraries/XMCLib/src/xmc_usbh.c ****   {
1499:../Libraries/XMCLib/src/xmc_usbh.c ****     /*Wait*/
1500:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 2171              	 .loc 1 1500 0 discriminator 1
 2172 0000 FEE7     	 b .L256
 2173              	 .cfi_endproc
 2174              	.LFE209:
 2176              	 .section .text.XMC_USBH_PipeTransferAbort,"ax",%progbits
 2177              	 .align 1
 2178              	 .thumb
 2179              	 .thumb_func
 2181              	XMC_USBH_PipeTransferAbort:
 2182              	.LFB203:
1073:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 2183              	 .loc 1 1073 0
 2184              	 .cfi_startproc
 2185              	 
 2186              	 
 2187              	.LVL242:
 2188 0000 38B5     	 push {r3,r4,r5,lr}
 2189              	.LCFI11:
 2190              	 .cfi_def_cfa_offset 16
 2191              	 .cfi_offset 3,-16
 2192              	 .cfi_offset 4,-12
 2193              	 .cfi_offset 5,-8
 2194              	 .cfi_offset 14,-4
1081:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 2195              	 .loc 1 1081 0
 2196 0002 1E4B     	 ldr r3,.L272
 2197 0004 5A7C     	 ldrb r2,[r3,#17]
1073:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_pipe_t *ptr_pipe;
 2198              	 .loc 1 1073 0
 2199 0006 0446     	 mov r4,r0
1081:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 2200              	 .loc 1 1081 0
 2201 0008 12B9     	 cbnz r2,.L258
 2202              	.LVL243:
 2203              	.L260:
1077:../Libraries/XMCLib/src/xmc_usbh.c ****   
 2204              	 .loc 1 1077 0
 2205 000a 4FF0FF30 	 mov r0,#-1
 2206 000e 38BD     	 pop {r3,r4,r5,pc}
 2207              	.LVL244:
 2208              	.L258:
1087:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2209              	 .loc 1 1087 0
 2210 0010 0028     	 cmp r0,#0
 2211 0012 30D0     	 beq .L264
1093:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2212              	 .loc 1 1093 0
 2213 0014 5B68     	 ldr r3,[r3,#4]
1095:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->in_use = 0U;
 2214              	 .loc 1 1095 0
 2215 0016 1A4A     	 ldr r2,.L272+4
1093:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2216              	 .loc 1 1093 0
 2217 0018 C31A     	 subs r3,r0,r3
 2218              	.LVL245:
1095:../Libraries/XMCLib/src/xmc_usbh.c ****         ptr_pipe->in_use = 0U;
 2219              	 .loc 1 1095 0
 2220 001a 23F01F03 	 bic r3,r3,#31
 2221              	.LVL246:
 2222 001e 1344     	 add r3,r3,r2
 2223 0020 DA78     	 ldrb r2,[r3,#3]
 2224 0022 002A     	 cmp r2,#0
 2225 0024 F1D0     	 beq .L260
1096:../Libraries/XMCLib/src/xmc_usbh.c ****         /* Disable channel if not yet halted */
 2226              	 .loc 1 1096 0
 2227 0026 0022     	 movs r2,#0
 2228 0028 DA70     	 strb r2,[r3,#3]
1098:../Libraries/XMCLib/src/xmc_usbh.c ****         {
 2229              	 .loc 1 1098 0
 2230 002a 8068     	 ldr r0,[r0,#8]
 2231              	.LVL247:
 2232 002c 10F00205 	 ands r5,r0,#2
 2233 0030 EBD1     	 bne .L260
1100:../Libraries/XMCLib/src/xmc_usbh.c ****           {
 2234              	 .loc 1 1100 0
 2235 0032 2368     	 ldr r3,[r4]
 2236 0034 9342     	 cmp r3,r2
 2237 0036 E8DA     	 bge .L260
1102:../Libraries/XMCLib/src/xmc_usbh.c ****             (void)XMC_USBH_osDelay(1U);
 2238              	 .loc 1 1102 0
 2239 0038 E560     	 str r5,[r4,#12]
1103:../Libraries/XMCLib/src/xmc_usbh.c ****             if (ptr_ch->HCINT & USB_CH_HCINT_NAK_Msk) {
 2240              	 .loc 1 1103 0
 2241 003a 0120     	 movs r0,#1
 2242 003c FFF7FEFF 	 bl XMC_USBH_osDelay
 2243              	.LVL248:
1104:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;    /* Clear all interrupts */
 2244              	 .loc 1 1104 0
 2245 0040 A368     	 ldr r3,[r4,#8]
 2246 0042 13F0100F 	 tst r3,#16
 2247 0046 40F2BB73 	 movw r3,#1979
1105:../Libraries/XMCLib/src/xmc_usbh.c ****               status = XMC_USBH_DRIVER_OK;
 2248              	 .loc 1 1105 0
 2249 004a A360     	 str r3,[r4,#8]
1104:../Libraries/XMCLib/src/xmc_usbh.c ****               ptr_ch->HCINT  =  USB_CH_HCINTx_ALL;    /* Clear all interrupts */
 2250              	 .loc 1 1104 0
 2251 004c 01D0     	 beq .L261
 2252              	.LVL249:
1106:../Libraries/XMCLib/src/xmc_usbh.c ****             }
 2253              	 .loc 1 1106 0
 2254 004e 2846     	 mov r0,r5
 2255 0050 38BD     	 pop {r3,r4,r5,pc}
 2256              	.LVL250:
 2257              	.L261:
1111:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2258              	 .loc 1 1111 0
 2259 0052 2368     	 ldr r3,[r4]
 2260 0054 43F04043 	 orr r3,r3,#-1073741824
 2261 0058 2360     	 str r3,[r4]
 2262              	.LVL251:
1077:../Libraries/XMCLib/src/xmc_usbh.c ****   
 2263              	 .loc 1 1077 0
 2264 005a 4FF0FF30 	 mov r0,#-1
1111:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2265              	 .loc 1 1111 0
 2266 005e 41F28833 	 movw r3,#5000
 2267              	.LVL252:
 2268              	.L263:
1115:../Libraries/XMCLib/src/xmc_usbh.c ****                   ptr_ch->HCINT = USB_CH_HCINTx_ALL;
 2269              	 .loc 1 1115 0
 2270 0062 A268     	 ldr r2,[r4,#8]
 2271 0064 9207     	 lsls r2,r2,#30
1116:../Libraries/XMCLib/src/xmc_usbh.c ****                   status = XMC_USBH_DRIVER_OK;
 2272              	 .loc 1 1116 0
 2273 0066 42BF     	 ittt mi
 2274 0068 40F2BB72 	 movwmi r2,#1979
 2275 006c A260     	 strmi r2,[r4,#8]
 2276              	.LVL253:
1117:../Libraries/XMCLib/src/xmc_usbh.c ****                 }
 2277              	 .loc 1 1117 0
 2278 006e 0020     	 movmi r0,#0
 2279              	.LVL254:
1114:../Libraries/XMCLib/src/xmc_usbh.c ****                 if (ptr_ch->HCINT & USB_CH_HCINT_ChHltd_Msk) {
 2280              	 .loc 1 1114 0
 2281 0070 013B     	 subs r3,r3,#1
 2282              	.LVL255:
 2283 0072 F6D1     	 bne .L263
 2284 0074 38BD     	 pop {r3,r4,r5,pc}
 2285              	.LVL256:
 2286              	.L264:
1089:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2287              	 .loc 1 1089 0
 2288 0076 6FF00400 	 mvn r0,#4
 2289              	.LVL257:
1128:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2290              	 .loc 1 1128 0
 2291 007a 38BD     	 pop {r3,r4,r5,pc}
 2292              	.LVL258:
 2293              	.L273:
 2294              	 .align 2
 2295              	.L272:
 2296 007c 00000000 	 .word .LANCHOR1
 2297 0080 18000000 	 .word pipe+24
 2298              	 .cfi_endproc
 2299              	.LFE203:
 2301              	 .section .text.XMC_USBH_PortResume,"ax",%progbits
 2302              	 .align 1
 2303              	 .thumb
 2304              	 .thumb_func
 2306              	XMC_USBH_PortResume:
 2307              	.LFB195:
 629:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2308              	 .loc 1 629 0
 2309              	 .cfi_startproc
 2310              	 
 2311              	 
 2312              	.LVL259:
 2313 0000 38B5     	 push {r3,r4,r5,lr}
 2314              	.LCFI12:
 2315              	 .cfi_def_cfa_offset 16
 2316              	 .cfi_offset 3,-16
 2317              	 .cfi_offset 4,-12
 2318              	 .cfi_offset 5,-8
 2319              	 .cfi_offset 14,-4
 632:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 2320              	 .loc 1 632 0
 2321 0002 124D     	 ldr r5,.L278
 2322 0004 6B7C     	 ldrb r3,[r5,#17]
 629:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2323              	 .loc 1 629 0
 2324 0006 0446     	 mov r4,r0
 632:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 2325              	 .loc 1 632 0
 2326 0008 CBB1     	 cbz r3,.L276
 638:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2327              	 .loc 1 638 0
 2328 000a D8B9     	 cbnz r0,.L277
 645:../Libraries/XMCLib/src/xmc_usbh.c ****       /*Set resume bit*/
 2329              	 .loc 1 645 0
 2330 000c 2A68     	 ldr r2,[r5]
 2331 000e 4FF48073 	 mov r3,#256
 2332 0012 C2F8003E 	 str r3,[r2,#3584]
 647:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 2333              	 .loc 1 647 0
 2334 0016 D2F84034 	 ldr r3,[r2,#1088]
 2335              	.LVL260:
 648:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt |= (uint32_t)USB_HPRT_PrtRes_Msk;
 2336              	 .loc 1 648 0
 2337 001a 23F00403 	 bic r3,r3,#4
 2338              	.LVL261:
 649:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 2339              	 .loc 1 649 0
 2340 001e 43F04003 	 orr r3,r3,#64
 2341              	.LVL262:
 650:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2342              	 .loc 1 650 0
 2343 0022 C2F84034 	 str r3,[r2,#1088]
 652:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2344              	 .loc 1 652 0
 2345 0026 1420     	 movs r0,#20
 2346              	.LVL263:
 2347 0028 FFF7FEFF 	 bl XMC_USBH_osDelay
 2348              	.LVL264:
 654:../Libraries/XMCLib/src/xmc_usbh.c ****       hprt &= (uint32_t)~(USB_HPRT_PrtEna_Msk);
 2349              	 .loc 1 654 0
 2350 002c 2A68     	 ldr r2,[r5]
 2351 002e D2F84034 	 ldr r3,[r2,#1088]
 2352              	.LVL265:
 656:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->HPRT = hprt;
 2353              	 .loc 1 656 0
 2354 0032 23F04403 	 bic r3,r3,#68
 2355              	.LVL266:
 657:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2356              	 .loc 1 657 0
 2357 0036 C2F84034 	 str r3,[r2,#1088]
 630:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 2358              	 .loc 1 630 0
 2359 003a 2046     	 mov r0,r4
 2360 003c 38BD     	 pop {r3,r4,r5,pc}
 2361              	.LVL267:
 2362              	.L276:
 634:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 2363              	 .loc 1 634 0
 2364 003e 4FF0FF30 	 mov r0,#-1
 2365              	.LVL268:
 2366 0042 38BD     	 pop {r3,r4,r5,pc}
 2367              	.LVL269:
 2368              	.L277:
 640:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2369              	 .loc 1 640 0
 2370 0044 6FF00400 	 mvn r0,#4
 2371              	.LVL270:
 662:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2372              	 .loc 1 662 0
 2373 0048 38BD     	 pop {r3,r4,r5,pc}
 2374              	.L279:
 2375 004a 00BF     	 .align 2
 2376              	.L278:
 2377 004c 00000000 	 .word .LANCHOR1
 2378              	 .cfi_endproc
 2379              	.LFE195:
 2381              	 .section .text.XMC_USBH_PortReset,"ax",%progbits
 2382              	 .align 1
 2383              	 .thumb
 2384              	 .thumb_func
 2386              	XMC_USBH_PortReset:
 2387              	.LFB193:
 542:../Libraries/XMCLib/src/xmc_usbh.c ****   uint32_t hprt;
 2388              	 .loc 1 542 0
 2389              	 .cfi_startproc
 2390              	 
 2391              	 
 2392              	.LVL271:
 2393 0000 70B5     	 push {r4,r5,r6,lr}
 2394              	.LCFI13:
 2395              	 .cfi_def_cfa_offset 16
 2396              	 .cfi_offset 4,-16
 2397              	 .cfi_offset 5,-12
 2398              	 .cfi_offset 6,-8
 2399              	 .cfi_offset 14,-4
 545:../Libraries/XMCLib/src/xmc_usbh.c ****   {
 2400              	 .loc 1 545 0
 2401 0002 164C     	 ldr r4,.L291
 2402 0004 637C     	 ldrb r3,[r4,#17]
 2403 0006 2BB3     	 cbz r3,.L284
 557:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtEna_Msk;                            /* Disable port */
 2404              	 .loc 1 557 0
 2405 0008 2268     	 ldr r2,[r4]
 2406 000a D2F84054 	 ldr r5,[r2,#1088]
 556:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt  =  XMC_USBH0_device.global_register->HPRT;
 2407              	 .loc 1 556 0
 2408 000e 0123     	 movs r3,#1
 2409 0010 A374     	 strb r3,[r4,#18]
 558:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt |= (uint32_t)USB_HPRT_PrtRst_Msk;                            /* Port reset */
 2410              	 .loc 1 558 0
 2411 0012 25F00403 	 bic r3,r5,#4
 559:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 2412              	 .loc 1 559 0
 2413 0016 43F48073 	 orr r3,r3,#256
 553:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2414              	 .loc 1 553 0
 2415 001a 0028     	 cmp r0,#0
 560:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait at least 50ms *
 2416              	 .loc 1 560 0
 2417 001c C2F84034 	 str r3,[r2,#1088]
 561:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtRst_Msk;                            /* Clear port reset */
 2418              	 .loc 1 561 0
 2419 0020 4FF03200 	 mov r0,#50
 2420              	.LVL272:
 553:../Libraries/XMCLib/src/xmc_usbh.c ****     }
 2421              	 .loc 1 553 0
 2422 0024 0CBF     	 ite eq
 2423 0026 0026     	 moveq r6,#0
 2424 0028 6FF00406 	 mvnne r6,#4
 2425              	.LVL273:
 561:../Libraries/XMCLib/src/xmc_usbh.c ****     hprt &= (uint32_t)~USB_HPRT_PrtRst_Msk;                            /* Clear port reset */
 2426              	 .loc 1 561 0
 2427 002c FFF7FEFF 	 bl XMC_USBH_osDelay
 2428              	.LVL274:
 563:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait for ISR */
 2429              	 .loc 1 563 0
 2430 0030 2368     	 ldr r3,[r4]
 562:../Libraries/XMCLib/src/xmc_usbh.c ****     XMC_USBH0_device.global_register->HPRT = hprt;
 2431              	 .loc 1 562 0
 2432 0032 25F48275 	 bic r5,r5,#260
 2433              	.LVL275:
 563:../Libraries/XMCLib/src/xmc_usbh.c ****     (void)XMC_USBH_osDelay(50U);                                            /* wait for ISR */
 2434              	 .loc 1 563 0
 2435 0036 C3F84054 	 str r5,[r3,#1088]
 564:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2436              	 .loc 1 564 0
 2437 003a 3220     	 movs r0,#50
 2438 003c FFF7FEFF 	 bl XMC_USBH_osDelay
 2439              	.LVL276:
 567:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2440              	 .loc 1 567 0
 2441 0040 2268     	 ldr r2,[r4]
 2442              	.L283:
 567:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2443              	 .loc 1 567 0 is_stmt 0 discriminator 1
 2444 0042 D2F84034 	 ldr r3,[r2,#1088]
 2445 0046 5B07     	 lsls r3,r3,#29
 2446 0048 FBD5     	 bpl .L283
 572:../Libraries/XMCLib/src/xmc_usbh.c ****     {
 2447              	 .loc 1 572 0 is_stmt 1
 2448 004a A37C     	 ldrb r3,[r4,#18]
 2449 004c 23B1     	 cbz r3,.L281
 574:../Libraries/XMCLib/src/xmc_usbh.c ****       status = XMC_USBH_DRIVER_ERROR;                               /* reset not confirmed inside I
 2450              	 .loc 1 574 0
 2451 004e 034B     	 ldr r3,.L291
 2452 0050 0022     	 movs r2,#0
 2453 0052 9A74     	 strb r2,[r3,#18]
 2454              	.LVL277:
 2455              	.L284:
 547:../Libraries/XMCLib/src/xmc_usbh.c ****   }
 2456              	 .loc 1 547 0
 2457 0054 4FF0FF36 	 mov r6,#-1
 2458              	.L281:
 2459              	.LVL278:
 580:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2460              	 .loc 1 580 0
 2461 0058 3046     	 mov r0,r6
 2462 005a 70BD     	 pop {r4,r5,r6,pc}
 2463              	.LVL279:
 2464              	.L292:
 2465              	 .align 2
 2466              	.L291:
 2467 005c 00000000 	 .word .LANCHOR1
 2468              	 .cfi_endproc
 2469              	.LFE193:
 2471              	 .section .text.XMC_USBH_PowerControl,"ax",%progbits
 2472              	 .align 1
 2473              	 .thumb
 2474              	 .thumb_func
 2476              	XMC_USBH_PowerControl:
 2477              	.LFB191:
 395:../Libraries/XMCLib/src/xmc_usbh.c ****   int32_t status = XMC_USBH_DRIVER_OK;
 2478              	 .loc 1 395 0
 2479              	 .cfi_startproc
 2480              	 
 2481              	 
 2482              	.LVL280:
 2483 0000 38B5     	 push {r3,r4,r5,lr}
 2484              	.LCFI14:
 2485              	 .cfi_def_cfa_offset 16
 2486              	 .cfi_offset 3,-16
 2487              	 .cfi_offset 4,-12
 2488              	 .cfi_offset 5,-8
 2489              	 .cfi_offset 14,-4
 398:../Libraries/XMCLib/src/xmc_usbh.c ****     case XMC_USBH_POWER_LOW:
 2490              	 .loc 1 398 0
 2491 0002 0446     	 mov r4,r0
 2492 0004 10B1     	 cbz r0,.L295
 2493 0006 0228     	 cmp r0,#2
 2494 0008 25D0     	 beq .L296
 2495 000a 8EE0     	 b .L309
 2496              	.L295:
 2497              	.LVL281:
 2498              	.LBB90:
 2499              	.LBB91:
 2500              	 .loc 2 1719 0
 2501 000c 4B4B     	 ldr r3,.L310
 2502 000e 4FF40062 	 mov r2,#2048
 2503 0012 C3F88C20 	 str r2,[r3,#140]
 2504              	.LBB92:
 2505              	.LBB93:
 2506              	 .loc 3 879 0
 2507              	
 2508 0016 BFF34F8F 	 dsb 0xF
 2509              	
 2510              	 .thumb
 2511              	.LBE93:
 2512              	.LBE92:
 2513              	.LBB94:
 2514              	.LBB95:
 868:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 2515              	 .loc 3 868 0
 2516              	
 2517 001a BFF36F8F 	 isb 0xF
 2518              	
 2519              	.LVL282:
 2520              	 .thumb
 2521              	.LBE95:
 2522              	.LBE94:
 2523              	.LBE91:
 2524              	.LBE90:
 405:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  &= (uint32_t)(~USB_GAHBCFG_GlblIntrMsk_Msk); /* Di
 2525              	 .loc 1 405 0
 2526 001e 484D     	 ldr r5,.L310+4
 2527              	.LBB96:
 2528              	.LBB97:
1720:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     __DSB();
1721:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     __ISB();
1722:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1723:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1724:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1725:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1726:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1727:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1728:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1729:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1730:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1731:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1732:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1733:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1734:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1735:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1736:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1737:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1738:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1739:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1740:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   else
1741:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1742:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1743:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1744:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1745:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1746:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1747:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1748:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1749:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1750:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1751:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1752:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1753:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1754:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1755:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1756:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1757:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1758:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1759:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1760:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1761:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1762:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1763:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1764:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1765:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1766:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1767:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1768:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1769:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1770:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1771:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1772:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 2529              	 .loc 2 1772 0
 2530 0020 C3F88C21 	 str r2,[r3,#396]
 2531              	.LBE97:
 2532              	.LBE96:
 406:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_ENABLE); /* Enable Clock Gating */
 2533              	 .loc 1 406 0
 2534 0024 2B68     	 ldr r3,[r5]
 405:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GAHBCFG  &= (uint32_t)(~USB_GAHBCFG_GlblIntrMsk_Msk); /* Di
 2535              	 .loc 1 405 0
 2536 0026 6874     	 strb r0,[r5,#17]
 406:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_lClockGating((uint8_t)XMC_USBH_CLOCK_GATING_ENABLE); /* Enable Clock Gating */
 2537              	 .loc 1 406 0
 2538 0028 9A68     	 ldr r2,[r3,#8]
 2539 002a 22F00102 	 bic r2,r2,#1
 2540 002e 9A60     	 str r2,[r3,#8]
 2541              	.LVL283:
 408:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_DisableUsb(); /* Disable Power USB */
 2542              	 .loc 1 408 0
 2543 0030 D3F8002E 	 ldr r2,[r3,#3584]
 2544 0034 42F00102 	 orr r2,r2,#1
 2545 0038 C3F8002E 	 str r2,[r3,#3584]
 409:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* reset USB */
 2546              	 .loc 1 409 0
 2547 003c FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 2548              	.LVL284:
 410:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.port_reset_active =  false; /* Reset variables */
 2549              	 .loc 1 410 0
 2550 0040 4048     	 ldr r0,.L310+8
 2551 0042 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 2552              	.LVL285:
 412:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 2553              	 .loc 1 412 0
 2554 0046 2146     	 mov r1,r4
 2555 0048 4FF4E072 	 mov r2,#448
 2556 004c 3E48     	 ldr r0,.L310+12
 411:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 2557              	 .loc 1 411 0
 2558 004e AC74     	 strb r4,[r5,#18]
 412:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 2559              	 .loc 1 412 0
 2560 0050 FFF7FEFF 	 bl memset
 2561              	.LVL286:
 2562 0054 6FE0     	 b .L302
 2563              	.LVL287:
 2564              	.L296:
 415:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 2565              	 .loc 1 415 0
 2566 0056 3A4D     	 ldr r5,.L310+4
 2567 0058 2B7C     	 ldrb r3,[r5,#16]
 2568 005a 002B     	 cmp r3,#0
 2569 005c 68D0     	 beq .L301
 420:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 2570              	 .loc 1 420 0
 2571 005e 6B7C     	 ldrb r3,[r5,#17]
 2572 0060 022B     	 cmp r3,#2
 2573 0062 68D0     	 beq .L302
 2574              	.LVL288:
 2575              	.LBB98:
 2576              	.LBB99:
 426:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0); /* deassert reset USB *
 2577              	 .loc 1 426 0
 2578 0064 FFF7FEFF 	 bl XMC_USBH_osDelay
 2579              	.LVL289:
 427:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(2U);
 2580              	 .loc 1 427 0
 2581 0068 3648     	 ldr r0,.L310+8
 2582 006a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 2583              	.LVL290:
 428:../Libraries/XMCLib/src/xmc_usbh.c ****       (void)XMC_USBH_osDelay(100U);
 2584              	 .loc 1 428 0
 2585 006e 2046     	 mov r0,r4
 2586 0070 FFF7FEFF 	 bl XMC_USBH_osDelay
 2587              	.LVL291:
 429:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_SCU_POWER_EnableUsb(); /* Enable Power USB */
 2588              	 .loc 1 429 0
 2589 0074 6420     	 movs r0,#100
 2590 0076 FFF7FEFF 	 bl XMC_USBH_osDelay
 2591              	.LVL292:
 430:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2592              	 .loc 1 430 0
 2593 007a FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 2594              	.LVL293:
 433:../Libraries/XMCLib/src/xmc_usbh.c ****       XMC_USBH0_device.global_register->GUSBCFG  |=  (uint32_t)USB_GUSBCFG_PHYSel_Msk;    /* Full-s
 2595              	 .loc 1 433 0
 2596 007e 2B68     	 ldr r3,[r5]
 2597 0080 D3F8002E 	 ldr r2,[r3,#3584]
 2598 0084 22F00102 	 bic r2,r2,#1
 2599 0088 C3F8002E 	 str r2,[r3,#3584]
 434:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2600              	 .loc 1 434 0
 2601 008c DA68     	 ldr r2,[r3,#12]
 2602 008e 42F04002 	 orr r2,r2,#64
 2603 0092 DA60     	 str r2,[r3,#12]
 2604              	.L297:
 436:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 2605              	 .loc 1 436 0
 2606 0094 1A69     	 ldr r2,[r3,#16]
 2607 0096 002A     	 cmp r2,#0
 2608 0098 FCDA     	 bge .L297
 441:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2609              	 .loc 1 441 0
 2610 009a 1A69     	 ldr r2,[r3,#16]
 2611 009c 42F00102 	 orr r2,r2,#1
 2612 00a0 1A61     	 str r2,[r3,#16]
 2613              	.L298:
 443:../Libraries/XMCLib/src/xmc_usbh.c ****       {
 2614              	 .loc 1 443 0
 2615 00a2 1C69     	 ldr r4,[r3,#16]
 2616 00a4 14F00104 	 ands r4,r4,#1
 2617 00a8 FBD1     	 bne .L298
 447:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2618              	 .loc 1 447 0
 2619 00aa 6420     	 movs r0,#100
 2620 00ac FFF7FEFF 	 bl XMC_USBH_osDelay
 2621              	.LVL294:
 450:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2622              	 .loc 1 450 0
 2623 00b0 4FF4E072 	 mov r2,#448
 2624 00b4 2448     	 ldr r0,.L310+12
 449:../Libraries/XMCLib/src/xmc_usbh.c ****       memset((void *)(pipe), 0, (USBH0_MAX_PIPE_NUM * sizeof(XMC_USBH0_pipe_t)));
 2625              	 .loc 1 449 0
 2626 00b6 AC74     	 strb r4,[r5,#18]
 450:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2627              	 .loc 1 450 0
 2628 00b8 2146     	 mov r1,r4
 2629 00ba FFF7FEFF 	 bl memset
 2630              	.LVL295:
 453:../Libraries/XMCLib/src/xmc_usbh.c ****       if (((loc_value & USB_GUSBCFG_ForceHstMode_Msk) == 0U) || \
 2631              	 .loc 1 453 0
 2632 00be 2B68     	 ldr r3,[r5]
 2633 00c0 DA68     	 ldr r2,[r3,#12]
 2634              	.LVL296:
 454:../Libraries/XMCLib/src/xmc_usbh.c ****           ((loc_value & USB_GUSBCFG_ForceDevMode_Msk) != 0U))
 2635              	 .loc 1 454 0
 2636 00c2 02F0C042 	 and r2,r2,#1610612736
 2637              	.LVL297:
 2638 00c6 B2F1005F 	 cmp r2,#536870912
 2639 00ca 0AD0     	 beq .L299
 457:../Libraries/XMCLib/src/xmc_usbh.c ****         XMC_USBH0_device.global_register->GUSBCFG |=  (uint32_t)USB_GUSBCFG_ForceHstMode_Msk;      
 2640              	 .loc 1 457 0
 2641 00cc DA68     	 ldr r2,[r3,#12]
 2642 00ce 22F08042 	 bic r2,r2,#1073741824
 2643 00d2 DA60     	 str r2,[r3,#12]
 458:../Libraries/XMCLib/src/xmc_usbh.c ****         (void)XMC_USBH_osDelay(100U);
 2644              	 .loc 1 458 0
 2645 00d4 DA68     	 ldr r2,[r3,#12]
 2646 00d6 42F00052 	 orr r2,r2,#536870912
 2647 00da DA60     	 str r2,[r3,#12]
 459:../Libraries/XMCLib/src/xmc_usbh.c ****       }
 2648              	 .loc 1 459 0
 2649 00dc 6420     	 movs r0,#100
 2650 00de FFF7FEFF 	 bl XMC_USBH_osDelay
 2651              	.LVL298:
 2652              	.L299:
 463:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2653              	 .loc 1 463 0
 2654 00e2 2B68     	 ldr r3,[r5]
 2655 00e4 D3F80024 	 ldr r2,[r3,#1024]
 2656 00e8 42F40172 	 orr r2,r2,#516
 2657 00ec C3F80024 	 str r2,[r3,#1024]
 466:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Non-periodic Tx FIFO setting */
 2658              	 .loc 1 466 0
 2659 00f0 4FF48D72 	 mov r2,#282
 2660 00f4 5A62     	 str r2,[r3,#36]
 468:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Periodic Tx FIFO setting */
 2661              	 .loc 1 468 0
 2662 00f6 02F58012 	 add r2,r2,#1048576
 2663 00fa 9A62     	 str r2,[r3,#40]
 470:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable channel interrupts */
 2664              	 .loc 1 470 0
 2665 00fc 134A     	 ldr r2,.L310+16
 2666 00fe C3F80021 	 str r2,[r3,#256]
 472:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Unmask interrupts */
 2667              	 .loc 1 472 0
 2668 0102 43F6FF72 	 movw r2,#16383
 2669 0106 C3F81824 	 str r2,[r3,#1048]
 474:../Libraries/XMCLib/src/xmc_usbh.c ****                         USB_GINTSTS_HOSTMODE_DisconnInt_Msk |
 2670              	 .loc 1 474 0
 2671 010a 114A     	 ldr r2,.L310+20
 2672 010c 9A61     	 str r2,[r3,#24]
 483:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Enable interrupts */
 2673              	 .loc 1 483 0
 2674 010e 0222     	 movs r2,#2
 2675 0110 6A74     	 strb r2,[r5,#17]
 485:../Libraries/XMCLib/src/xmc_usbh.c ****       /* Set highest interrupt priority */
 2676              	 .loc 1 485 0
 2677 0112 9A68     	 ldr r2,[r3,#8]
 2678 0114 42F00102 	 orr r2,r2,#1
 2679 0118 9A60     	 str r2,[r3,#8]
 2680              	.LVL299:
 2681              	.LBB100:
 2682              	.LBB101:
1773:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1774:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1775:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1776:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1777:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1778:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1779:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1780:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1781:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1782:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1783:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1784:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1785:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1786:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1787:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1788:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1789:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1790:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1791:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   else
1792:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1793:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1794:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
1795:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** }
1796:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1797:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** 
1798:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** /**
1799:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1800:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1801:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1802:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1803:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1804:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1805:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1806:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****  */
1807:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1808:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h **** {
1809:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1810:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   {
1811:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 2683              	 .loc 2 1811 0
 2684 011a 084B     	 ldr r3,.L310
 2685 011c 0020     	 movs r0,#0
 2686 011e 83F86B03 	 strb r0,[r3,#875]
 2687              	.LVL300:
 2688              	.LBE101:
 2689              	.LBE100:
 2690              	.LBB102:
 2691              	.LBB103:
1683:G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Include\core_cm4.h ****   }
 2692              	 .loc 2 1683 0
 2693 0122 4FF40062 	 mov r2,#2048
 2694 0126 DA60     	 str r2,[r3,#12]
 2695              	.LVL301:
 2696 0128 38BD     	 pop {r3,r4,r5,pc}
 2697              	.LVL302:
 2698              	.L309:
 2699              	.LBE103:
 2700              	.LBE102:
 2701              	.LBE99:
 2702              	.LBE98:
 400:../Libraries/XMCLib/src/xmc_usbh.c ****       break;
 2703              	 .loc 1 400 0
 2704 012a 6FF00300 	 mvn r0,#3
 2705              	.LVL303:
 2706 012e 38BD     	 pop {r3,r4,r5,pc}
 2707              	.LVL304:
 2708              	.L301:
 417:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 2709              	 .loc 1 417 0
 2710 0130 4FF0FF30 	 mov r0,#-1
 2711              	.LVL305:
 2712 0134 38BD     	 pop {r3,r4,r5,pc}
 2713              	.L302:
 422:../Libraries/XMCLib/src/xmc_usbh.c ****         break;
 2714              	 .loc 1 422 0
 2715 0136 0020     	 movs r0,#0
 2716              	.LVL306:
 494:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2717              	 .loc 1 494 0
 2718 0138 38BD     	 pop {r3,r4,r5,pc}
 2719              	.L311:
 2720 013a 00BF     	 .align 2
 2721              	.L310:
 2722 013c 00E100E0 	 .word -536813312
 2723 0140 00000000 	 .word .LANCHOR1
 2724 0144 80000020 	 .word 536871040
 2725 0148 00000000 	 .word pipe
 2726 014c 2A010001 	 .word 16777514
 2727 0150 180000A3 	 .word -1560281064
 2728              	 .cfi_endproc
 2729              	.LFE191:
 2731              	 .section .text.XMC_USBH_Uninitialize,"ax",%progbits
 2732              	 .align 1
 2733              	 .thumb
 2734              	 .thumb_func
 2736              	XMC_USBH_Uninitialize:
 2737              	.LFB190:
 378:../Libraries/XMCLib/src/xmc_usbh.c ****   XMC_USBH0_device.init_done = false;
 2738              	 .loc 1 378 0
 2739              	 .cfi_startproc
 2740              	 
 2741              	 
 2742 0000 10B5     	 push {r4,lr}
 2743              	.LCFI15:
 2744              	 .cfi_def_cfa_offset 8
 2745              	 .cfi_offset 4,-8
 2746              	 .cfi_offset 14,-4
 379:../Libraries/XMCLib/src/xmc_usbh.c ****   (void)XMC_USBH_PowerControl(XMC_USBH_POWER_OFF);
 2747              	 .loc 1 379 0
 2748 0002 044B     	 ldr r3,.L313
 2749 0004 0024     	 movs r4,#0
 380:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH_DRIVER_OK;
 2750              	 .loc 1 380 0
 2751 0006 2046     	 mov r0,r4
 379:../Libraries/XMCLib/src/xmc_usbh.c ****   (void)XMC_USBH_PowerControl(XMC_USBH_POWER_OFF);
 2752              	 .loc 1 379 0
 2753 0008 1C74     	 strb r4,[r3,#16]
 380:../Libraries/XMCLib/src/xmc_usbh.c ****   return XMC_USBH_DRIVER_OK;
 2754              	 .loc 1 380 0
 2755 000a FFF7FEFF 	 bl XMC_USBH_PowerControl
 2756              	.LVL307:
 382:../Libraries/XMCLib/src/xmc_usbh.c **** 
 2757              	 .loc 1 382 0
 2758 000e 2046     	 mov r0,r4
 2759 0010 10BD     	 pop {r4,pc}
 2760              	.L314:
 2761 0012 00BF     	 .align 2
 2762              	.L313:
 2763 0014 00000000 	 .word .LANCHOR1
 2764              	 .cfi_endproc
 2765              	.LFE190:
 2767              	 .global Driver_USBH0
 2768              	 .comm pipe,448,4
 2769              	 .comm is_nack,14,1
 2770              	 .global VBUS_pin
 2771              	 .global VBUS_port
 2772              	 .section .data.XMC_USBH0_device,"aw",%progbits
 2773              	 .align 2
 2774              	 .set .LANCHOR1,.+0
 2777              	XMC_USBH0_device:
 2778 0000 00000450 	 .word 1342439424
 2779 0004 00050450 	 .word 1342440704
 2780 0008 00000000 	 .word 0
 2781 000c 00000000 	 .word 0
 2782 0010 00       	 .byte 0
 2783 0011 00       	 .byte 0
 2784 0012 00       	 .byte 0
 2785 0013 00       	 .space 1
 2786              	 .section .bss.XMC_USBH0_dfifo_ptr,"aw",%nobits
 2787              	 .align 2
 2788              	 .set .LANCHOR4,.+0
 2791              	XMC_USBH0_dfifo_ptr:
 2792 0000 00000000 	 .space 56
 2792      00000000 
 2792      00000000 
 2792      00000000 
 2792      00000000 
 2793              	 .section .data.VBUS_pin,"aw",%progbits
 2794              	 .align 2
 2795              	 .set .LANCHOR3,.+0
 2798              	VBUS_pin:
 2799 0000 02000000 	 .word 2
 2800              	 .section .data.VBUS_port,"aw",%progbits
 2801              	 .align 2
 2802              	 .set .LANCHOR2,.+0
 2805              	VBUS_port:
 2806 0000 00830248 	 .word 1208124160
 2807              	 .section .rodata.xmc_usbh_driver_version,"a",%progbits
 2808              	 .align 1
 2809              	 .set .LANCHOR0,.+0
 2812              	xmc_usbh_driver_version:
 2813 0000 0102     	 .short 513
 2814 0002 1601     	 .short 278
 2815              	 .section .rodata.Driver_USBH0,"a",%progbits
 2816              	 .align 2
 2819              	Driver_USBH0:
 2820 0000 00000000 	 .word XMC_USBH_GetVersion
 2821 0004 00000000 	 .word XMC_USBH_GetCapabilities
 2822 0008 00000000 	 .word XMC_USBH_Initialize
 2823 000c 00000000 	 .word XMC_USBH_Uninitialize
 2824 0010 00000000 	 .word XMC_USBH_PowerControl
 2825 0014 00000000 	 .word XMC_USBH_PortVbusOnOff
 2826 0018 00000000 	 .word XMC_USBH_PortReset
 2827 001c 00000000 	 .word XMC_USBH_PortSuspend
 2828 0020 00000000 	 .word XMC_USBH_PortResume
 2829 0024 00000000 	 .word XMC_USBH_PortGetState
 2830 0028 00000000 	 .word XMC_USBH_PipeCreate
 2831 002c 00000000 	 .word XMC_USBH_PipeModify
 2832 0030 00000000 	 .word XMC_USBH_PipeDelete
 2833 0034 00000000 	 .word XMC_USBH_PipeReset
 2834 0038 00000000 	 .word XMC_USBH_PipeTransfer
 2835 003c 00000000 	 .word XMC_USBH_PipeTransferGetResult
 2836 0040 00000000 	 .word XMC_USBH_PipeTransferAbort
 2837 0044 00000000 	 .word XMC_USBH_GetFrameNumber
 2838              	 .text
 2839              	.Letext0:
 2840              	 .file 4 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2841              	 .file 5 "c:\\program files\\dave_4\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2842              	 .file 6 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2843              	 .file 7 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc4_scu.h"
 2844              	 .file 8 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc4_gpio.h"
 2845              	 .file 9 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_usbh.h"
 2846              	 .file 10 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 2847              	 .file 11 "G:/dt_g1_balancing_plate_wise20192020/XMC/Libraries/XMCLib/inc/xmc_gpio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbh.c
    {standard input}:20     .text.XMC_USBH_GetVersion:00000000 $t
    {standard input}:24     .text.XMC_USBH_GetVersion:00000000 XMC_USBH_GetVersion
    {standard input}:52     .text.XMC_USBH_GetVersion:00000020 $d
    {standard input}:57     .text.XMC_USBH_GetCapabilities:00000000 $t
    {standard input}:61     .text.XMC_USBH_GetCapabilities:00000000 XMC_USBH_GetCapabilities
    {standard input}:80     .text.XMC_USBH_PortSuspend:00000000 $t
    {standard input}:84     .text.XMC_USBH_PortSuspend:00000000 XMC_USBH_PortSuspend
    {standard input}:132    .text.XMC_USBH_PortSuspend:00000034 $d
    {standard input}:137    .text.XMC_USBH_PortGetState:00000000 $t
    {standard input}:141    .text.XMC_USBH_PortGetState:00000000 XMC_USBH_PortGetState
    {standard input}:188    .text.XMC_USBH_PortGetState:00000034 $d
    {standard input}:193    .text.XMC_USBH_PipeModify:00000000 $t
    {standard input}:197    .text.XMC_USBH_PipeModify:00000000 XMC_USBH_PipeModify
    {standard input}:284    .text.XMC_USBH_PipeModify:00000054 $d
                            *COM*:000001c0 pipe
    {standard input}:291    .text.XMC_USBH_PipeReset:00000000 $t
    {standard input}:295    .text.XMC_USBH_PipeReset:00000000 XMC_USBH_PipeReset
    {standard input}:354    .text.XMC_USBH_PipeReset:00000038 $d
    {standard input}:360    .text.XMC_USBH_PipeDelete:00000000 $t
    {standard input}:364    .text.XMC_USBH_PipeDelete:00000000 XMC_USBH_PipeDelete
    {standard input}:439    .text.XMC_USBH_PipeDelete:00000048 $d
    {standard input}:445    .text.XMC_USBH_PipeCreate:00000000 $t
    {standard input}:449    .text.XMC_USBH_PipeCreate:00000000 XMC_USBH_PipeCreate
    {standard input}:604    .text.XMC_USBH_PipeCreate:000000cc $d
    {standard input}:610    .text.XMC_USBH_PipeTransferGetResult:00000000 $t
    {standard input}:614    .text.XMC_USBH_PipeTransferGetResult:00000000 XMC_USBH_PipeTransferGetResult
    {standard input}:645    .text.XMC_USBH_PipeTransferGetResult:00000014 $d
    {standard input}:651    .text.XMC_USBH_GetFrameNumber:00000000 $t
    {standard input}:655    .text.XMC_USBH_GetFrameNumber:00000000 XMC_USBH_GetFrameNumber
    {standard input}:681    .text.XMC_USBH_GetFrameNumber:00000014 $d
    {standard input}:686    .text.XMC_USBH_PortVbusOnOff:00000000 $t
    {standard input}:690    .text.XMC_USBH_PortVbusOnOff:00000000 XMC_USBH_PortVbusOnOff
    {standard input}:773    .text.XMC_USBH_PortVbusOnOff:00000054 $d
    {standard input}:780    .text.XMC_USBH_Initialize:00000000 $t
    {standard input}:784    .text.XMC_USBH_Initialize:00000000 XMC_USBH_Initialize
    {standard input}:843    .text.XMC_USBH_Initialize:00000038 $d
    {standard input}:851    .text.XMC_lStartTransfer:00000000 $t
    {standard input}:855    .text.XMC_lStartTransfer:00000000 XMC_lStartTransfer
    {standard input}:963    .text.XMC_lStartTransfer:00000080 $d
    {standard input}:967    .text.XMC_lStartTransfer:00000084 $t
    {standard input}:1152   .text.XMC_lStartTransfer:0000015c $d
    {standard input}:1159   .text.XMC_USBH_PipeTransfer:00000000 $t
    {standard input}:1163   .text.XMC_USBH_PipeTransfer:00000000 XMC_USBH_PipeTransfer
    {standard input}:1291   .text.XMC_USBH_PipeTransfer:000000a4 $d
    {standard input}:1297   .text.XMC_USBH_HandleIrq:00000000 $t
    {standard input}:1302   .text.XMC_USBH_HandleIrq:00000000 XMC_USBH_HandleIrq
    {standard input}:1761   .text.XMC_USBH_HandleIrq:00000268 $d
                            *COM*:0000000e is_nack
    {standard input}:1772   .text.XMC_USBH_HandleIrq:00000280 $t
    {standard input}:2057   .text.XMC_USBH_HandleIrq:0000041c $d
    {standard input}:2064   .text.XMC_USBH_GetInterruptStatus:00000000 $t
    {standard input}:2069   .text.XMC_USBH_GetInterruptStatus:00000000 XMC_USBH_GetInterruptStatus
    {standard input}:2085   .text.XMC_USBH_GetInterruptStatus:00000008 $d
    {standard input}:2090   .text.XMC_USBH_Select_VBUS:00000000 $t
    {standard input}:2095   .text.XMC_USBH_Select_VBUS:00000000 XMC_USBH_Select_VBUS
    {standard input}:2120   .text.XMC_USBH_Select_VBUS:00000010 $d
    {standard input}:2126   .text.XMC_USBH_TurnOffResumeBit:00000000 $t
    {standard input}:2131   .text.XMC_USBH_TurnOffResumeBit:00000000 XMC_USBH_TurnOffResumeBit
    {standard input}:2152   .text.XMC_USBH_TurnOffResumeBit:00000014 $d
    {standard input}:2157   .text.XMC_USBH_osDelay:00000000 $t
    {standard input}:2162   .text.XMC_USBH_osDelay:00000000 XMC_USBH_osDelay
    {standard input}:2177   .text.XMC_USBH_PipeTransferAbort:00000000 $t
    {standard input}:2181   .text.XMC_USBH_PipeTransferAbort:00000000 XMC_USBH_PipeTransferAbort
    {standard input}:2296   .text.XMC_USBH_PipeTransferAbort:0000007c $d
    {standard input}:2302   .text.XMC_USBH_PortResume:00000000 $t
    {standard input}:2306   .text.XMC_USBH_PortResume:00000000 XMC_USBH_PortResume
    {standard input}:2377   .text.XMC_USBH_PortResume:0000004c $d
    {standard input}:2382   .text.XMC_USBH_PortReset:00000000 $t
    {standard input}:2386   .text.XMC_USBH_PortReset:00000000 XMC_USBH_PortReset
    {standard input}:2467   .text.XMC_USBH_PortReset:0000005c $d
    {standard input}:2472   .text.XMC_USBH_PowerControl:00000000 $t
    {standard input}:2476   .text.XMC_USBH_PowerControl:00000000 XMC_USBH_PowerControl
    {standard input}:2722   .text.XMC_USBH_PowerControl:0000013c $d
    {standard input}:2732   .text.XMC_USBH_Uninitialize:00000000 $t
    {standard input}:2736   .text.XMC_USBH_Uninitialize:00000000 XMC_USBH_Uninitialize
    {standard input}:2763   .text.XMC_USBH_Uninitialize:00000014 $d
    {standard input}:2819   .rodata.Driver_USBH0:00000000 Driver_USBH0
    {standard input}:2798   .data.VBUS_pin:00000000 VBUS_pin
    {standard input}:2805   .data.VBUS_port:00000000 VBUS_port
    {standard input}:2773   .data.XMC_USBH0_device:00000000 $d
    {standard input}:2777   .data.XMC_USBH0_device:00000000 XMC_USBH0_device
    {standard input}:2787   .bss.XMC_USBH0_dfifo_ptr:00000000 $d
    {standard input}:2791   .bss.XMC_USBH0_dfifo_ptr:00000000 XMC_USBH0_dfifo_ptr
    {standard input}:2794   .data.VBUS_pin:00000000 $d
    {standard input}:2801   .data.VBUS_port:00000000 $d
    {standard input}:2808   .rodata.xmc_usbh_driver_version:00000000 $d
    {standard input}:2812   .rodata.xmc_usbh_driver_version:00000000 xmc_usbh_driver_version
    {standard input}:2816   .rodata.Driver_USBH0:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.ca5ae67a873a4952d630d8e4120b9e3e
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4.features.h.22.bee0aee4a3878f51861c775df98fa3ea
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fe7d912fc917043c98742c35eddd8cff
                           .group:00000000 wm4.config.h.216.aad1ef7bee4fb69981cb38ce62f84d9c
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.4e89a3f145accdcb1100c37260c088e6
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.xmc_device.h.65.5c0d35eb1a6853ff8300ab2ec1b944b0
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.57f124f9262f3dbf77da6a6506ffb430
                           .group:00000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:00000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1500.3eca65ed9ba7f90e09c1ffcb0b3f5724
                           .group:00000000 wm4.xmc_common.h.98.806f17e888fd51d0e4be2ad115163551
                           .group:00000000 wm4.xmc4_scu.h.90.f49c0839764a6c1240876a5f2e586200
                           .group:00000000 wm4.xmc_gpio.h.51.99a4c0bd520ffa931ac6d8600dce89c4
                           .group:00000000 wm4.xmc4_gpio_map.h.77.d73d78de7f4c322ab8caf8e71725793e
                           .group:00000000 wm4.xmc4_gpio.h.79.ce6c49508b5a7769c66e7e3c21dcdfe4
                           .group:00000000 wm4.xmc_usbh.h.104.730df5f3b65e56e65a8795258634f42e

UNDEFINED SYMBOLS
memset
XMC_GPIO_SetMode
XMC_SCU_POWER_DisableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
